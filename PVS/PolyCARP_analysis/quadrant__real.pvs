quadrant__real: THEORY BEGIN

  IMPORTING PolyCARP@polygon_contain

  r_X, r_Y: VAR real

  %
  % The following predicates state each guard appearing in the
  % quadrant_real function.
  %

  orig_r_guard1(r_X,r_Y) : bool = 0 <= r_X AND 0 <= r_Y
  AUTO_REWRITE+ orig_r_guard1
  orig_r_guard2(r_X,r_Y) : bool = r_X <= 0 AND 0 <= r_Y
  AUTO_REWRITE+ orig_r_guard2
  orig_r_guard3(r_X,r_Y) : bool = r_X <= 0
  AUTO_REWRITE+ orig_r_guard3

  %
  % The quadrant_real function is defined below.
  %
  
  quadrant_real(r_X,r_Y): int =
    IF    orig_r_guard1(r_X,r_Y) THEN 1
    ELSIF orig_r_guard2(r_X,r_Y) THEN 2
    ELSIF orig_r_guard3(r_X,r_Y) THEN 3
    ELSE 4
    ENDIF

  %
  % The following predicates state each of the path conditions
  % in the quadrant_real function.
  %
       
  orig_r_case1(r_X,r_Y) : MACRO bool = orig_r_guard1(r_X,r_Y)

  orig_r_case2(r_X,r_Y) : MACRO bool = orig_r_guard2(r_X,r_Y) AND
  			  	       NOT orig_r_guard1(r_X,r_Y)

  orig_r_case3(r_X,r_Y) : MACRO bool = orig_r_guard3(r_X,r_Y) AND
  			  	       NOT orig_r_guard2(r_X,r_Y) AND
  			  	       NOT orig_r_guard1(r_X,r_Y)

  orig_r_case4(r_X,r_Y) : MACRO bool = NOT orig_r_guard3(r_X,r_Y) AND
  			  	       NOT orig_r_guard2(r_X,r_Y) AND
  			  	       NOT orig_r_guard1(r_X,r_Y)

  quadrant_real_control_flow: LEMMA
       orig_r_case1(r_X,r_Y)
    OR orig_r_case2(r_X,r_Y)
    OR orig_r_case3(r_X,r_Y)
    OR orig_r_case4(r_X,r_Y)

  quadrant_real_control_flow_path_1: LEMMA
    orig_r_case1(r_X,r_Y) IMPLIES quadrant_real(r_X,r_Y) = 1
  AUTO_REWRITE+ quadrant_real_control_flow_path_1

  quadrant_real_control_flow_path_2: LEMMA
    orig_r_case2(r_X,r_Y) IMPLIES quadrant_real(r_X,r_Y) = 2
  AUTO_REWRITE+ quadrant_real_control_flow_path_2

  quadrant_real_control_flow_path_3: LEMMA
    orig_r_case3(r_X,r_Y) IMPLIES quadrant_real(r_X,r_Y) = 3
  AUTO_REWRITE+ quadrant_real_control_flow_path_3

  quadrant_real_control_flow_path_4: LEMMA
    orig_r_case4(r_X,r_Y) IMPLIES quadrant_real(r_X,r_Y) = 4
  AUTO_REWRITE+ quadrant_real_control_flow_path_4
    
  %
  % Simplification of the path conditions.
  %

  orig_r_case2_simplification: LEMMA
    orig_r_case2(r_X,r_Y) = (r_X < 0 AND 0 <= r_Y)

  orig_r_case3_simplification: LEMMA
    orig_r_case3(r_X,r_Y) = (r_X <= 0 AND r_Y < 0)

  orig_r_case4_simplification: LEMMA
    orig_r_case4(r_X,r_Y) = (r_Y < 0 AND 0 < r_X)

  %
  %
  %

  polycarp_eq: LEMMA
%    LET s: Vect2 = (r_X,r_Y) IN
    quadrant_real(r_X,r_Y) = polygon_contain.quadrant((r_X,r_Y)::Vect2)

END quadrant__real
