(winding_number_int_loop_inv_preserved
 (goal 0
  (goal-1 nil 3766757164
   ("" (skeep*)
    (("" (beta)
      ((""
        (with-labels (flatten)
         ((nil nil "I<=N" "0<=I" "I<N" "double_E_0 >= 0"
           "double_E_1 >= 0" "double_E_2 >= 0" nil nil "3 <= N" nil nil
           nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
           nil nil nil nil nil nil nil nil nil nil nil nil nil "body"
           "invariant on last iteration" "invariant now" "UNKNOWN")))
        ((""
          (for 30
           (let ((fnum '-11) (dummy (setq fnum (- fnum 1))))
             (hide fnum)))
          (("" (hide -8 -9)
            (("" (name-replace "N" "i")
              (("" (name-replace "I" "i_1")
                (("" (name-replace "double_E_0" "i_9")
                  (("" (name-replace "double_E_2" "i_11")
                    (("" (name-replace "double_E_1" "i_10")
                      (("" (name-replace "Acc_after_body" "i_6")
                        (("" (name-replace "res_after_body" "m_4")
                          (("" (name-replace "res_before_body" "m_3")
                            ((""
                              (hide "body"
                               "invariant on last iteration")
                              ((""
                                (split "invariant now")
                                (("1" (assert) nil nil)
                                 ("2"
                                  (with-labels
                                   (flatten "invariant now")
                                   (("res_after_body is valid"
                                     "invariant now"
                                     "UNKNOWN")))
                                  (("2"
                                    (split "invariant now")
                                    (("1"
                                      (skolem
                                       "invariant now"
                                       ("Sx" "Sy"))
                                      (("1"
                                        (with-labels
                                         (flatten "invariant now")
                                         (("preconditions"
                                           "res after body is correct?"
                                           "UNKNOWN")))
                                        (("1"
                                          (hide "preconditions")
                                          (("1"
                                            (reveal "body")
                                            (("1"
                                              (with-labels
                                               (split "body")
                                               (("body prev res is valid"
                                                 "UNKNOWN")))
                                              (("1" (flatten) nil nil)
                                               ("2"
                                                (with-labels
                                                 (flatten
                                                  "body prev res is valid")
                                                 (("res_before_body is valid"
                                                   "i_2 rename"
                                                   "body prev res is valid"
                                                   "UNKNOWN")))
                                                (("2"
                                                  (replace
                                                   "i_2 rename"
                                                   :dir
                                                   rl
                                                   :hide?
                                                   t)
                                                  (("2"
                                                    (hide
                                                     "body prev res is valid")
                                                    (("2"
                                                      (lemma
                                                       "FixL_for_winding_number1")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "I"
                                                         "N"
                                                         "Sx"
                                                         "Sy"
                                                         "t"
                                                         "a_1"
                                                         "a")
                                                        (("2"
                                                          (beta)
                                                          (("2"
                                                            (split -1)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (split
                                                                 -2)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (replace
                                                                     -2
                                                                     :hide?
                                                                     t)
                                                                    (("1"
                                                                      (reveal
                                                                       "body prev res is valid")
                                                                      (("1"
                                                                        (replace
                                                                         -3
                                                                         :dir
                                                                         rl)
                                                                        (("1"
                                                                          (split
                                                                           "body prev res is valid")
                                                                          (("1"
                                                                            (with-labels
                                                                             (flatten)
                                                                             (("2 <= N"
                                                                               "NOT p_1"
                                                                               "i_2 rename"
                                                                               "res_after_body calculation"
                                                                               "contrib"
                                                                               "UNKNOWN")))
                                                                            (("1"
                                                                              (replace
                                                                               "i_2 rename"
                                                                               :dir
                                                                               rl
                                                                               :hide?
                                                                               t)
                                                                              (("1"
                                                                                (hide
                                                                                 "contrib")
                                                                                (("1"
                                                                                  (split
                                                                                   "res_after_body calculation")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (with-labels
                                                                                     (flatten
                                                                                      "res_after_body calculation")
                                                                                     (("res_before_body is valid"
                                                                                       "res_after_body rename"
                                                                                       "trivial"
                                                                                       "Acc_after_body = res_after_body"
                                                                                       "res_after_body calculation"
                                                                                       "UNKNOWN")))
                                                                                    (("2"
                                                                                      (replace
                                                                                       "res_after_body rename"
                                                                                       :hide?
                                                                                       t)
                                                                                      (("2"
                                                                                        (replace
                                                                                         "Acc_after_body = res_after_body"
                                                                                         :hide?
                                                                                         t)
                                                                                        (("2"
                                                                                          (hide
                                                                                           "trivial")
                                                                                          (("2"
                                                                                            (replace
                                                                                             "res_after_body calculation"
                                                                                             :hide?
                                                                                             t
                                                                                             :dir
                                                                                             rl)
                                                                                            (("2"
                                                                                              (reveal
                                                                                               "invariant on last iteration")
                                                                                              (("2"
                                                                                                (split
                                                                                                 "invariant on last iteration")
                                                                                                (("1"
                                                                                                  (with-labels
                                                                                                   (flatten
                                                                                                    "invariant on last iteration")
                                                                                                   (("case I=0"
                                                                                                     "case I>0"
                                                                                                     "UNKNOWN")))
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     "case I>0")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       "case I=0")
                                                                                                      (("1"
                                                                                                        (reveal
                                                                                                         "contrib")
                                                                                                        (("1"
                                                                                                          (inst?
                                                                                                           "contrib"
                                                                                                           :where
                                                                                                           "res after body is correct?")
                                                                                                          (("1"
                                                                                                            (reveal
                                                                                                             "preconditions")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               "preconditions"
                                                                                                               "0")
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   "contrib")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("4"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("5"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("6"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("7"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (replace
                                                                     -1
                                                                     :hide?
                                                                     t)
                                                                    (("2"
                                                                      (reveal
                                                                       "body prev res is valid")
                                                                      (("2"
                                                                        (replace
                                                                         -2
                                                                         :dir
                                                                         rl)
                                                                        (("2"
                                                                          (split
                                                                           "body prev res is valid")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (split
                                                                 -1)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (replace
                                                                     -2
                                                                     :hide?
                                                                     t)
                                                                    (("1"
                                                                      (reveal
                                                                       "body prev res is valid")
                                                                      (("1"
                                                                        (split
                                                                         "body prev res is valid")
                                                                        (("1"
                                                                          (with-labels
                                                                           (flatten)
                                                                           (("I <= N-2"
                                                                             "NOT p_1"
                                                                             "i_2 rename"
                                                                             "res_after_body calculation"
                                                                             "contrib"
                                                                             "UNKNOWN")))
                                                                          (("1"
                                                                            (replace
                                                                             "i_2 rename"
                                                                             :dir
                                                                             rl
                                                                             :hide?
                                                                             t)
                                                                            (("1"
                                                                              (hide
                                                                               "contrib")
                                                                              (("1"
                                                                                (split
                                                                                 "res_after_body calculation")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (with-labels
                                                                                   (flatten
                                                                                    "res_after_body calculation")
                                                                                   (("res_before_body is valid"
                                                                                     "res_after_body rename"
                                                                                     "trivial"
                                                                                     "Acc_after_body = res_after_body"
                                                                                     "res_after_body calculation"
                                                                                     "UNKNOWN")))
                                                                                  (("2"
                                                                                    (replace
                                                                                     "res_after_body rename"
                                                                                     :hide?
                                                                                     t)
                                                                                    (("2"
                                                                                      (replace
                                                                                       "Acc_after_body = res_after_body"
                                                                                       :hide?
                                                                                       t)
                                                                                      (("2"
                                                                                        (hide
                                                                                         "trivial")
                                                                                        (("2"
                                                                                          (replace
                                                                                           "res_after_body calculation"
                                                                                           :hide?
                                                                                           t
                                                                                           :dir
                                                                                           rl)
                                                                                          (("2"
                                                                                            (reveal
                                                                                             "invariant on last iteration")
                                                                                            (("2"
                                                                                              (split
                                                                                               "invariant on last iteration")
                                                                                              (("1"
                                                                                                (with-labels
                                                                                                 (flatten
                                                                                                  "invariant on last iteration")
                                                                                                 (("case I=0"
                                                                                                   "case I>0"
                                                                                                   "UNKNOWN")))
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   "case I=0")
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     "case I>0")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       "case I>0"
                                                                                                       "Sx"
                                                                                                       "Sy")
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         "case I>0")
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             :hide?
                                                                                                             t)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1
                                                                                                               :hide?
                                                                                                               t)
                                                                                                              (("1"
                                                                                                                (reveal
                                                                                                                 "contrib")
                                                                                                                (("1"
                                                                                                                  (inst?
                                                                                                                   "contrib"
                                                                                                                   :where
                                                                                                                   "res after body is correct?")
                                                                                                                  (("1"
                                                                                                                    (reveal
                                                                                                                     "preconditions")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       "preconditions"
                                                                                                                       "I")
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         "contrib")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("4"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("5"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("6"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("7"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (reveal
                                                                                                           "preconditions")
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (replace
                                                                     -1
                                                                     :hide?
                                                                     t)
                                                                    (("2"
                                                                      (reveal
                                                                       "body prev res is valid")
                                                                      (("2"
                                                                        (split
                                                                         "body prev res is valid")
                                                                        (("1"
                                                                          (with-labels
                                                                           (flatten)
                                                                           (("I <= N-2"
                                                                             "NOT p_1"
                                                                             "i_2 rename"
                                                                             "res_after_body calculation"
                                                                             "contrib"
                                                                             "UNKNOWN")))
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (with-labels
                                                                           (flatten)
                                                                           (("I > N-2"
                                                                             "NOT p"
                                                                             "i_2 rename"
                                                                             "res_after_body calculation"
                                                                             "contrib"
                                                                             "UNKNOWN")))
                                                                          (("2"
                                                                            (replace
                                                                             "i_2 rename"
                                                                             :dir
                                                                             rl
                                                                             :hide?
                                                                             t)
                                                                            (("2"
                                                                              (hide
                                                                               "contrib")
                                                                              (("2"
                                                                                (split
                                                                                 "res_after_body calculation")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (with-labels
                                                                                   (flatten
                                                                                    "res_after_body calculation")
                                                                                   (("res_before_body is valid"
                                                                                     "res_after_body rename"
                                                                                     "trivial"
                                                                                     "Acc_after_body = res_after_body"
                                                                                     "res_after_body calculation"
                                                                                     "UNKNOWN")))
                                                                                  (("2"
                                                                                    (replace
                                                                                     "res_after_body rename"
                                                                                     :hide?
                                                                                     t)
                                                                                    (("2"
                                                                                      (replace
                                                                                       "Acc_after_body = res_after_body"
                                                                                       :hide?
                                                                                       t)
                                                                                      (("2"
                                                                                        (hide
                                                                                         "trivial")
                                                                                        (("2"
                                                                                          (replace
                                                                                           "res_after_body calculation"
                                                                                           :hide?
                                                                                           t
                                                                                           :dir
                                                                                           rl)
                                                                                          (("2"
                                                                                            (reveal
                                                                                             "invariant on last iteration")
                                                                                            (("2"
                                                                                              (split
                                                                                               "invariant on last iteration")
                                                                                              (("1"
                                                                                                (with-labels
                                                                                                 (flatten
                                                                                                  "invariant on last iteration")
                                                                                                 (("case I=0"
                                                                                                   "case I>0"
                                                                                                   "UNKNOWN")))
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   "case I=0")
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     "case I>0")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       "case I>0"
                                                                                                       "Sx"
                                                                                                       "Sy")
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         "case I>0")
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             :hide?
                                                                                                             t)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1
                                                                                                               :hide?
                                                                                                               t)
                                                                                                              (("1"
                                                                                                                (reveal
                                                                                                                 "contrib")
                                                                                                                (("1"
                                                                                                                  (inst?
                                                                                                                   "contrib"
                                                                                                                   :where
                                                                                                                   "res after body is correct?")
                                                                                                                  (("1"
                                                                                                                    (reveal
                                                                                                                     "preconditions")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       "preconditions"
                                                                                                                       "I")
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         "contrib")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("4"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("5"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("6"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("7"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (reveal
                                                                                                           "preconditions")
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (addr type-decl nil memory "./framac_wp/")
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (of_float64 const-decl "real" cfloat "./framac_wp/")
    (shift_float64 const-decl "addr" Compound nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_plus_even_is_even application-judgement "even_int" integers
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (FixL_for_winding_number1 formula-decl nil
     A_real_function_for_winding_number1 nil)
    (S8_maybeInt type-eq-decl nil S8_maybeInt nil)
    (float type-eq-decl nil float "float/")
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (above nonempty-type-eq-decl nil integers nil)
    (Format type-eq-decl nil float "float/")
    (Fcanonic? const-decl "bool" float "float/")
    (double_precision_format const-decl "Format" ieee754dp "float/")
    (ieee_float64 type-eq-decl nil cfloat "./framac_wp/")
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (int_plus_int_is_int application-judgement "int" integers nil))
   shostak)))

