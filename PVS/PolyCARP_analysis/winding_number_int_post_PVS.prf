(winding_number_int_post
 (goal 0
  (goal-1 nil 3764092022
   ("" (skeep*)
    (("" (beta)
      (("" (flatten)
        (("" (expand "L_winding_number")
          (("" (assert)
            (("" (inst -31 "r_1" "r")
              (("" (assert)
                (("" (skeep)
                  (("" (inst -29 "i_8")
                    (("" (assert)
                      (("" (split 3)
                        (("1" (flatten) nil nil)
                         ("2" (flatten) nil nil)
                         ("3" (flatten) nil nil)
                         ("4" (flatten) nil nil)
                         ("5" (flatten) (("5" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((minus_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (L_winding_number const-decl "int" A_real_function_winding_number
     nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   shostak)))

