(multipoly
 (polygons_overlap_TCC1 0
  (polygons_overlap_TCC1-1 nil 3671366922 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (definitely_outside const-decl "bool" polygon_contain nil)
    (winding_number const-decl
     "{ii: int | ii = winding_number_rec(N, p, s, N - 1) / 4}"
     polygon_contain nil)
    (definitely_outside_prelim const-decl "bool" polygon_contain nil)
    (mod const-decl "{k | abs(k) < abs(j)}" mod nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (int_plus_int_is_int application-judgement "int" integers nil))
   nil))
 (polygons_overlap_TCC2 0
  (polygons_overlap_TCC2-1 nil 3671366922 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (definitely_outside const-decl "bool" polygon_contain nil)
    (winding_number const-decl
     "{ii: int | ii = winding_number_rec(N, p, s, N - 1) / 4}"
     polygon_contain nil)
    (definitely_outside_prelim const-decl "bool" polygon_contain nil)
    (mod const-decl "{k | abs(k) < abs(j)}" mod nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (int_plus_int_is_int application-judgement "int" integers nil))
   nil))
 (polygons_overlap_def 0
  (polygons_overlap_def-1 nil 3671366961
   ("" (skeep*)
    (("" (ground)
      (("1" (expand "polygons_overlap")
        (("1" (replace 1)
          (("1" (replace 2)
            (("1" (ground)
              (("1" (hide (1 2))
                (("1" (skeep*)
                  (("1" (insteep +)
                    (("1" (lemma "segments_2D_close_def")
                      (("1" (inst?)
                        (("1" (replace -2) (("1" (assert) nil nil))
                          nil)
                         ("2" (ground) nil nil) ("3" (ground) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (expand "polygons_overlap")
        (("2" (replace -1) (("2" (propax) nil nil)) nil)) nil)
       ("3" (expand "polygons_overlap")
        (("3" (replace -1) (("3" (ground) nil nil)) nil)) nil)
       ("4" (expand "polygons_overlap")
        (("4" (ground)
          (("4" (skeep*)
            (("4" (insteep +)
              (("4" (lemma "segments_2D_close_def")
                (("4" (inst?)
                  (("1" (replace 1)
                    (("1" (assert)
                      (("1" (insteep +)
                        (("1" (assert)
                          (("1" (replace -1) (("1" (propax) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (ground) nil nil) ("3" (ground) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (segments_2D_close_def formula-decl nil edge_proximity nil)
    (polygon_2D type-eq-decl nil acceptable_polygon nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (M skolem-const-decl "posnat" multipoly nil)
    (j skolem-const-decl "below(M)" multipoly nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (N skolem-const-decl "posnat" multipoly nil)
    (i skolem-const-decl "below(N)" multipoly nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (polygons_overlap const-decl "bool" multipoly nil)
    (i skolem-const-decl "below(N)" multipoly nil)
    (j skolem-const-decl "below(M)" multipoly nil)
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   shostak))
 (parallel_segments_overlap 0
  (parallel_segments_overlap-1 nil 3671874508
   ("" (skeep*)
    (("" (lemma "on_segment_2D_alg_def")
      (("" (case "a = zero")
        (("1" (replaces -1)
          (("1" (hide -)
            (("1" (expand "on_segment_2D?")
              (("1" (inst + "0")
                (("1" (hide-all-but 1) (("1" (grind) nil nil)) nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (case "NOT norm(a)>0")
          (("1" (lemma "vectors_2D.norm_eq_0")
            (("1" (inst?) (("1" (assert) nil nil)) nil)) nil)
           ("2" (case "NOT sqv(a)>0")
            (("1" (lemma "vectors_2D.sqv_eq_0")
              (("1" (inst?) (("1" (assert) nil nil)) nil)) nil)
             ("2" (rewrite -3 :dir rl)
              (("2" (rewrite -3 :dir rl)
                (("2" (rewrite -3 :dir rl)
                  (("2" (rewrite -3 :dir rl)
                    (("2" (hide -3)
                      (("2" (expand "on_segment_2D_alg")
                        (("2" (flatten)
                          (("2" (assert)
                            (("2" (typepred "nzk")
                              (("2"
                                (typepred "p1")
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (typepred "p2")
                                    (("2"
                                      (hide -1)
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (case
                                           "FORALL (z1:real): z1*a-a = (z1-1)*a")
                                          (("1"
                                            (rewrite -1)
                                            (("1"
                                              (rewrite -1)
                                              (("1"
                                                (rewrite -1)
                                                (("1"
                                                  (hide -1)
                                                  (("1"
                                                    (case
                                                     "FORALL (z1:real): a-(z1)*a=(1-z1)*a")
                                                    (("1"
                                                      (rewrite -1)
                                                      (("1"
                                                        (rewrite -1)
                                                        (("1"
                                                          (rewrite -1)
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (case
                                                               "FORALL (z1,z2:real): z1*a-z2*a=(z1-z2)*a")
                                                              (("1"
                                                                (rewrite
                                                                 -1)
                                                                (("1"
                                                                  (rewrite
                                                                   -1)
                                                                  (("1"
                                                                    (rewrite
                                                                     -1)
                                                                    (("1"
                                                                      (rewrite
                                                                       -1)
                                                                      (("1"
                                                                        (rewrite
                                                                         -1)
                                                                        (("1"
                                                                          (rewrite
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (rewrite
                                                                               "norm_scal")
                                                                              (("1"
                                                                                (rewrite
                                                                                 "norm_scal")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "norm_scal")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "norm_scal")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "norm_scal")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "norm_scal")
                                                                                        (("1"
                                                                                          (case
                                                                                           "FORALL (z1:real): abs(z1)*norm(a)=0 IFF z1=0")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             -1)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               -1)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "FORALL (z1:real): abs(z1)*norm(a)>0 IFF z1/=0")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "FORALL (z1,z2:real): det(z1*a,z2*a)=0")
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "FORALL (z1,z2:real): (z1*a)*(z2*a)>=0 IFF z1*z2>=0")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (rewrite
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (rewrite
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (hide
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               (-3
                                                                                                                                                -4
                                                                                                                                                2))
                                                                                                                                              (("1"
                                                                                                                                                (metit
                                                                                                                                                 *)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             (-
                                                                                                                              1))
                                                                                                                            (("2"
                                                                                                                              (skeep*)
                                                                                                                              (("2"
                                                                                                                                (ground)
                                                                                                                                (("1"
                                                                                                                                  (mult-by
                                                                                                                                   1
                                                                                                                                   "sqv(a)")
                                                                                                                                  (("1"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (mult-by
                                                                                                                                   -1
                                                                                                                                   "sqv(a)")
                                                                                                                                  (("2"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         (-
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (skeep*)
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "abs(z1)>0")
                                                                                                              (("1"
                                                                                                                (mult-by
                                                                                                                 -1
                                                                                                                 "norm(a)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (case
                                                                                                               "abs(z1)>0")
                                                                                                              (("1"
                                                                                                                (mult-by
                                                                                                                 -1
                                                                                                                 "norm(a)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             (-
                                                                                              1))
                                                                                            (("2"
                                                                                              (skeep*)
                                                                                              (("2"
                                                                                                (ground)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "abs(z1)>0")
                                                                                                  (("1"
                                                                                                    (mult-by
                                                                                                     -1
                                                                                                     "norm(a)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide-all-but 1)
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((on_segment_2D_alg_def formula-decl nil detection nil)
    (norm const-decl "nnreal" vectors_2D "vectors/")
    (scal_assoc formula-decl nil vectors_2D "vectors/")
    (norm_eq_0 formula-decl nil vectors_2D "vectors/")
    (norm_scal formula-decl nil vectors_2D "vectors/")
    (det const-decl "real" det_2D "vectors/")
    (* const-decl "real" vectors_2D "vectors/")
    (dot_scal_right formula-decl nil vectors_2D "vectors/")
    (dot_scal_left formula-decl nil vectors_2D "vectors/")
    (abs_nat formula-decl nil abs_lems "reals/")
    (on_segment_2D_alg const-decl "bool" detection nil)
    (sqv_eq_0 formula-decl nil vectors_2D "vectors/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (sqv const-decl "nnreal" vectors_2D "vectors/")
    (on_segment_2D? const-decl "bool" edge_proximity nil)
    (comp_zero_x formula-decl nil vectors_2D "vectors/")
    (comp_zero_y formula-decl nil vectors_2D "vectors/")
    (* const-decl "Vector" vectors_2D "vectors/")
    (+ const-decl "Vector" vectors_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (zero const-decl "Vector" vectors_2D "vectors/"))
   shostak))
 (open_segment_2Ds_cross_rew2 0
  (open_segment_2Ds_cross_rew2-1 nil 3671873966
   ("" (expand "open_segment_2Ds_cross")
    ((""
      (case "NOT FORALL (a, b, c, d: Vect2):
                                                  (
                                                     on_strict_segment_2D?(a, b, zero) AND
                                                      on_strict_segment_2D?(c, d, zero))
                                                   IMPLIES
                                                   (    on_segment_2D?(a, b, c)
                                                     OR on_segment_2D?(a, b, d)
                                                     OR on_segment_2D?(c, d, a)
                                                     OR on_segment_2D?(c, d, b)
                                                     OR (EXISTS (eps1, eps2: Sign):
                          eps1 * det(c - a, b - a) > 0
                      AND eps1 * det(d - a, b - a) < 0
                      AND eps2 * det(a - c, d - c) > 0
                      AND eps2 * det(b - c, d - c) < 0
                      AND ((c - a) * (b - a) > 0 OR (d - a) * (b - a) > 0)
                      AND ((c - b) * (a - b) > 0 OR (d - b) * (a - b) > 0)
                      AND ((a - c) * (d - c) > 0 OR (b - c) * (d - c) > 0)
                      AND ((a - d) * (c - d) > 0 OR (b - d) * (c - d) > 0)))")
      (("1" (hide 2)
        (("1" (skeep*)
          (("1" (expand "on_strict_segment_2D?")
            (("1" (skolem - "t1")
              (("1" (skolem - "t2")
                (("1" (expand "on_strict_segment_2D_at?")
                  (("1" (flatten)
                    (("1"
                      (case "EXISTS (k1,k2:posreal): b=-k1*a AND d=-k2*c")
                      (("1" (skeep -)
                        (("1" (name "eps1" "sign(det(c - a, b - a))")
                          (("1" (name "eps2" "sign(det(a - c, d - c))")
                            (("1" (inst + "eps1" "eps2")
                              (("1"
                                (assert)
                                (("1"
                                  (split +)
                                  (("1"
                                    (case "det(c-a,b-a)/=0")
                                    (("1"
                                      (hide-all-but (-1 1))
                                      (("1"
                                        (expand "eps1")
                                        (("1" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (replace -4 -1)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (case
                                             "NOT (1+k1)*det(c,a)=0")
                                            (("1"
                                              (hide-all-but (-1 1))
                                              (("1" (grind) nil nil))
                                              nil)
                                             ("2"
                                              (lemma
                                               "nzreal_times_nzreal_is_nzreal")
                                              (("2"
                                                (inst?)
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (lemma
                                                     "parallel_det_0")
                                                    (("2"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "parallel?")
                                                          (("1"
                                                            (skeep*)
                                                            (("1"
                                                              (lemma
                                                               "parallel_segments_overlap")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "a"
                                                                 "nzk"
                                                                 "k1"
                                                                 "k2")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     -2)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (replaces -1)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "on_segment_2D?")
                                                              (("2"
                                                                (inst
                                                                 4
                                                                 "t2")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (flatten)
                                                        (("3"
                                                          (replace -1)
                                                          (("3"
                                                            (expand
                                                             "on_segment_2D?")
                                                            (("3"
                                                              (inst
                                                               +
                                                               "t1")
                                                              (("3"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (case "eps1*det(d,a)>0")
                                    (("1"
                                      (mult-by -1 "1+k1")
                                      (("1"
                                        (replace -4 1)
                                        (("1"
                                          (hide-all-but (-1 1))
                                          (("1" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case
                                       "NOT eps1 = sign(-det(c,a))")
                                      (("1"
                                        (expand "eps1" 1)
                                        (("1"
                                          (replace -3 1)
                                          (("1"
                                            (expand "sign" 1)
                                            (("1"
                                              (lift-if)
                                              (("1"
                                                (lift-if)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (ground)
                                                      (("1"
                                                        (mult-by
                                                         1
                                                         "1+k1")
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (mult-by
                                                         -1
                                                         "1+k1")
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (replace -1 1)
                                        (("2"
                                          (replace -5 1)
                                          (("2"
                                            (case "det(c,a)/=0")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (expand "sign" 2)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (ground)
                                                    (("1"
                                                      (mult-by -1 "k2")
                                                      (("1"
                                                        (mult-by
                                                         2
                                                         "k2")
                                                        (("1"
                                                          (hide-all-but
                                                           (-1 1 2))
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but
                                                       (1 2 3))
                                                      (("2"
                                                        (mult-by
                                                         1
                                                         "k2")
                                                        (("2"
                                                          (mult-by
                                                           3
                                                           "k2")
                                                          (("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (lemma
                                                   "parallel_det_0")
                                                  (("2"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "parallel?")
                                                        (("1"
                                                          (skeep*)
                                                          (("1"
                                                            (lemma
                                                             "parallel_segments_overlap")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "a"
                                                               "nzk"
                                                               "k1"
                                                               "k2")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -2)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (replaces -1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "on_segment_2D?")
                                                            (("2"
                                                              (inst
                                                               5
                                                               "t2")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (flatten)
                                                      (("3"
                                                        (replace -1)
                                                        (("3"
                                                          (assert)
                                                          (("3"
                                                            (expand
                                                             "on_segment_2D?")
                                                            (("3"
                                                              (inst
                                                               +
                                                               "t1")
                                                              (("3"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3"
                                    (case
                                     "NOT det(a-c,d-c) = -(1+k2)*det(a,c)")
                                    (("1"
                                      (replace -4 1)
                                      (("1"
                                        (hide-all-but 1)
                                        (("1" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case "NOT det(a-c,d-c)=0")
                                      (("1"
                                        (hide-all-but (-2 1 2))
                                        (("1" (grind) nil nil))
                                        nil)
                                       ("2"
                                        (replace -2)
                                        (("2"
                                          (lemma
                                           "nzreal_times_nzreal_is_nzreal")
                                          (("2"
                                            (inst?)
                                            (("1" (assert) nil nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (lemma
                                                 "parallel_det_0")
                                                (("2"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "parallel?")
                                                      (("1"
                                                        (skeep*)
                                                        (("1"
                                                          (lemma
                                                           "parallel_segments_overlap")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "c"
                                                             "nzk"
                                                             "k2"
                                                             "k1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 -2)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (replaces -1)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "on_segment_2D?")
                                                          (("2"
                                                            (inst
                                                             +
                                                             "t1")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (flatten)
                                                    (("3"
                                                      (replaces -1)
                                                      (("3"
                                                        (assert)
                                                        (("3"
                                                          (expand
                                                           "on_segment_2D?")
                                                          (("3"
                                                            (inst
                                                             4
                                                             "t2")
                                                            (("3"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("4"
                                    (case
                                     "NOT det(a-c,d-c) = -(1+k2)*det(a,c)")
                                    (("1"
                                      (replace -4 1)
                                      (("1"
                                        (hide-all-but 1)
                                        (("1" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (replace -1)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (case
                                           "NOT eps2 = sign(-det(a,c))")
                                          (("1"
                                            (hide-all-but (-2 1))
                                            (("1"
                                              (replaces -1 :dir rl)
                                              (("1"
                                                (expand "sign")
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (ground)
                                                        (("1"
                                                          (mult-by
                                                           1
                                                           "1+k2")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (mult-by
                                                           -1
                                                           "1+k2")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (replace -5 1)
                                            (("2"
                                              (replace -6 1)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (case
                                                   "NOT det(-k1 * a - c, -k2 * c - c) = k1*(1+k2)*det(a,c)")
                                                  (("1"
                                                    (hide-all-but 1)
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (replaces -1)
                                                    (("2"
                                                      (case
                                                       "eps2*det(a,c)<0")
                                                      (("1"
                                                        (mult-by
                                                         -1
                                                         "k1*(1+k2)")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (replace -1)
                                                        (("2"
                                                          (case
                                                           "det(a,c)/=0")
                                                          (("1"
                                                            (hide-all-but
                                                             (-1 1))
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (lemma
                                                               "parallel_det_0")
                                                              (("2"
                                                                (inst?)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "parallel?")
                                                                    (("1"
                                                                      (skeep*)
                                                                      (("1"
                                                                        (lemma
                                                                         "parallel_segments_overlap")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "c"
                                                                           "nzk"
                                                                           "k2"
                                                                           "k1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               -2)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (replaces
                                                                     -1)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "on_segment_2D?")
                                                                        (("2"
                                                                          (inst
                                                                           +
                                                                           "t1")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (flatten)
                                                                  (("3"
                                                                    (replaces
                                                                     -1)
                                                                    (("3"
                                                                      (assert)
                                                                      (("3"
                                                                        (expand
                                                                         "on_segment_2D?")
                                                                        (("3"
                                                                          (inst
                                                                           5
                                                                           "t2")
                                                                          (("3"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("5"
                                    (flatten)
                                    (("5"
                                      (replace -3 (1 2))
                                      (("5"
                                        (replace -4 (1 2))
                                        (("5"
                                          (case "c*a<a*a")
                                          (("1"
                                            (mult-by -1 "1+k1")
                                            (("1"
                                              (hide-all-but (-1 1))
                                              (("1" (grind) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (case "(-k2)*(c*a)<a*a")
                                            (("1"
                                              (mult-by -1 "1+k1")
                                              (("1"
                                                (hide-all-but (-1 3))
                                                (("1" (grind) nil nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide (3 4))
                                              (("2"
                                                (case "sqv(a)>0")
                                                (("1"
                                                  (expand "sqv")
                                                  (("1"
                                                    (case "c*a>=0")
                                                    (("1"
                                                      (mult-by -1 "k2")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (lemma
                                                   "vectors_2D.sqv_eq_0")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (expand
                                                           "on_segment_2D?"
                                                           6)
                                                          (("2"
                                                            (inst
                                                             +
                                                             "t2")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("6"
                                    (flatten)
                                    (("6"
                                      (replace -3 (1 2))
                                      (("6"
                                        (replace -4 (1 2))
                                        (("6"
                                          (assert)
                                          (("6"
                                            (case "c*a>(-k1)*(a*a)")
                                            (("1"
                                              (hide-all-but (-1 1))
                                              (("1"
                                                (mult-by -1 "1+k1")
                                                (("1" (grind) nil nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (case
                                                 "(-k2)*(c*a)>(-k1)*(a*a)")
                                                (("1"
                                                  (hide-all-but (-1 2))
                                                  (("1"
                                                    (mult-by -1 "1+k1")
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 3)
                                                  (("2"
                                                    (case "sqv(a)>0")
                                                    (("1"
                                                      (mult-by -1 "k1")
                                                      (("1"
                                                        (expand "sqv")
                                                        (("1"
                                                          (case
                                                           "c*a>=0")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (mult-by
                                                             1
                                                             "k2")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (lemma
                                                       "vectors_2D.sqv_eq_0")
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (replace
                                                             -1)
                                                            (("2"
                                                              (expand
                                                               "on_segment_2D?"
                                                               6)
                                                              (("2"
                                                                (inst
                                                                 +
                                                                 "t2")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("7"
                                    (flatten)
                                    (("7"
                                      (replace -3 (1 2))
                                      (("7"
                                        (replace -4 (1 2))
                                        (("7"
                                          (case "a*c<c*c")
                                          (("1"
                                            (mult-by -1 "1+k2")
                                            (("1"
                                              (hide-all-but (-1 1))
                                              (("1" (grind) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (case "(-k1)*(a*c)<c*c")
                                              (("1"
                                                (mult-by -1 "1+k2")
                                                (("1"
                                                  (hide-all-but (-1 2))
                                                  (("1"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 3)
                                                (("2"
                                                  (case "sqv(c)>0")
                                                  (("1"
                                                    (expand "sqv")
                                                    (("1"
                                                      (case "a*c<=0")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (mult-by
                                                         1
                                                         "k1")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (lemma
                                                     "vectors_2D.sqv_eq_0")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (expand
                                                             "on_segment_2D?"
                                                             +)
                                                            (("2"
                                                              (inst
                                                               +
                                                               "t1")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("8"
                                    (flatten)
                                    (("8"
                                      (replace -3 (1 2))
                                      (("8"
                                        (replace -4 (1 2))
                                        (("8"
                                          (assert)
                                          (("8"
                                            (case "a*c>(-k2)*(c*c)")
                                            (("1"
                                              (mult-by -1 "1+k2")
                                              (("1"
                                                (hide-all-but (-1 1))
                                                (("1" (grind) nil nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (case
                                                 "(-k1)*(a*c)>(-k2)*(c*c)")
                                                (("1"
                                                  (mult-by -1 "1+k2")
                                                  (("1"
                                                    (hide-all-but
                                                     (-1 2))
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 3)
                                                  (("2"
                                                    (case "sqv(c)>0")
                                                    (("1"
                                                      (mult-by -1 "k2")
                                                      (("1"
                                                        (case "a*c>=0")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "sqv")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (mult-by
                                                           1
                                                           "k1")
                                                          (("2"
                                                            (expand
                                                             "sqv")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (lemma
                                                       "vectors_2D.sqv_eq_0")
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (replace
                                                             -1)
                                                            (("2"
                                                              (expand
                                                               "on_segment_2D?"
                                                               +)
                                                              (("2"
                                                                (inst
                                                                 +
                                                                 "t1")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert)
                        (("2" (hide 6)
                          (("2" (both-sides "-" "t1*b" -3)
                            (("1" (assert)
                              (("1"
                                (case
                                 "NOT (1/(-t1))*(-(t1 * b)) = (1/(-t1))*((1 - t1) * a)")
                                (("1"
                                  (assert)
                                  (("1"
                                    (replace -3)
                                    (("1" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (assert)
                                  (("2"
                                    (case
                                     "NOT (1 / (-t1)) * (-(t1 * b)) = b+zero")
                                    (("1"
                                      (hide-all-but 1)
                                      (("1" (grind) nil nil))
                                      nil)
                                     ("2"
                                      (replaces -1)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (both-sides "-" "t2*d" -7)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (case
                                               "NOT (1/(-t2))*(-(t2 * d)) = (1/(-t2))*((1 - t2) * c)")
                                              (("1"
                                                (replace -7)
                                                (("1"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (case
                                                 "NOT (1 / (-t2)) * (-(t2 * d)) = d+zero")
                                                (("1"
                                                  (hide-all-but 1)
                                                  (("1"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (replaces -1)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst
                                                       +
                                                       "(1-t1)/t1"
                                                       "(1-t2)/t2")
                                                      (("1"
                                                        (replace -2 1)
                                                        (("1"
                                                          (replace
                                                           -1
                                                           1)
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (hide-all-but
                                                               1)
                                                              (("1"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (case
                                                         "(1-t2)/t2>0")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (cross-mult
                                                           1)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (case
                                                         "(1-t1)/t1>0")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (cross-mult
                                                           1)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (iff)
                                            (("2"
                                              (ground)
                                              (("2"
                                                (hide-all-but (-1 1))
                                                (("2"
                                                  (case
                                                   "vectors_2D.zero`x = ((1 - t2) * c + t2 * d)`x AND vectors_2D.zero`y = ((1 - t2) * c + t2 * d)`y")
                                                  (("1"
                                                    (hide -2)
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (replace -1)
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (iff)
                              (("2"
                                (hide-all-but 1)
                                (("2"
                                  (ground)
                                  (("2"
                                    (case
                                     "vectors_2D.zero`x = ((1 - t1) * a + t1 * b)`x AND vectors_2D.zero`y = ((1 - t1) * a + t1 * b)`y")
                                    (("1"
                                      (hide -2)
                                      (("1" (grind) nil nil))
                                      nil)
                                     ("2"
                                      (replace -1)
                                      (("2" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (skeep*)
        (("2" (split)
          (("1" (flatten)
            (("1" (skeep)
              (("1" (inst - "a-s" "b-s" "c-s" "d-s")
                (("1" (assert)
                  (("1" (split -3)
                    (("1" (hide 1)
                      (("1" (expand "on_segment_2D?")
                        (("1" (skeep)
                          (("1" (inst + "t")
                            (("1" (assert)
                              (("1"
                                (hide-all-but (-3 1))
                                (("1"
                                  (case "c = c+zero")
                                  (("1"
                                    (replace -1)
                                    (("1" (grind) nil nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "on_segment_2D?" (-1 3))
                      (("2" (hide 1)
                        (("2" (skeep*)
                          (("2" (inst + "t")
                            (("2" (assert)
                              (("2"
                                (case "d = d+zero")
                                (("1"
                                  (replace -1)
                                  (("1"
                                    (hide-all-but (-4 2))
                                    (("1" (grind) nil nil))
                                    nil))
                                  nil)
                                 ("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("3" (hide 1)
                      (("3" (expand "on_segment_2D?" (-1 3))
                        (("3" (skeep*)
                          (("3" (inst + "t")
                            (("3" (assert)
                              (("3"
                                (hide-all-but (-3 3))
                                (("3"
                                  (case "a = a+zero")
                                  (("1"
                                    (replaces -1)
                                    (("1" (grind) nil nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("4" (expand "on_segment_2D?" (-1 5))
                      (("4" (skeep)
                        (("4" (inst + "t")
                          (("4" (assert)
                            (("4" (hide-all-but (-3 5))
                              (("4"
                                (case "b = b+zero")
                                (("1"
                                  (replace -1)
                                  (("1"
                                    (hide -1)
                                    (("1" (grind) nil nil))
                                    nil))
                                  nil)
                                 ("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("5" (skeep*)
                      (("5" (insteep +)
                        (("5" (assert)
                          (("5" (split +)
                            (("1" (hide-all-but (-1 1))
                              (("1" (grind) nil nil)) nil)
                             ("2" (hide-all-but (-2 1))
                              (("2" (grind) nil nil)) nil)
                             ("3" (hide-all-but (-3 1))
                              (("3" (grind) nil nil)) nil)
                             ("4" (hide-all-but (-4 1))
                              (("4" (grind) nil nil)) nil)
                             ("5" (hide-all-but (-5 1))
                              (("5" (grind) nil nil)) nil)
                             ("6" (hide-all-but (-6 1))
                              (("6" (grind) nil nil)) nil)
                             ("7" (hide-all-but (-7 1))
                              (("7" (grind) nil nil)) nil)
                             ("8" (hide-all-but (-8 1))
                              (("8" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("6" (hide 2)
                      (("6" (expand "on_strict_segment_2D?" (-1 1))
                        (("6" (skeep*)
                          (("6" (inst + "t")
                            (("6" (expand "on_strict_segment_2D_at?")
                              (("6"
                                (flatten)
                                (("6"
                                  (assert)
                                  (("6"
                                    (hide-all-but (-3 1))
                                    (("6"
                                      (case "s = s+zero")
                                      (("1"
                                        (replaces -1)
                                        (("1"
                                          (case
                                           "vectors_2D.zero = zero+zero")
                                          (("1"
                                            (replaces -1)
                                            (("1" (grind) nil nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("7" (hide-all-but (-2 1))
                      (("7" (expand "on_strict_segment_2D?")
                        (("7" (skeep)
                          (("7" (insteep)
                            (("7" (expand "on_strict_segment_2D_at?")
                              (("7"
                                (flatten)
                                (("7"
                                  (assert)
                                  (("7"
                                    (hide (-1 -2))
                                    (("7"
                                      (case
                                       "vectors_2D.zero = zero+zero")
                                      (("1"
                                        (replaces -1)
                                        (("1" (grind) nil nil))
                                        nil)
                                       ("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide -1)
            (("2" (flatten)
              (("2" (skeep*)
                (("2" (hide (-5 -6 -7 -8))
                  (("2" (case "det(d-c,b-a)=0")
                    (("1" (grind) nil nil)
                     ("2" (name "D" "det(d-c,b-a)")
                      (("2" (name "t1" "det(a-c,b-a)/D")
                        (("1" (name "t2" "det(c-a,d-c)/-D")
                          (("1" (name "s1" "(1-t1)*c+t1*d")
                            (("1" (name "s2" "(1-t2)*a+t2*b")
                              (("1"
                                (case "NOT s1 = s2")
                                (("1"
                                  (expand "s1" 1)
                                  (("1"
                                    (expand "s2" 1)
                                    (("1"
                                      (lemma "vectors_2D.sub_eq_zero")
                                      (("1"
                                        (inst
                                         -
                                         "(1 - t1) * c + t1 * d"
                                         "(1 - t2) * a + t2 * b")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (case
                                             "FORALL (vv:Vect2): det(vv,b-a)=0 AND vv*(b-a)=0 IMPLIES vv=zero")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (split +)
                                                  (("1"
                                                    (case
                                                     "det((1 - t1) * c + t1 * d - a, b - a) = 0")
                                                    (("1"
                                                      (hide-all-but
                                                       (-1 1))
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (case
                                                         "c+t1*(d-c) = (1-t1)*c+t1*d")
                                                        (("1"
                                                          (replaces
                                                           -1
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (case
                                                             "t1*det(d-c,b-a)+det(c-a,b-a)=0")
                                                            (("1"
                                                              (hide-all-but
                                                               (-1 1))
                                                              (("1"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "t1"
                                                               1)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (expand
                                                                   "D"
                                                                   1)
                                                                  (("2"
                                                                    (case
                                                                     "det(c-a,b-a)=-det(a-c,b-a)")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (case
                                                     "c+t1*(d-c) = (1-t1)*c+t1*d")
                                                    (("1"
                                                      (replaces
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (case
                                                         "a+t2*(b-a)=(1-t2)*a+t2*b")
                                                        (("1"
                                                          (replaces
                                                           -1
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (rewrite
                                                               "dot_sub_left")
                                                              (("1"
                                                                (case
                                                                 "(c + t1 * (d - c)) * (b - a) = (a + t2 * (b - a)) * (b - a)")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "t1"
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "t2"
                                                                     1)
                                                                    (("2"
                                                                      (case
                                                                       "NOT (D*c + det(a - c, b - a) * (d - c)) * (b - a) =
                                                                                              ((D)*a - det(c - a, d - c) * (b - a)) * (b - a)")
                                                                      (("1"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "D")
                                                                          (("1"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (mult-by
                                                                         1
                                                                         "D")
                                                                        (("2"
                                                                          (hide-all-but
                                                                           (-1
                                                                            1))
                                                                          (("2"
                                                                            (invoke
                                                                             (case
                                                                              "NOT %1 = %2")
                                                                             (!
                                                                              -1
                                                                              1)
                                                                             (!
                                                                              1
                                                                              1))
                                                                            (("1"
                                                                              (rewrite
                                                                               "dot_add_left")
                                                                              (("1"
                                                                                (rewrite
                                                                                 "dot_add_left")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replaces
                                                                               -1)
                                                                              (("2"
                                                                                (replaces
                                                                                 -1)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "dot_sub_left")
                                                                                  (("2"
                                                                                    (rewrite
                                                                                     "dot_add_left")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case "b-a=zero")
                                              (("1"
                                                (replaces -1 +)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (hide-all-but 4)
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (name "W" "b-a")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide-all-but
                                                     (1 2))
                                                    (("2"
                                                      (skeep*)
                                                      (("2"
                                                        (lemma
                                                         "orthogonal_basis")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "W"
                                                           "perpR(W)"
                                                           "vv")
                                                          (("2"
                                                            (splash -)
                                                            (("1"
                                                              (lemma
                                                               "orthogonal_basis_sqv")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "((vv * W) / sqv(W))"
                                                                 "((vv * perpR(W)) / sqv(perpR(W)))"
                                                                 "W"
                                                                 "perpR(W)"
                                                                 "vv")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (rewrite
                                                                     "det_perpR")
                                                                    (("1"
                                                                      (replace
                                                                       -6)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (replace
                                                                           -7)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (flatten)
                                                              (("3"
                                                                (case
                                                                 "W + zero = -perpR(perpR(W))")
                                                                (("1"
                                                                  (replace
                                                                   -2)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("4"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (case "NOT eps2*D>0")
                                  (("1"
                                    (hide-all-but (-9 -10 1))
                                    (("1"
                                      (expand "D")
                                      (("1" (grind) nil nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (case "NOT eps1*D<0")
                                    (("1"
                                      (hide-all-but (-8 -9 1))
                                      (("1"
                                        (expand "D")
                                        (("1" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case "NOT (0<t1 AND t1<1)")
                                      (("1"
                                        (expand "t1" 1)
                                        (("1"
                                          (case
                                           "NOT det(a - c, b - a) / D = (eps1*det(a - c, b - a)) / (eps1*D)")
                                          (("1" (assert) nil nil)
                                           ("2"
                                            (replaces -1 1)
                                            (("2"
                                              (split 1)
                                              (("1"
                                                (cross-mult 1)
                                                (("1"
                                                  (hide-all-but (-9 1))
                                                  (("1"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (cross-mult 1)
                                                (("2"
                                                  (expand "D" 1)
                                                  (("2"
                                                    (hide-all-but
                                                     (-9 -10 1))
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (lemma
                                             "nzreal_times_nzreal_is_nzreal")
                                            (("3" (inst?) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (case "NOT (0<t2 AND t2<1)")
                                        (("1"
                                          (expand "t2" 1)
                                          (("1"
                                            (case
                                             "NOT det(c - a, d - c) / (-D) = (eps2*(-det(c - a, d - c))) / (eps2*D)")
                                            (("1" (assert) nil nil)
                                             ("2"
                                              (replaces -1)
                                              (("2"
                                                (split +)
                                                (("1"
                                                  (cross-mult 1)
                                                  (("1"
                                                    (hide-all-but
                                                     (-12 1))
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (cross-mult 1)
                                                  (("2"
                                                    (hide-all-but
                                                     (-12 -13 1))
                                                    (("2"
                                                      (expand "D")
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (lemma
                                               "nzreal_times_nzreal_is_nzreal")
                                              (("3" (inst?) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (inst + "s1")
                                            (("2"
                                              (expand
                                               "on_strict_segment_2D?")
                                              (("2"
                                                (split +)
                                                (("1"
                                                  (inst + "t2")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "on_strict_segment_2D_at?")
                                                      (("1"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (inst + "t1")
                                                  (("2"
                                                    (expand
                                                     "on_strict_segment_2D_at?")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((* const-decl "real" vectors_2D "vectors/")
    (< const-decl "bool" reals nil)
    (- const-decl "Vector" vectors_2D "vectors/")
    (det const-decl "real" det_2D "vectors/")
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (> const-decl "bool" reals nil)
    (Sign type-eq-decl nil sign "reals/")
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (/= const-decl "boolean" notequal nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (on_segment_2D? const-decl "bool" edge_proximity nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (on_strict_segment_2D? const-decl "bool" edge_proximity nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (TRUE const-decl "bool" booleans nil)
    (on_strict_segment_2D_at? const-decl "bool" edge_proximity nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (* const-decl "Vector" vectors_2D "vectors/")
    (sign const-decl "Sign" sign "reals/")
    (sign_nat formula-decl nil sign "reals/")
    (nzreal_times_nzreal_is_nzreal judgement-tcc nil real_types nil)
    (Nz_vector type-eq-decl nil vectors_2D "vectors/")
    (parallel? const-decl "bool" vectors_2D "vectors/")
    (parallel_segments_overlap formula-decl nil multipoly nil)
    (scal_assoc formula-decl nil vectors_2D "vectors/")
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (add_zero_left formula-decl nil vectors_2D "vectors/")
    (sub_zero_left formula-decl nil vectors_2D "vectors/")
    (neg_zero formula-decl nil vectors_2D "vectors/")
    (scal_zero formula-decl nil vectors_2D "vectors/")
    (sub_zero_right formula-decl nil vectors_2D "vectors/")
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     "vect_analysis/")
    (parallel_det_0 formula-decl nil parallel_2D "vectors/")
    (nzreal nonempty-type-eq-decl nil reals nil)
    (a skolem-const-decl "Vect2" multipoly nil)
    (c skolem-const-decl "Vect2" multipoly nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (eps1 skolem-const-decl "Sign" multipoly nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (both_sides_times_pos_ge1 formula-decl nil real_props nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (both_sides_times1 formula-decl nil real_props nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (sqv_eq_0 formula-decl nil vectors_2D "vectors/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (sqv_zero formula-decl nil vectors_2D "vectors/")
    (dot_zero_right formula-decl nil vectors_2D "vectors/")
    (dot_zero_left formula-decl nil vectors_2D "vectors/")
    (sqv const-decl "nnreal" vectors_2D "vectors/")
    (nnreal type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (both_sides_times_pos_le1 formula-decl nil real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (t1 skolem-const-decl "real" multipoly nil)
    (t2 skolem-const-decl "real" multipoly nil)
    (div_mult_pos_gt1 formula-decl nil extra_real_props nil)
    (add_zero_right formula-decl nil vectors_2D "vectors/")
    (comp_zero_y formula-decl nil vectors_2D "vectors/")
    (comp_zero_x formula-decl nil vectors_2D "vectors/")
    (- const-decl "Vector" vectors_2D "vectors/")
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (add_cancel_neg2 formula-decl nil vectors_2D "vectors/")
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (+ const-decl "Vector" vectors_2D "vectors/")
    (eps1 skolem-const-decl "Sign" multipoly nil)
    (negreal nonempty-type-eq-decl nil real_types nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (div_mult_neg_lt2 formula-decl nil real_props nil)
    (div_mult_neg_lt1 formula-decl nil real_props nil)
    (div_mult_pos_lt1 formula-decl nil real_props nil)
    (div_mult_pos_lt2 formula-decl nil real_props nil)
    (eps2 skolem-const-decl "Sign" multipoly nil)
    (s1 skolem-const-decl "Vector" multipoly nil)
    (sub_eq_zero formula-decl nil vectors_2D "vectors/")
    (perpR const-decl "Vect2" perpendicular_2D "vectors/")
    (perpR_eq_zero formula-decl nil perpendicular_2D "vectors/")
    (orthogonal_basis_sqv formula-decl nil basis_2D "vectors/")
    (scal_0 formula-decl nil vectors_2D "vectors/")
    (sq_0 formula-decl nil sq "reals/")
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (det_perpR formula-decl nil det_2D "vectors/")
    (orthogonal? const-decl "bool" vectors_2D "vectors/")
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (orthogonal_basis formula-decl nil basis_2D "vectors/")
    (t1 skolem-const-decl "real" multipoly nil)
    (D skolem-const-decl "real" multipoly nil)
    (dot_sub_left formula-decl nil vectors_2D "vectors/")
    (dot_add_left formula-decl nil vectors_2D "vectors/")
    (dot_scal_left formula-decl nil vectors_2D "vectors/")
    (t2 skolem-const-decl "real" multipoly nil)
    (s2 skolem-const-decl "Vector" multipoly nil)
    (open_segment_2Ds_cross const-decl "bool" edge_proximity nil))
   nil))
 (on_open_segment_2Ds_cross_open 0
  (on_open_segment_2Ds_cross_open-2 nil 3672139593
   ("" (skeep*)
    (("" (expand "isopen?")
      (("" (skeep*)
        (("" (lemma "open_segment_2Ds_cross_rew2")
          (("" (expand "open_segment_2Ds_cross_at" -)
            (("" (inst?)
              (("" (assert)
                (("" (hide -3)
                  (("" (split -)
                    (("1" (skeep*)
                      (("1" (label "g1" -1)
                        (("1" (label "g2" -2)
                          (("1" (label "g3" -3)
                            (("1" (label "g4" -4)
                              (("1"
                                (label "z5" -5)
                                (("1"
                                  (label "z6" -6)
                                  (("1"
                                    (label "z7" -7)
                                    (("1"
                                      (label "z8" -8)
                                      (("1"
                                        (name
                                         "F"
                                         "LAMBDA (ee:Sign,cc,ccv,aa,aav,bb,bbv,dd,ddv:Vect2): LET AA=ee*(ccv-aav),BB=ee*(cc-aa),CC=perpR(bbv)-perpR(ddv),DD=perpR(bb)-perpR(dd) IN quadratic(AA*CC,AA*DD+CC*BB,DD*BB)")
                                        (("1"
                                          (label "Fname" -1)
                                          (("1"
                                            (case
                                             "NOT FORALL (ee: Sign, cc, ccv, aa, aav, bb, bbv, dd, ddv: Vect2,tt:real): ee * det(cc + tt * ccv - (aa + tt * aav), bb + tt * bbv - (dd + tt * ddv))=F(ee,cc,ccv,aa,aav,bb,bbv,dd,ddv)(tt)")
                                            (("1"
                                              (hide-all-but 1)
                                              (("1"
                                                (expand "F")
                                                (("1" (grind) nil nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (label "Fdef" -1)
                                              (("2"
                                                (rewrite -1 "g1")
                                                (("2"
                                                  (rewrite -1 "g2")
                                                  (("2"
                                                    (rewrite -1 "g3")
                                                    (("2"
                                                      (rewrite -1 "g4")
                                                      (("2"
                                                        (name
                                                         "G"
                                                         "LAMBDA (cc,ccv,aa,aav,bb,bbv,dd,ddv:Vect2): LET AA=(ccv-aav),BB=(cc-aa),CC=(bbv)-(ddv),DD=(bb)-(dd) IN quadratic(AA*CC,AA*DD+CC*BB,DD*BB)")
                                                        (("2"
                                                          (label
                                                           "Gname"
                                                           -1)
                                                          (("2"
                                                            (case
                                                             "NOT FORALL (cc, ccv, aa, aav, bb, bbv, dd, ddv: Vect2,tt:real): (cc + tt * ccv - (aa + tt * aav))*(bb + tt * bbv - (dd + tt * ddv))=G(cc,ccv,aa,aav,bb,bbv,dd,ddv)(tt)")
                                                            (("1"
                                                              (hide-all-but
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "G")
                                                                (("1"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (label
                                                               "Gdef"
                                                               -1)
                                                              (("2"
                                                                (rewrite
                                                                 -1
                                                                 "z5")
                                                                (("2"
                                                                  (rewrite
                                                                   -1
                                                                   "z5")
                                                                  (("2"
                                                                    (rewrite
                                                                     -1
                                                                     "z6")
                                                                    (("2"
                                                                      (rewrite
                                                                       -1
                                                                       "z6")
                                                                      (("2"
                                                                        (rewrite
                                                                         -1
                                                                         "z7")
                                                                        (("2"
                                                                          (rewrite
                                                                           -1
                                                                           "z7")
                                                                          (("2"
                                                                            (rewrite
                                                                             -1
                                                                             "z8")
                                                                            (("2"
                                                                              (rewrite
                                                                               -1
                                                                               "z8")
                                                                              (("2"
                                                                                (case
                                                                                 "FORALL (H:[real->real]): H(t)>0 AND (EXISTS (a1,b1,c1:real): H = quadratic(a1,b1,c1)) IMPLIES EXISTS (delta:posreal): FORALL (q:real): abs(q-t)<=delta IMPLIES H(q)>0")
                                                                                (("1"
                                                                                  (case
                                                                                   "FORALL (H1,H2:[real->real]): (H1(t)>0 OR H2(t)>0) AND (EXISTS (a1,b1,c1:real): H1 = quadratic(a1,b1,c1)) AND (EXISTS (a2,b2,c2:real): H2 = quadratic(a2,b2,c2)) IMPLIES EXISTS (delta:posreal): FORALL (q:real): abs(q-t)<=delta IMPLIES (H1(q)>0 OR H2(q)>0)")
                                                                                  (("1"
                                                                                    (label
                                                                                     "Hdef"
                                                                                     -2)
                                                                                    (("1"
                                                                                      (label
                                                                                       "H12"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (inst-cp
                                                                                         -
                                                                                         "G(a, av, d, dv, c, cv, d, dv)"
                                                                                         "G(b, bv, d, dv, c, cv, d, dv)")
                                                                                        (("1"
                                                                                          (replace
                                                                                           "z8")
                                                                                          (("1"
                                                                                            (split
                                                                                             -)
                                                                                            (("1"
                                                                                              (skolem
                                                                                               -1
                                                                                               "delta8")
                                                                                              (("1"
                                                                                                (hide
                                                                                                 "z8")
                                                                                                (("1"
                                                                                                  (inst-cp
                                                                                                   -
                                                                                                   "G(a, av, c, cv, d, dv, c, cv)"
                                                                                                   "G(b, bv, c, cv, d, dv, c, cv)")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     "z7")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -)
                                                                                                      (("1"
                                                                                                        (skolem
                                                                                                         -1
                                                                                                         "delta7")
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           "z7")
                                                                                                          (("1"
                                                                                                            (inst-cp
                                                                                                             -
                                                                                                             "G(c, cv, b, bv, a, av, b, bv)"
                                                                                                             "G(d, dv, b, bv, a, av, b, bv)")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               "z6")
                                                                                                              (("1"
                                                                                                                (split
                                                                                                                 -)
                                                                                                                (("1"
                                                                                                                  (skolem
                                                                                                                   -1
                                                                                                                   "delta6")
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     "z6")
                                                                                                                    (("1"
                                                                                                                      (inst-cp
                                                                                                                       -
                                                                                                                       "G(c, cv, a, av, b, bv, a, av)"
                                                                                                                       "G(d, dv, a, av, b, bv, a, av)")
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         "z5")
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (skolem
                                                                                                                             -1
                                                                                                                             "delta5")
                                                                                                                            (("1"
                                                                                                                              (hide
                                                                                                                               "z5")
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -5)
                                                                                                                                (("1"
                                                                                                                                  (copy
                                                                                                                                   "Hdef")
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     "Hdef")
                                                                                                                                    (("1"
                                                                                                                                      (label
                                                                                                                                       "Hz"
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (inst-cp
                                                                                                                                         "Hz"
                                                                                                                                         "F(eps2, b, bv, c, cv, c, cv, d, dv)")
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           "g4")
                                                                                                                                          (("1"
                                                                                                                                            (split
                                                                                                                                             -)
                                                                                                                                            (("1"
                                                                                                                                              (skolem
                                                                                                                                               -
                                                                                                                                               "delta4")
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 "g4")
                                                                                                                                                (("1"
                                                                                                                                                  (delabel
                                                                                                                                                   "Hz")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst-cp
                                                                                                                                                     -2
                                                                                                                                                     "F(eps2, a, av, c, cv, d, dv, c, cv)")
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       "g3")
                                                                                                                                                      (("1"
                                                                                                                                                        (split
                                                                                                                                                         -)
                                                                                                                                                        (("1"
                                                                                                                                                          (skolem
                                                                                                                                                           -
                                                                                                                                                           "delta3")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide
                                                                                                                                                             "g3")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst-cp
                                                                                                                                                               -3
                                                                                                                                                               "F(eps1, d, dv, a, av, a, av, b, bv)")
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 "g2")
                                                                                                                                                                (("1"
                                                                                                                                                                  (split
                                                                                                                                                                   -)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (skolem
                                                                                                                                                                     -
                                                                                                                                                                     "delta2")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (hide
                                                                                                                                                                       "g2")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst-cp
                                                                                                                                                                         -4
                                                                                                                                                                         "F(eps1, c, cv, a, av, b, bv, a, av)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           "g1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (split
                                                                                                                                                                             -)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (skolem
                                                                                                                                                                               -
                                                                                                                                                                               "delta1")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (hide
                                                                                                                                                                                 "g1")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (hide
                                                                                                                                                                                   -5)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (name
                                                                                                                                                                                     "delta"
                                                                                                                                                                                     "min(min(min(delta1,delta2),min(delta3,delta4)),min(min(delta5,delta6),min(delta7,delta8)))")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       2
                                                                                                                                                                                       "delta")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (skeep*)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -
                                                                                                                                                                                           "q")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -
                                                                                                                                                                                             "q")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -
                                                                                                                                                                                               "q")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -
                                                                                                                                                                                                 "q")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -
                                                                                                                                                                                                   "q")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -
                                                                                                                                                                                                     "q")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (inst
                                                                                                                                                                                                       -
                                                                                                                                                                                                       "q")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         -
                                                                                                                                                                                                         "q")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "open_segment_2Ds_cross_at")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                               "open_segment_2Ds_cross_rew2")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (split
                                                                                                                                                                                                                     -)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (hide
                                                                                                                                                                                                                       2)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (insteep
                                                                                                                                                                                                                         +)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (rewrite
                                                                                                                                                                                                                           "Fdef"
                                                                                                                                                                                                                           +)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                                             "Fdef"
                                                                                                                                                                                                                             +)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                                               "Fdef"
                                                                                                                                                                                                                               +)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                                                 "Fdef"
                                                                                                                                                                                                                                 +)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                                                     "Gdef"
                                                                                                                                                                                                                                     +)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                                                       "Gdef"
                                                                                                                                                                                                                                       +)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                                                         "Gdef"
                                                                                                                                                                                                                                         +)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (rewrite
                                                                                                                                                                                                                                           "Gdef"
                                                                                                                                                                                                                                           +)
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                                                             "Gdef"
                                                                                                                                                                                                                                             +)
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                                                               "Gdef"
                                                                                                                                                                                                                                               +)
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                                                                 "Gdef"
                                                                                                                                                                                                                                                 +)
                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                                                                   "Gdef"
                                                                                                                                                                                                                                                   +)
                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                                     "H12")
                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                                                       -7)
                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                        (replace
                                                                                                                                                                                                                                                         -8)
                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                       +
                                                                                                                                                                                                                       "q")
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                       +
                                                                                                                                                                                                                       "q")
                                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("4"
                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                       +
                                                                                                                                                                                                                       "q")
                                                                                                                                                                                                                      (("4"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("5"
                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                       +
                                                                                                                                                                                                                       "q")
                                                                                                                                                                                                                      (("5"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (hide
                                                                                                                                                                               2)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "F")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst?)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (hide-all-but
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "F")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst?)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (hide-all-but
                                                                                                                                                           1)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "F")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst?)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide-all-but
                                                                                                                                               1)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "F")
                                                                                                                                                (("2"
                                                                                                                                                  (inst?)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "G")
                                                                                                                              (("2"
                                                                                                                                (inst?)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("3"
                                                                                                                              (expand
                                                                                                                               "G")
                                                                                                                              (("3"
                                                                                                                                (inst?)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "G")
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("3"
                                                                                                                    (expand
                                                                                                                     "G")
                                                                                                                    (("3"
                                                                                                                      (inst?)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "G")
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (hide-all-but
                                                                                                         1)
                                                                                                        (("3"
                                                                                                          (expand
                                                                                                           "G")
                                                                                                          (("3"
                                                                                                            (inst?)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "G")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("3"
                                                                                                (expand
                                                                                                 "G")
                                                                                                (("3"
                                                                                                  (inst?)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      1))
                                                                                    (("2"
                                                                                      (skeep)
                                                                                      (("2"
                                                                                        (split
                                                                                         -)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "H1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -2)
                                                                                              (("1"
                                                                                                (skolem
                                                                                                 -4
                                                                                                 "delta")
                                                                                                (("1"
                                                                                                  (insteep
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (skeep*)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "q")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst
                                                                                           -4
                                                                                           "H2")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -3)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (skolem
                                                                                                 -4
                                                                                                 "delta")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "delta")
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (insteep)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (skeep*)
                                                                                    (("2"
                                                                                      (replaces
                                                                                       -2)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "quadratic_continuous")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "a1"
                                                                                           "b1"
                                                                                           "c1"
                                                                                           "t"
                                                                                           "quadratic(a1,b1,c1)(t)/2")
                                                                                          (("1"
                                                                                            (skeep)
                                                                                            (("1"
                                                                                              (insteep)
                                                                                              (("1"
                                                                                                (skeep*)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "q")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -)
                                                                                                      (("1"
                                                                                                        (grind
                                                                                                         :exclude
                                                                                                         "quadratic")
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (grind
                                                                                                         :exclude
                                                                                                         "quadratic")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (inst + "t") (("2" (assert) nil nil)) nil)
                     ("3" (inst + "t") (("3" (assert) nil nil)) nil)
                     ("4" (inst + "t") (("4" (assert) nil nil)) nil)
                     ("5" (inst + "t") (("5" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isopen? const-decl "bool" multipoly nil)
    (open_segment_2Ds_cross_rew2 formula-decl nil multipoly nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (+ const-decl "Vector" vectors_2D "vectors/")
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (* const-decl "Vector" vectors_2D "vectors/")
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (a1 skolem-const-decl "real" multipoly nil)
    (b1 skolem-const-decl "real" multipoly nil)
    (c1 skolem-const-decl "real" multipoly nil)
    (t skolem-const-decl "nnreal" multipoly nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (quadratic_continuous formula-decl nil quadratic "reals/")
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (dot_scal_left formula-decl nil vectors_2D "vectors/")
    (dot_scal_right formula-decl nil vectors_2D "vectors/")
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (posreal_min application-judgement
     "{z: posreal | z <= x AND z <= y}" real_defs nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (<= const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (G skolem-const-decl
     "[[Vect2, Vect2, Vect2, Vect2, Vect2, Vect2, Vect2, Vect2] -> [real -> real]]"
     multipoly nil)
    (sq const-decl "nonneg_real" sq "reals/")
    (minus_real_is_real application-judgement "real" reals nil)
    (F skolem-const-decl
     "[[Sign, Vect2, Vect2, Vect2, Vect2, Vect2, Vect2, Vect2, Vect2] ->
   [real -> real]]" multipoly nil)
    (det const-decl "real" det_2D "vectors/")
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (/= const-decl "boolean" notequal nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign "reals/")
    (quadratic const-decl "real" quadratic "reals/")
    (* const-decl "real" vectors_2D "vectors/")
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (- const-decl "Vector" vectors_2D "vectors/")
    (perpR const-decl "Vect2" perpendicular_2D "vectors/")
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (open_segment_2Ds_cross_at const-decl "bool" multipoly nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil)
  (on_open_segment_2Ds_cross_open-1 nil 3672057924
   ("" (skeep*)
    (("" (expand "isopen?")
      (("" (skeep*)
        (("" (lemma "open_segment_2Ds_cross_rew2")
          (("" (expand "open_segment_2Ds_cross_at" -)
            (("" (inst?)
              (("" (assert)
                (("" (split -)
                  (("1" (skeep*)
                    (("1" (label "g1" -1)
                      (("1" (label "g2" -2)
                        (("1" (label "g3" -3)
                          (("1" (label "g4" -4)
                            (("1" (label "z5" -5)
                              (("1"
                                (label "z6" -6)
                                (("1"
                                  (label "z7" -7)
                                  (("1"
                                    (label "z8" -8)
                                    (("1"
                                      (name
                                       "F"
                                       "LAMBDA (ee:Sign,cc,ccv,aa,aav,bb,bbv,dd,ddv:Vect2): LET AA=ee*(ccv-aav),BB=ee*(cc-aa),CC=perpR(bbv)-perpR(ddv),DD=perpR(bb)-perpR(dd) IN quadratic(AA*CC,AA*DD+CC*BB,DD*BB)")
                                      (("1"
                                        (label "Fname" -1)
                                        (("1"
                                          (case
                                           "NOT FORALL (ee: Sign, cc, ccv, aa, aav, bb, bbv, dd, ddv: Vect2,tt:real): ee * det(cc + tt * ccv - (aa + tt * aav), bb + tt * bbv - (dd + tt * ddv))=F(ee,cc,ccv,aa,aav,bb,bbv,dd,ddv)(tt)")
                                          (("1"
                                            (hide-all-but 1)
                                            (("1"
                                              (expand "F")
                                              (("1" (grind) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (label "Fdef" -1)
                                            (("2"
                                              (rewrite -1 "g1")
                                              (("2"
                                                (rewrite -1 "g2")
                                                (("2"
                                                  (rewrite -1 "g3")
                                                  (("2"
                                                    (rewrite -1 "g4")
                                                    (("2"
                                                      (name
                                                       "G"
                                                       "LAMBDA (cc,ccv,aa,aav,bb,bbv,dd,ddv:Vect2): LET AA=(ccv-aav),BB=(cc-aa),CC=(bbv)-(ddv),DD=(bb)-(dd) IN quadratic(AA*CC,AA*DD+CC*BB,DD*BB)")
                                                      (("2"
                                                        (label
                                                         "Gname"
                                                         -1)
                                                        (("2"
                                                          (case
                                                           "NOT FORALL (cc, ccv, aa, aav, bb, bbv, dd, ddv: Vect2,tt:real): (cc + tt * ccv - (aa + tt * aav))*(bb + tt * bbv - (dd + tt * ddv))=G(cc,ccv,aa,aav,bb,bbv,dd,ddv)(tt)")
                                                          (("1"
                                                            (hide-all-but
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "G")
                                                              (("1"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (label
                                                             "Gdef"
                                                             -1)
                                                            (("2"
                                                              (rewrite
                                                               -1
                                                               "z5")
                                                              (("2"
                                                                (rewrite
                                                                 -1
                                                                 "z5")
                                                                (("2"
                                                                  (rewrite
                                                                   -1
                                                                   "z6")
                                                                  (("2"
                                                                    (rewrite
                                                                     -1
                                                                     "z6")
                                                                    (("2"
                                                                      (rewrite
                                                                       -1
                                                                       "z7")
                                                                      (("2"
                                                                        (rewrite
                                                                         -1
                                                                         "z7")
                                                                        (("2"
                                                                          (rewrite
                                                                           -1
                                                                           "z8")
                                                                          (("2"
                                                                            (rewrite
                                                                             -1
                                                                             "z8")
                                                                            (("2"
                                                                              (case
                                                                               "FORALL (H:[real->real]): H(t)>0 AND (EXISTS (a1,b1,c1:real): H = quadratic(a1,b1,c1)) IMPLIES EXISTS (delta:posreal): FORALL (q:real): abs(q-t)<=delta IMPLIES H(q)>0")
                                                                              (("1"
                                                                                (case
                                                                                 "FORALL (H1,H2:[real->real]): (H1(t)>0 OR H2(t)>0) AND (EXISTS (a1,b1,c1:real): H1 = quadratic(a1,b1,c1)) AND (EXISTS (a2,b2,c2:real): H2 = quadratic(a2,b2,c2)) IMPLIES EXISTS (delta:posreal): FORALL (q:real): abs(q-t)<=delta IMPLIES (H1(q)>0 OR H2(q)>0)")
                                                                                (("1"
                                                                                  (label
                                                                                   "Hdef"
                                                                                   -2)
                                                                                  (("1"
                                                                                    (label
                                                                                     "H12"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (inst-cp
                                                                                       -
                                                                                       "G(a, av, d, dv, c, cv, d, dv)"
                                                                                       "G(b, bv, d, dv, c, cv, d, dv)")
                                                                                      (("1"
                                                                                        (replace
                                                                                         "z8")
                                                                                        (("1"
                                                                                          (split
                                                                                           -)
                                                                                          (("1"
                                                                                            (skolem
                                                                                             -1
                                                                                             "delta8")
                                                                                            (("1"
                                                                                              (hide
                                                                                               "z8")
                                                                                              (("1"
                                                                                                (inst-cp
                                                                                                 -
                                                                                                 "G(a, av, c, cv, d, dv, c, cv)"
                                                                                                 "G(b, bv, c, cv, d, dv, c, cv)")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   "z7")
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -)
                                                                                                    (("1"
                                                                                                      (skolem
                                                                                                       -1
                                                                                                       "delta7")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         "z7")
                                                                                                        (("1"
                                                                                                          (inst-cp
                                                                                                           -
                                                                                                           "G(c, cv, b, bv, a, av, b, bv)"
                                                                                                           "G(d, dv, b, bv, a, av, b, bv)")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             "z6")
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -)
                                                                                                              (("1"
                                                                                                                (skolem
                                                                                                                 -1
                                                                                                                 "delta6")
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   "z6")
                                                                                                                  (("1"
                                                                                                                    (inst-cp
                                                                                                                     -
                                                                                                                     "G(c, cv, a, av, b, bv, a, av)"
                                                                                                                     "G(d, dv, a, av, b, bv, a, av)")
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       "z5")
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         -)
                                                                                                                        (("1"
                                                                                                                          (skolem
                                                                                                                           -1
                                                                                                                           "delta5")
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             "z5")
                                                                                                                            (("1"
                                                                                                                              (hide
                                                                                                                               -5)
                                                                                                                              (("1"
                                                                                                                                (copy
                                                                                                                                 "Hdef")
                                                                                                                                (("1"
                                                                                                                                  (hide
                                                                                                                                   "Hdef")
                                                                                                                                  (("1"
                                                                                                                                    (label
                                                                                                                                     "Hz"
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (inst-cp
                                                                                                                                       "Hz"
                                                                                                                                       "F(eps2, b, bv, c, cv, c, cv, d, dv)")
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         "g4")
                                                                                                                                        (("1"
                                                                                                                                          (split
                                                                                                                                           -)
                                                                                                                                          (("1"
                                                                                                                                            (skolem
                                                                                                                                             -
                                                                                                                                             "delta4")
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               "g4")
                                                                                                                                              (("1"
                                                                                                                                                (delabel
                                                                                                                                                 "Hz")
                                                                                                                                                (("1"
                                                                                                                                                  (inst-cp
                                                                                                                                                   -2
                                                                                                                                                   "F(eps2, a, av, c, cv, d, dv, c, cv)")
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     "g3")
                                                                                                                                                    (("1"
                                                                                                                                                      (split
                                                                                                                                                       -)
                                                                                                                                                      (("1"
                                                                                                                                                        (skolem
                                                                                                                                                         -
                                                                                                                                                         "delta3")
                                                                                                                                                        (("1"
                                                                                                                                                          (hide
                                                                                                                                                           "g3")
                                                                                                                                                          (("1"
                                                                                                                                                            (inst-cp
                                                                                                                                                             -3
                                                                                                                                                             "F(eps1, d, dv, a, av, a, av, b, bv)")
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               "g2")
                                                                                                                                                              (("1"
                                                                                                                                                                (split
                                                                                                                                                                 -)
                                                                                                                                                                (("1"
                                                                                                                                                                  (skolem
                                                                                                                                                                   -
                                                                                                                                                                   "delta2")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (hide
                                                                                                                                                                     "g2")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst-cp
                                                                                                                                                                       -4
                                                                                                                                                                       "F(eps1, c, cv, a, av, b, bv, a, av)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         "g1")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (split
                                                                                                                                                                           -)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (skolem
                                                                                                                                                                             -
                                                                                                                                                                             "delta1")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (hide
                                                                                                                                                                               "g1")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (hide
                                                                                                                                                                                 -5)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (name
                                                                                                                                                                                   "delta"
                                                                                                                                                                                   "min(min(min(delta1,delta2),min(delta3,delta4)),min(min(delta5,delta6),min(delta7,delta8)))")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     2
                                                                                                                                                                                     "delta")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (skeep*)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -
                                                                                                                                                                                         "q")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -
                                                                                                                                                                                           "q")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -
                                                                                                                                                                                             "q")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -
                                                                                                                                                                                               "q")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -
                                                                                                                                                                                                 "q")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -
                                                                                                                                                                                                   "q")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -
                                                                                                                                                                                                     "q")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (inst
                                                                                                                                                                                                       -
                                                                                                                                                                                                       "q")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "open_segment_2Ds_cross_at")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                             "open_segment_2Ds_cross_rew2")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (postpone)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (postpone)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (postpone)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (postpone)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (postpone)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (postpone)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (postpone)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (postpone)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (postpone)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (postpone)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (postpone)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (postpone)
                                                                                            nil
                                                                                            nil)
                                                                                           ("3"
                                                                                            (postpone)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (postpone)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (postpone)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (postpone) nil nil) ("3" (postpone) nil nil)
                   ("4" (postpone) nil nil) ("5" (postpone) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (segments_2Ds_notcross_open 0
  (segments_2Ds_notcross_open-6 nil 3672587319
   (""
    (name "FQ"
          "LAMBDA (a,b,c,d,e,f:real): (LAMBDA (x,y:real): a*sq(x)+b*sq(y)+c*x*y+d*x+e*y+f)")
    (("" (hide -)
      (("" (skeep*)
        (("" (expand "isopen?")
          (("" (skeep)
            (("" (assert)
              (("" (expand "segments_2Ds_notcross_at")
                ((""
                  (name "F"
                        "LAMBDA (W,X,Y,Z:Vect2): FQ(sqv(X-W),sqv(Z-Y),-2*((X-W)*(Z-Y)),2*((X-W)*(W-Y)),-2*((Z-Y)*(W-Y)),sqv(W-Y))")
                  ((""
                    (case "NOT FORALL (W,X,Y,Z:Vect2,xr,yr:real): F(W,X,Y,Z)(xr,yr)=sqv((W+xr*(X-W))-(Y+yr*(Z-Y)))")
                    (("1" (hide-all-but 1)
                      (("1" (skeep*)
                        (("1" (expand "F")
                          (("1" (expand "FQ") (("1" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2"
                      (case "NOT FORALL (A,B,C,D:Vect2): segment_2Ds_cross(A,B,C,D) IFF (EXISTS (x,y:real): 0<=x AND x<=1 AND 0<=y AND y<=1 AND F(A,B,C,D)(x,y)=0)")
                      (("1" (skeep*)
                        (("1" (ground)
                          (("1" (expand "segment_2Ds_cross")
                            (("1" (skeep*)
                              (("1"
                                (expand "on_segment_2D?" (-1 -2))
                                (("1"
                                  (skolem - "x")
                                  (("1"
                                    (skolem - "y")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (replaces -3)
                                        (("1"
                                          (insteep)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (rewrite -6 1)
                                              (("1"
                                                (case
                                                 "(1 - x) * A + x * B=A+x*(B-A)")
                                                (("1"
                                                  (replaces -1)
                                                  (("1"
                                                    (replaces -5)
                                                    (("1"
                                                      (hide-all-but 1)
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (skeep*)
                            (("2" (expand "segment_2Ds_cross" 1)
                              (("2"
                                (inst + "(1-x)*A+x*B")
                                (("2"
                                  (expand "on_segment_2D?" 1)
                                  (("2"
                                    (split +)
                                    (("1"
                                      (inst + "x")
                                      (("1" (assert) nil nil))
                                      nil)
                                     ("2"
                                      (inst + "y")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (rewrite -6 -5)
                                          (("2"
                                            (lemma
                                             "vectors_2D.sqv_eq_0")
                                            (("2"
                                              (inst?)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (rewrite
                                                   "sub_eq_zero")
                                                  (("2"
                                                    (case
                                                     "(1 - x) * A + x * B=A+x*(B-A)")
                                                    (("1"
                                                      (replaces -1)
                                                      (("1"
                                                        (replaces -1)
                                                        (("1"
                                                          (hide-all-but
                                                           1)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (label "rews" -1)
                        (("2" (name "A" "a + t * av")
                          (("2" (replace -1)
                            (("2" (name "B" "b+t*bv")
                              (("2"
                                (replace -1)
                                (("2"
                                  (name "C" "c+t*cv")
                                  (("2"
                                    (replace -1)
                                    (("2"
                                      (name "D" "d+t*dv")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (case
                                           "EXISTS (epsil: posreal):
                                                                                                                        FORALL (q: real):
                                                                                                                          0<=t+q AND t+q <= T AND abs(q) <= epsil IMPLIES
                                                                                                                           (NOT segment_2Ds_cross(A + q * av, B + q * bv, C + q * cv,
                                                                                                                                                  D + q * dv))")
                                          (("1"
                                            (hide 1)
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (inst + "epsil")
                                                (("1"
                                                  (skeep*)
                                                  (("1"
                                                    (inst - "q-t")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand "A" 1)
                                                        (("1"
                                                          (expand
                                                           "B"
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "C"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "D"
                                                               1)
                                                              (("1"
                                                                (case
                                                                 "FORALL (zz,w:Vect2): (zz+t*w)+(q-t)*w = zz+q*w")
                                                                (("1"
                                                                  (rewrite
                                                                   -1
                                                                   1)
                                                                  (("1"
                                                                    (rewrite
                                                                     -1
                                                                     1)
                                                                    (("1"
                                                                      (rewrite
                                                                       -1
                                                                       1)
                                                                      (("1"
                                                                        (rewrite
                                                                         -1
                                                                         1)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide (2 4))
                                            (("2"
                                              (case
                                               "NOT EXISTS (Delta:posreal): FORALL (x,y:real): 0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                                                                                                                 IMPLIES F(A, B, C, D)(x, y) > Delta")
                                              (("1"
                                                (hide 2)
                                                (("1"
                                                  (lemma
                                                   "cont_box_min")
                                                  (("1"
                                                    (inst
                                                     -
                                                     "0"
                                                     "0"
                                                     "1"
                                                     "1")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst
                                                         -
                                                         "F(A,B,C,D)")
                                                        (("1"
                                                          (split -)
                                                          (("1"
                                                            (skeep -)
                                                            (("1"
                                                              (case
                                                               "F(A,B,C,D)(x1,x2)=0")
                                                              (("1"
                                                                (rewrite
                                                                 -11
                                                                 +)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "x1"
                                                                   "x2")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (case
                                                                 "NOT F(A,B,C,D)(x1,x2)>0")
                                                                (("1"
                                                                  (rewrite
                                                                   -11
                                                                   1)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   1)
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "F(A,B,C,D)(x1,x2)/2")
                                                                    (("1"
                                                                      (skeep*)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "x"
                                                                         "y")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide
                                                             (2 3))
                                                            (("2"
                                                              (skeep*)
                                                              (("2"
                                                                (lemma
                                                                 "quad_box_cont")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "F(A,B,C,D)")
                                                                  (("2"
                                                                    (split
                                                                     -)
                                                                    (("1"
                                                                      (insteep
                                                                       -)
                                                                      (("1"
                                                                        (skeep*)
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "delta")
                                                                          (("1"
                                                                            (skeep*)
                                                                            (("1"
                                                                              (insteep
                                                                               -)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (copy
                                                                         -11)
                                                                        (("2"
                                                                          (replace
                                                                           -1
                                                                           1
                                                                           :dir
                                                                           rl)
                                                                          (("2"
                                                                            (expand
                                                                             "FQ"
                                                                             1)
                                                                            (("2"
                                                                              (inst
                                                                               +
                                                                               "sqv(B - A)"
                                                                               "sqv(D - C)"
                                                                               "- 2 * (((B - A) * (D - C)))"
                                                                               " 2 * (((B - A) * (A - C)))"
                                                                               "- 2 * (((D - C) * (A - C)))"
                                                                               "sqv(A - C)")
                                                                              (("2"
                                                                                (skeep*)
                                                                                (("2"
                                                                                  (expand
                                                                                   "sq")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "^")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "expt")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "expt")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "expt")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (label "igz" -1)
                                                (("2"
                                                  (skeep -)
                                                  (("2"
                                                    (name
                                                     "G"
                                                     "LAMBDA (K:real,V1,V2,V3,V4:Vect2): K*((V1-V2)*(V3-V4))")
                                                    (("2"
                                                      (case
                                                       "FORALL (K: real, V1, V2, V3, V4: Vect2): FORALL (epsil:posreal): epsil<1 IMPLIES EXISTS (delta:posreal): FORALL (W1,W2,W3,W4:Vect2): norm(W1)<=delta AND norm(W2)<=delta AND norm(W3)<=delta AND norm(W4)<=delta IMPLIES abs(G(K,V1,V2,V3,V4)-G(K,V1+W1,V2+W2,V3+W3,V4+W4))<epsil")
                                                      (("1"
                                                        (case
                                                         "NOT (LAMBDA (W, X, Y, Z: Vect2):
                                                                                                                                                                                     FQ(G(1,X,W,X,W), G(1,Z,Y,Z,Y), G(-2,X,W,Z,Y),
                                                                                                                                                                                          G(2,X,W,W,Y), G(-2,Z,Y,W,Y),
                                                                                                                                                                                          G(1,W,Y,W,Y)))
                                                                                                                                                                                   = F")
                                                        (("1"
                                                          (replace
                                                           -10
                                                           1
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide-all-but
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "G")
                                                              (("1"
                                                                (expand
                                                                 "sqv")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (label
                                                           "Gdef"
                                                           -1)
                                                          (("2"
                                                            (copy -1)
                                                            (("2"
                                                              (decompose-equality
                                                               -1)
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "(A,B,C,D)")
                                                                (("2"
                                                                  (inst-cp
                                                                   -
                                                                   "1"
                                                                   "B"
                                                                   "A"
                                                                   "B"
                                                                   "A")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "min(Delta/100,1/2)")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (inst-cp
                                                                           -
                                                                           "1"
                                                                           "D"
                                                                           "C"
                                                                           "D"
                                                                           "C")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "min(Delta/100,1/2)")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (skolem
                                                                                 -
                                                                                 "d2")
                                                                                (("2"
                                                                                  (inst-cp
                                                                                   -
                                                                                   "-2"
                                                                                   "B"
                                                                                   "A"
                                                                                   "D"
                                                                                   "C")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "min(Delta/100,1/2)")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skolem
                                                                                         -
                                                                                         "d3")
                                                                                        (("2"
                                                                                          (inst-cp
                                                                                           -
                                                                                           "2"
                                                                                           "B"
                                                                                           "A"
                                                                                           "A"
                                                                                           "C")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "min(Delta/100,1/2)")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (skolem
                                                                                                 -
                                                                                                 "d4")
                                                                                                (("2"
                                                                                                  (inst-cp
                                                                                                   -
                                                                                                   "-2"
                                                                                                   "D"
                                                                                                   "C"
                                                                                                   "A"
                                                                                                   "C")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "min(Delta/100,1/2)")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (skolem
                                                                                                         -
                                                                                                         "d5")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "1"
                                                                                                           "A"
                                                                                                           "C"
                                                                                                           "A"
                                                                                                           "C")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "min(Delta/100,1/2)")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (skolem
                                                                                                                 -
                                                                                                                 "d6")
                                                                                                                (("2"
                                                                                                                  (skolem
                                                                                                                   -
                                                                                                                   "d1")
                                                                                                                  (("2"
                                                                                                                    (name
                                                                                                                     "Dstar"
                                                                                                                     "min(min(d1,d2),min(min(d3,d4),min(d5,d6)))")
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "EXISTS (epsil:posreal): FORALL (q:real): abs(q)<=epsil IMPLIES (norm(q*av)<=Dstar AND norm(q*bv)<=Dstar AND norm(q*cv)<=Dstar AND norm(q*dv)<=Dstar)")
                                                                                                                      (("1"
                                                                                                                        (label
                                                                                                                         "ans"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (skeep
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             +
                                                                                                                             "epsil")
                                                                                                                            (("1"
                                                                                                                              (skeep*)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "q")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "q*av"
                                                                                                                                       "q*cv"
                                                                                                                                       "q*av"
                                                                                                                                       "q*cv")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "q*dv"
                                                                                                                                           "q*cv"
                                                                                                                                           "q*av"
                                                                                                                                           "q*cv")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "q*bv"
                                                                                                                                                 "q*av"
                                                                                                                                                 "q*av"
                                                                                                                                                 "q*cv")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "q*bv"
                                                                                                                                                     "q*av"
                                                                                                                                                     "q*dv"
                                                                                                                                                     "q*cv")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "q*dv"
                                                                                                                                                         "q*cv"
                                                                                                                                                         "q*dv"
                                                                                                                                                         "q*cv")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "q*bv"
                                                                                                                                                             "q*av"
                                                                                                                                                             "q*bv"
                                                                                                                                                             "q*av")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (case
                                                                                                                                                                 "NOT segment_2Ds_cross(A + q * av, B + q * bv, C + q * cv, D + q * dv)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   "rews"
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (copy
                                                                                                                                                                     "igz")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (hide
                                                                                                                                                                       "igz")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (skeep
                                                                                                                                                                         -)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (insteep
                                                                                                                                                                           -)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (case
                                                                                                                                                                               "abs(F(A + q * av, B + q * bv, C + q * cv, D + q * dv)(x, y)-F(A, B, C, D)(x, y))<Delta")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "abs"
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (hide
                                                                                                                                                                                 "ans")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   "Gdef"
                                                                                                                                                                                   1
                                                                                                                                                                                   :dir
                                                                                                                                                                                   rl)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "NOT FORALL (r1,r2,r3,r4,r5,r6,t1,t2,t3,t4,t5,t6:real): FQ(r1,r2,r3,r4,r5,r6)(x,y)-FQ(t1,t2,t3,t4,t5,t6)(x,y) = FQ(r1-t1,r2-t2,r3-t3,r4-t4,r5-t5,r6-t6)(x,y)")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (hide-all-but
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "FQ")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         -1
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "FORALL (r1,r2,r3,r4,r5,r6:real): abs(r1)<Delta/6 AND abs(r2)<Delta/6 AND abs(r3)<Delta/6 AND abs(r4)<Delta/6 AND abs(r5)<Delta/6 AND abs(r6)<Delta/6 IMPLIES abs(FQ(r1,r2,r3,r4,r5,r6)(x,y))<Delta")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst?)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (hide
                                                                                                                                                                                                 2)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                   "abs_neg")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (split
                                                                                                                                                                                                     +)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       1
                                                                                                                                                                                                       :dir
                                                                                                                                                                                                       rl)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       1
                                                                                                                                                                                                       :dir
                                                                                                                                                                                                       rl)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       1
                                                                                                                                                                                                       :dir
                                                                                                                                                                                                       rl)
                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("4"
                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       1
                                                                                                                                                                                                       :dir
                                                                                                                                                                                                       rl)
                                                                                                                                                                                                      (("4"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("5"
                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       1
                                                                                                                                                                                                       :dir
                                                                                                                                                                                                       rl)
                                                                                                                                                                                                      (("5"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("6"
                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       1
                                                                                                                                                                                                       :dir
                                                                                                                                                                                                       rl)
                                                                                                                                                                                                      (("6"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (case
                                                                                                                                                                                             "NOT (0<=x AND x<=1 AND 0<=y AND y<=1)")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (hide-all-but
                                                                                                                                                                                               (-1
                                                                                                                                                                                                1))
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (skeep*)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "FQ")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (case
                                                                                                                                                                                                       "NOT FORALL (t1,t2,t3,t4,t5,t6:real): abs(t1)+abs(t2)+abs(t3)+abs(t4)+abs(t5)+abs(t6)<Delta IMPLIES abs(t1+t2+t3+t4+t5+t6)<Delta")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (hide-all-but
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (grind)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (inst?)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (hide
                                                                                                                                                                                                             2)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (case
                                                                                                                                                                                                               "NOT FORALL (rt1,rt2,rt3,rt4,rt5,rt6:real): rt1<Delta/6 AND rt2<Delta/6 AND rt3<Delta/6 AND rt4<Delta/6 AND rt5<Delta/6 AND rt6<Delta/6 IMPLIES rt1+rt2+rt3+rt4+rt5+rt6<Delta")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (skeep*)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (case
                                                                                                                                                                                                                     "FORALL (a1,a2,a3,a4,a5,a6,Db:real): a1<Db/6 AND a2<Db/6 AND a3<Db/6 AND a4<Db/6 AND a5<Db/6 AND a6<Db/6 IMPLIES a1+a2+a3+a4+a5+a6<Db")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (inst?)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (split
                                                                                                                                                                                                                         -)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("3"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("4"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("5"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("6"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("7"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                                                       1)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (grind)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (hide
                                                                                                                                                                                                                     2)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (case
                                                                                                                                                                                                                       "FORALL (rr:real,pr:nnreal): pr<=1 IMPLIES abs(rr*pr)<=abs(rr)")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (split
                                                                                                                                                                                                                         +)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                           -
                                                                                                                                                                                                                           "r3"
                                                                                                                                                                                                                           "x*y")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (mult-ineq
                                                                                                                                                                                                                               -2
                                                                                                                                                                                                                               -4)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                                             "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (inst?)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "sq"
                                                                                                                                                                                                                               2)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (mult-ineq
                                                                                                                                                                                                                                 -2
                                                                                                                                                                                                                                 -2)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("3"
                                                                                                                                                                                                                          (inst?)
                                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "sq"
                                                                                                                                                                                                                               2)
                                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                                (mult-ineq
                                                                                                                                                                                                                                 -4
                                                                                                                                                                                                                                 -4)
                                                                                                                                                                                                                                (("3"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("4"
                                                                                                                                                                                                                          (inst?)
                                                                                                                                                                                                                          (("4"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("5"
                                                                                                                                                                                                                          (inst?)
                                                                                                                                                                                                                          (("5"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("6"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (hide-all-but
                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (skeep*)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "abs")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (mult-by
                                                                                                                                                                                                                                         -3
                                                                                                                                                                                                                                         "-rr")
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                                        (mult-by
                                                                                                                                                                                                                                         1
                                                                                                                                                                                                                                         "pr")
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                                       ("3"
                                                                                                                                                                                                                                        (mult-by
                                                                                                                                                                                                                                         -1
                                                                                                                                                                                                                                         "pr")
                                                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                                       ("4"
                                                                                                                                                                                                                                        (mult-by
                                                                                                                                                                                                                                         -1
                                                                                                                                                                                                                                         "rr")
                                                                                                                                                                                                                                        (("4"
                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "EXISTS (M:posnat): M>norm(av) AND M>norm(bv) AND M>norm(cv) AND M>norm(dv)")
                                                                                                                          (("1"
                                                                                                                            (skeep
                                                                                                                             -)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               +
                                                                                                                               "Dstar/M")
                                                                                                                              (("1"
                                                                                                                                (skeep*)
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "norm_scal")
                                                                                                                                  (("1"
                                                                                                                                    (rewrite
                                                                                                                                     "norm_scal")
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "norm_scal")
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "norm_scal")
                                                                                                                                        (("1"
                                                                                                                                          (cross-mult
                                                                                                                                           -5)
                                                                                                                                          (("1"
                                                                                                                                            (mult-by
                                                                                                                                             -1
                                                                                                                                             "abs(q)")
                                                                                                                                            (("1"
                                                                                                                                              (mult-by
                                                                                                                                               -2
                                                                                                                                               "abs(q)")
                                                                                                                                              (("1"
                                                                                                                                                (mult-by
                                                                                                                                                 -3
                                                                                                                                                 "abs(q)")
                                                                                                                                                (("1"
                                                                                                                                                  (mult-by
                                                                                                                                                   -4
                                                                                                                                                   "abs(q)")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               +
                                                                                                                               "ceiling(max(max(norm(av),norm(bv)),max(norm(cv),norm(dv))))+1")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         (-1 1))
                                                        (("2"
                                                          (skeep*)
                                                          (("2"
                                                            (case
                                                             "EXISTS (M:posnat): M>10*norm(V1)+10 AND M>10*norm(V2)+10 AND M>10*norm(V3)+10 AND M>10*norm(V4)+10 AND M>10*abs(V1*V3)+10 AND M>10*abs(V1*V4)+10 AND M>10*abs(V2*V3)+10 AND M>10*abs(V2*V4)+10")
                                                            (("1"
                                                              (skeep*)
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "epsil/(1000*abs(K)*M+1000)")
                                                                (("1"
                                                                  (skeep*)
                                                                  (("1"
                                                                    (expand
                                                                     "G"
                                                                     +)
                                                                    (("1"
                                                                      (rewrite
                                                                       "dot_sub_left")
                                                                      (("1"
                                                                        (rewrite
                                                                         "dot_sub_left")
                                                                        (("1"
                                                                          (rewrite
                                                                           "dot_add_left")
                                                                          (("1"
                                                                            (rewrite
                                                                             "dot_add_left")
                                                                            (("1"
                                                                              (rewrite
                                                                               "dot_sub_right")
                                                                              (("1"
                                                                                (rewrite
                                                                                 "dot_sub_right")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "dot_sub_right")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "dot_sub_right")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "dot_sub_right")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "dot_sub_right")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "dot_add_right")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "dot_add_right")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "dot_add_right")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "dot_add_right")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "dot_add_right")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "dot_add_right")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "dot_add_right")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "dot_add_right")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "NOT FORALL (r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12:real): abs(r1)<epsil/12 AND abs(r2)<epsil/12 AND abs(r3)<epsil/12 AND abs(r4)<epsil/12 AND abs(r5)<epsil/12 AND abs(r6)<epsil/12 AND abs(r7)<epsil/12 AND abs(r8)<epsil/12 AND abs(r9)<epsil/12 AND abs(r10)<epsil/12 AND abs(r11)<epsil/12 AND abs(r12)<epsil/12 IMPLIES abs(r1+r2+r3+r4+r5+r6-r7-r8-r9-r10-r11-r12)<epsil")
                                                                                                            (("1"
                                                                                                              (hide-all-but
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (skeep*)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "NOT r1 + r2 + r3 + r4 + r5 + r6 - r7 - r8 - r9 - r10 - r11 - r12 = (r1 + r2 + r3) + (r4 + r5 + r6) + (-(  r7 + r8 + r9)) + (-(r10 + r11 + r12))")
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (replaces
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "FORALL (bb,nn,mm,dd:real): abs(bb)<epsil/4 AND abs(nn)<epsil/4 AND abs(mm)<epsil/4 AND abs(dd)<epsil/4 IMPLIES abs(bb+nn+mm+dd)<epsil")
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("1"
                                                                                                                              (split)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 (-4
                                                                                                                                  -5
                                                                                                                                  -6
                                                                                                                                  -7
                                                                                                                                  -8
                                                                                                                                  -9
                                                                                                                                  -10
                                                                                                                                  -11
                                                                                                                                  -12))
                                                                                                                                (("1"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 (-1
                                                                                                                                  -2
                                                                                                                                  -3
                                                                                                                                  -7
                                                                                                                                  -8
                                                                                                                                  -9
                                                                                                                                  -10
                                                                                                                                  -11
                                                                                                                                  -12))
                                                                                                                                (("2"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("3"
                                                                                                                                (hide
                                                                                                                                 (-1
                                                                                                                                  -2
                                                                                                                                  -3
                                                                                                                                  -4
                                                                                                                                  -5
                                                                                                                                  -6
                                                                                                                                  -10
                                                                                                                                  -11
                                                                                                                                  -12))
                                                                                                                                (("3"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("4"
                                                                                                                                (hide
                                                                                                                                 (-1
                                                                                                                                  -2
                                                                                                                                  -3
                                                                                                                                  -4
                                                                                                                                  -5
                                                                                                                                  -6
                                                                                                                                  -7
                                                                                                                                  -8
                                                                                                                                  -9))
                                                                                                                                (("4"
                                                                                                                                  (grind)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "abs_mult")
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "abs_mult")
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "abs_mult")
                                                                                                                        (("2"
                                                                                                                          (rewrite
                                                                                                                           "abs_mult")
                                                                                                                          (("2"
                                                                                                                            (rewrite
                                                                                                                             "abs_mult")
                                                                                                                            (("2"
                                                                                                                              (rewrite
                                                                                                                               "abs_mult")
                                                                                                                              (("2"
                                                                                                                                (rewrite
                                                                                                                                 "abs_mult")
                                                                                                                                (("2"
                                                                                                                                  (rewrite
                                                                                                                                   "abs_mult")
                                                                                                                                  (("2"
                                                                                                                                    (rewrite
                                                                                                                                     "abs_mult")
                                                                                                                                    (("2"
                                                                                                                                      (rewrite
                                                                                                                                       "abs_mult")
                                                                                                                                      (("2"
                                                                                                                                        (rewrite
                                                                                                                                         "abs_mult")
                                                                                                                                        (("2"
                                                                                                                                          (rewrite
                                                                                                                                           "abs_mult")
                                                                                                                                          (("2"
                                                                                                                                            (lemma
                                                                                                                                             "vectors_2D.schwarz")
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "NOT FORALL (u,v:Vect2): norm(u)*norm(v)*abs(K)<epsil/12 IMPLIES abs(u*v)*abs(K)<epsil/12")
                                                                                                                                              (("1"
                                                                                                                                                (hide-all-but
                                                                                                                                                 (-1
                                                                                                                                                  1))
                                                                                                                                                (("1"
                                                                                                                                                  (skeep)
                                                                                                                                                  (("1"
                                                                                                                                                    (insteep)
                                                                                                                                                    (("1"
                                                                                                                                                      (mult-by
                                                                                                                                                       -2
                                                                                                                                                       "abs(K)")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (case
                                                                                                                                                 "NOT FORALL (WWa,WWb:Vect2): norm(WWa) <= epsil / (1000 + 1000 * (abs(K) * M)) AND norm(WWb) <= epsil / (1000 + 1000 * (abs(K) * M)) IMPLIES abs(WWa*WWb)*abs(K)<epsil/12")
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "NOT epsil<1")
                                                                                                                                                  (("1"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-1
                                                                                                                                                      -2
                                                                                                                                                      1))
                                                                                                                                                    (("2"
                                                                                                                                                      (skeep*)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst?)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (hide
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (mult-ineq
                                                                                                                                                               -2
                                                                                                                                                               -3)
                                                                                                                                                              (("1"
                                                                                                                                                                (mult-by
                                                                                                                                                                 -1
                                                                                                                                                                 "abs(K)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (invoke
                                                                                                                                                                   (case
                                                                                                                                                                    "%1 < epsil/12")
                                                                                                                                                                   (!
                                                                                                                                                                    -1
                                                                                                                                                                    2))
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (case
                                                                                                                                                                     "(1 / (1000 + 1000 * (abs(K) * M))) *
                                    (epsil / (1000 + 1000 * (abs(K) * M)))
                                    * abs(K)
                                    < 1 / 12")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (mult-by
                                                                                                                                                                       -1
                                                                                                                                                                       "epsil")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (cross-mult
                                                                                                                                                                       1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (case
                                                                                                                                                                           "NOT epsil<1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (propax)
                                                                                                                                                                            nil
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (case
                                                                                                                                                                             "1<=M")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (mult-ineq
                                                                                                                                                                               -1
                                                                                                                                                                               -2)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (mult-by
                                                                                                                                                                                 -1
                                                                                                                                                                                 "abs(K)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "abs"
                                                                                                                                                                 +
                                                                                                                                                                 1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "abs"
                                                                                                                                                                   +
                                                                                                                                                                   1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "abs"
                                                                                                                                                                     +
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (label
                                                                                                                                                   "multz"
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (hide
                                                                                                                                                     "multz")
                                                                                                                                                    (("2"
                                                                                                                                                      (split
                                                                                                                                                       +)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst?)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (hide
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (copy
                                                                                                                                                               -14)
                                                                                                                                                              (("1"
                                                                                                                                                                (cross-mult
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (mult-by
                                                                                                                                                                   -3
                                                                                                                                                                   "abs(K)*norm(W4)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (inst?)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (hide
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (copy
                                                                                                                                                               -13)
                                                                                                                                                              (("2"
                                                                                                                                                                (cross-mult
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (mult-by
                                                                                                                                                                   -4
                                                                                                                                                                   "abs(K)*norm(W3)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("3"
                                                                                                                                                        (inst?)
                                                                                                                                                        (("3"
                                                                                                                                                          (assert)
                                                                                                                                                          (("3"
                                                                                                                                                            (hide
                                                                                                                                                             1)
                                                                                                                                                            (("3"
                                                                                                                                                              (copy
                                                                                                                                                               -11)
                                                                                                                                                              (("3"
                                                                                                                                                                (cross-mult
                                                                                                                                                                 -1)
                                                                                                                                                                (("3"
                                                                                                                                                                  (mult-by
                                                                                                                                                                   -6
                                                                                                                                                                   "abs(K)*norm(W1)")
                                                                                                                                                                  (("3"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("4"
                                                                                                                                                        (reveal
                                                                                                                                                         "multz")
                                                                                                                                                        (("4"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("4"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("5"
                                                                                                                                                        (inst?)
                                                                                                                                                        (("5"
                                                                                                                                                          (assert)
                                                                                                                                                          (("5"
                                                                                                                                                            (hide
                                                                                                                                                             1)
                                                                                                                                                            (("5"
                                                                                                                                                              (copy
                                                                                                                                                               -12)
                                                                                                                                                              (("5"
                                                                                                                                                                (cross-mult
                                                                                                                                                                 -1)
                                                                                                                                                                (("5"
                                                                                                                                                                  (mult-by
                                                                                                                                                                   -5
                                                                                                                                                                   "abs(K)*norm(W2)")
                                                                                                                                                                  (("5"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("6"
                                                                                                                                                        (reveal
                                                                                                                                                         "multz")
                                                                                                                                                        (("6"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("6"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("7"
                                                                                                                                                        (inst?)
                                                                                                                                                        (("7"
                                                                                                                                                          (assert)
                                                                                                                                                          (("7"
                                                                                                                                                            (hide
                                                                                                                                                             1)
                                                                                                                                                            (("7"
                                                                                                                                                              (copy
                                                                                                                                                               -13)
                                                                                                                                                              (("7"
                                                                                                                                                                (cross-mult
                                                                                                                                                                 -1)
                                                                                                                                                                (("7"
                                                                                                                                                                  (mult-by
                                                                                                                                                                   -3
                                                                                                                                                                   "abs(K)*norm(W3)")
                                                                                                                                                                  (("7"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("8"
                                                                                                                                                        (inst?)
                                                                                                                                                        (("8"
                                                                                                                                                          (assert)
                                                                                                                                                          (("8"
                                                                                                                                                            (hide
                                                                                                                                                             1)
                                                                                                                                                            (("8"
                                                                                                                                                              (copy
                                                                                                                                                               -14)
                                                                                                                                                              (("8"
                                                                                                                                                                (cross-mult
                                                                                                                                                                 -1)
                                                                                                                                                                (("8"
                                                                                                                                                                  (mult-by
                                                                                                                                                                   -4
                                                                                                                                                                   "abs(K)*norm(W4)")
                                                                                                                                                                  (("8"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("9"
                                                                                                                                                        (inst?)
                                                                                                                                                        (("9"
                                                                                                                                                          (assert)
                                                                                                                                                          (("9"
                                                                                                                                                            (hide
                                                                                                                                                             1)
                                                                                                                                                            (("9"
                                                                                                                                                              (copy
                                                                                                                                                               -11)
                                                                                                                                                              (("9"
                                                                                                                                                                (cross-mult
                                                                                                                                                                 -1)
                                                                                                                                                                (("9"
                                                                                                                                                                  (mult-by
                                                                                                                                                                   -5
                                                                                                                                                                   "abs(K)*norm(W1)")
                                                                                                                                                                  (("9"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("10"
                                                                                                                                                        (reveal
                                                                                                                                                         "multz")
                                                                                                                                                        (("10"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("10"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("11"
                                                                                                                                                        (inst?)
                                                                                                                                                        (("11"
                                                                                                                                                          (assert)
                                                                                                                                                          (("11"
                                                                                                                                                            (hide
                                                                                                                                                             1)
                                                                                                                                                            (("11"
                                                                                                                                                              (copy
                                                                                                                                                               -12)
                                                                                                                                                              (("11"
                                                                                                                                                                (cross-mult
                                                                                                                                                                 -1)
                                                                                                                                                                (("11"
                                                                                                                                                                  (mult-by
                                                                                                                                                                   -6
                                                                                                                                                                   "abs(K)*norm(W2)")
                                                                                                                                                                  (("11"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("12"
                                                                                                                                                        (reveal
                                                                                                                                                         "multz")
                                                                                                                                                        (("12"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("12"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (name
                                                                 "HG"
                                                                 "max(10 * norm(V1) + 10,max(10 * norm(V2) + 10,max(10 * norm(V3) + 10,max(10 * norm(V4) + 10,max(10 * abs(V1 * V3) + 10,max(10 * abs(V1 * V4) + 10,max(10 * abs(V2 * V3) + 10,10 * abs(V2 * V4) + 10)))))))")
                                                                (("2"
                                                                  (case
                                                                   "NOT (    HG >= 10 * norm(V1) + 10 AND HG >= 10 * norm(V2) + 10
         AND HG >= 10 * norm(V3) + 10 AND HG >= 10 * norm(V4) + 10
         AND HG >= 10 * abs(V1 * V3) + 10 AND HG >= 10 * abs(V1 * V4) + 10
         AND HG >= 10 * abs(V2 * V3) + 10 AND HG >= 10 * abs(V2 * V4) + 10)")
                                                                  (("1"
                                                                    (hide
                                                                     2)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (hide
                                                                       -9)
                                                                      (("2"
                                                                        (inst
                                                                         +
                                                                         "ceiling(HG)+10")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isopen? const-decl "bool" multipoly nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D "vectors/")
    (- const-decl "Vector" vectors_2D "vectors/")
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (* const-decl "real" vectors_2D "vectors/")
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (segment_2Ds_cross const-decl "bool" edge_proximity nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (on_segment_2D? const-decl "bool" edge_proximity nil)
    (sub_eq_zero formula-decl nil vectors_2D "vectors/")
    (sqv_eq_0 formula-decl nil vectors_2D "vectors/")
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (B skolem-const-decl "Vector" multipoly nil)
    (D skolem-const-decl "Vector" multipoly nil)
    (C skolem-const-decl "Vector" multipoly nil)
    (A skolem-const-decl "Vector" multipoly nil)
    (cont_box_min formula-decl nil real_facts "reals/")
    (x2 skolem-const-decl "real" multipoly nil)
    (x1 skolem-const-decl "real" multipoly nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (expt def-decl "real" exponentiation nil)
    (^ const-decl "real" exponentiation nil)
    (quad_box_cont formula-decl nil real_facts "reals/")
    (< const-decl "bool" reals nil)
    (norm const-decl "nnreal" vectors_2D "vectors/")
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (abs_neg formula-decl nil abs_lems "reals/")
    (x skolem-const-decl "real" multipoly nil)
    (y skolem-const-decl "real" multipoly nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (odd_times_odd_is_odd application-judgement "odd_int" integers nil)
    (posint_times_posint_is_posint application-judgement "posint"
     integers nil)
    (abs_nat formula-decl nil abs_lems "reals/")
    (le_times_le_any1 formula-decl nil extra_real_props nil)
    (nnreal_times_nnreal_is_nnreal judgement-tcc nil real_types nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (norm_scal formula-decl nil vectors_2D "vectors/")
    (div_mult_pos_le2 formula-decl nil real_props nil)
    (q skolem-const-decl "real" multipoly nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (nonneg_real_max application-judgement
     "{z: nonneg_real | z >= x AND z >= y}" real_defs nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (ceiling const-decl "{i | x <= i & i < x + 1}" floor_ceil nil)
    (integer nonempty-type-from-decl nil integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nonneg_ceiling_is_nat application-judgement "nat" floor_ceil nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (posrat_div_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (posreal_min application-judgement
     "{z: posreal | z <= x AND z <= y}" real_defs nil)
    (G skolem-const-decl "[[real, Vect2, Vect2, Vect2, Vect2] -> real]"
     multipoly nil)
    (posreal_max application-judgement
     "{z: posreal | z >= x AND z >= y}" real_defs nil)
    (dot_sub_left formula-decl nil vectors_2D "vectors/")
    (dot_add_left formula-decl nil vectors_2D "vectors/")
    (dot_sub_right formula-decl nil vectors_2D "vectors/")
    (dot_add_right formula-decl nil vectors_2D "vectors/")
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (W4 skolem-const-decl "Vect2" multipoly nil)
    (K skolem-const-decl "real" multipoly nil)
    (W3 skolem-const-decl "Vect2" multipoly nil)
    (W1 skolem-const-decl "Vect2" multipoly nil)
    (W2 skolem-const-decl "Vect2" multipoly nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (nonzero_abs_is_pos application-judgement "{y: posreal | y >= x}"
     real_defs nil)
    (times_div1 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (times_div2 formula-decl nil real_props nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (div_mult_pos_lt1 formula-decl nil real_props nil)
    (div_mult_pos_lt2 formula-decl nil real_props nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (lt_times_lt_any1 formula-decl nil extra_real_props nil)
    (schwarz formula-decl nil vectors_2D "vectors/")
    (abs_mult formula-decl nil real_props nil)
    (nnreal_plus_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (F skolem-const-decl
     "[[Vect2, Vect2, Vect2, Vect2] -> [[real, real] -> real]]"
     multipoly nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (FQ skolem-const-decl
     "[[real, real, real, real, real, real] -> [[real, real] -> real]]"
     multipoly nil)
    (* const-decl "Vector" vectors_2D "vectors/")
    (+ const-decl "Vector" vectors_2D "vectors/")
    (NOT const-decl "[bool -> bool]" booleans nil)
    (segments_2Ds_notcross_at const-decl "bool" multipoly nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (TRUE const-decl "bool" booleans nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (sq const-decl "nonneg_real" sq "reals/"))
   nil)
  (segments_2Ds_notcross_open-5 nil 3672582229
   (""
    (name "FQ"
          "LAMBDA (a,b,c,d,e,f:real): (LAMBDA (x,y:real): a*sq(x)+b*sq(y)+c*x*y+d*x+e*y+f)")
    (("" (hide -)
      (("" (skeep*)
        (("" (expand "isopen?")
          (("" (skeep)
            (("" (assert)
              (("" (expand "segments_2Ds_notcross_at")
                ((""
                  (name "F"
                        "LAMBDA (W,X,Y,Z:Vect2): FQ(sqv(X-W),sqv(Z-Y),-2*((X-W)*(Z-Y)),2*((X-W)*(W-Y)),-2*((Z-Y)*(W-Y)),sqv(W-Y))")
                  ((""
                    (case "NOT FORALL (W,X,Y,Z:Vect2,xr,yr:real): F(W,X,Y,Z)(xr,yr)=sqv((W+xr*(X-W))-(Y+yr*(Z-Y)))")
                    (("1" (hide-all-but 1)
                      (("1" (skeep*)
                        (("1" (expand "F")
                          (("1" (expand "FQ") (("1" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2"
                      (case "NOT FORALL (A,B,C,D:Vect2): segment_2Ds_cross(A,B,C,D) IFF (EXISTS (x,y:real): 0<=x AND x<=1 AND 0<=y AND y<=1 AND F(A,B,C,D)(x,y)=0)")
                      (("1" (skeep*)
                        (("1" (ground)
                          (("1" (expand "segment_2Ds_cross")
                            (("1" (skeep*)
                              (("1"
                                (expand "on_segment_2D?" (-1 -2))
                                (("1"
                                  (skolem - "x")
                                  (("1"
                                    (skolem - "y")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (replaces -3)
                                        (("1"
                                          (insteep)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (rewrite -6 1)
                                              (("1"
                                                (case
                                                 "(1 - x) * A + x * B=A+x*(B-A)")
                                                (("1"
                                                  (replaces -1)
                                                  (("1"
                                                    (replaces -5)
                                                    (("1"
                                                      (hide-all-but 1)
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (skeep*)
                            (("2" (expand "segment_2Ds_cross" 1)
                              (("2"
                                (inst + "(1-x)*A+x*B")
                                (("2"
                                  (expand "on_segment_2D?" 1)
                                  (("2"
                                    (split +)
                                    (("1"
                                      (inst + "x")
                                      (("1" (assert) nil nil))
                                      nil)
                                     ("2"
                                      (inst + "y")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (rewrite -6 -5)
                                          (("2"
                                            (lemma
                                             "vectors_2D.sqv_eq_0")
                                            (("2"
                                              (inst?)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (rewrite
                                                   "sub_eq_zero")
                                                  (("2"
                                                    (case
                                                     "(1 - x) * A + x * B=A+x*(B-A)")
                                                    (("1"
                                                      (replaces -1)
                                                      (("1"
                                                        (replaces -1)
                                                        (("1"
                                                          (hide-all-but
                                                           1)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (label "rews" -1)
                        (("2" (name "A" "a + t * av")
                          (("2" (replace -1)
                            (("2" (name "B" "b+t*bv")
                              (("2"
                                (replace -1)
                                (("2"
                                  (name "C" "c+t*cv")
                                  (("2"
                                    (replace -1)
                                    (("2"
                                      (name "D" "d+t*dv")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (case
                                           "EXISTS (epsil: posreal):
                                                                                       FORALL (q: real):
                                                                                         0<=t+q AND t+q <= T AND abs(q) <= epsil IMPLIES
                                                                                          (NOT segment_2Ds_cross(A + q * av, B + q * bv, C + q * cv,
                                                                                                                 D + q * dv))")
                                          (("1"
                                            (hide 1)
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (inst + "epsil")
                                                (("1"
                                                  (skeep*)
                                                  (("1"
                                                    (inst - "q-t")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand "A" 1)
                                                        (("1"
                                                          (expand
                                                           "B"
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "C"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "D"
                                                               1)
                                                              (("1"
                                                                (case
                                                                 "FORALL (zz,w:Vect2): (zz+t*w)+(q-t)*w = zz+q*w")
                                                                (("1"
                                                                  (rewrite
                                                                   -1
                                                                   1)
                                                                  (("1"
                                                                    (rewrite
                                                                     -1
                                                                     1)
                                                                    (("1"
                                                                      (rewrite
                                                                       -1
                                                                       1)
                                                                      (("1"
                                                                        (rewrite
                                                                         -1
                                                                         1)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide (2 4))
                                            (("2"
                                              (case
                                               "NOT EXISTS (Delta:posreal): FORALL (x,y:real): 0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                                                                          IMPLIES F(A, B, C, D)(x, y) > Delta")
                                              (("1"
                                                (hide 2)
                                                (("1"
                                                  (lemma
                                                   "cont_box_min")
                                                  (("1"
                                                    (inst
                                                     -
                                                     "0"
                                                     "0"
                                                     "1"
                                                     "1")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst
                                                         -
                                                         "F(A,B,C,D)")
                                                        (("1"
                                                          (split -)
                                                          (("1"
                                                            (skeep -)
                                                            (("1"
                                                              (case
                                                               "F(A,B,C,D)(x1,x2)=0")
                                                              (("1"
                                                                (rewrite
                                                                 -11
                                                                 +)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "x1"
                                                                   "x2")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (case
                                                                 "NOT F(A,B,C,D)(x1,x2)>0")
                                                                (("1"
                                                                  (rewrite
                                                                   -11
                                                                   1)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   1)
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "F(A,B,C,D)(x1,x2)/2")
                                                                    (("1"
                                                                      (skeep*)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "x"
                                                                         "y")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide
                                                             (2 3))
                                                            (("2"
                                                              (skeep*)
                                                              (("2"
                                                                (lemma
                                                                 "quad_box_cont")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "F(A,B,C,D)")
                                                                  (("2"
                                                                    (split
                                                                     -)
                                                                    (("1"
                                                                      (insteep
                                                                       -)
                                                                      (("1"
                                                                        (skeep*)
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "delta")
                                                                          (("1"
                                                                            (skeep*)
                                                                            (("1"
                                                                              (insteep
                                                                               -)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (copy
                                                                         -11)
                                                                        (("2"
                                                                          (replace
                                                                           -1
                                                                           1
                                                                           :dir
                                                                           rl)
                                                                          (("2"
                                                                            (expand
                                                                             "FQ"
                                                                             1)
                                                                            (("2"
                                                                              (inst
                                                                               +
                                                                               "sqv(B - A)"
                                                                               "sqv(D - C)"
                                                                               "- 2 * (((B - A) * (D - C)))"
                                                                               " 2 * (((B - A) * (A - C)))"
                                                                               "- 2 * (((D - C) * (A - C)))"
                                                                               "sqv(A - C)")
                                                                              (("2"
                                                                                (skeep*)
                                                                                (("2"
                                                                                  (expand
                                                                                   "sq")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "^")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "expt")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "expt")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "expt")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (label "igz" -1)
                                                (("2"
                                                  (skeep -)
                                                  (("2"
                                                    (name
                                                     "G"
                                                     "LAMBDA (K:real,V1,V2,V3,V4:Vect2): K*((V1-V2)*(V3-V4))")
                                                    (("2"
                                                      (case
                                                       "FORALL (K: real, V1, V2, V3, V4: Vect2): FORALL (epsil:posreal): EXISTS (delta:posreal): FORALL (W1,W2,W3,W4:Vect2): norm(W1)<=delta AND norm(W2)<=delta AND norm(W3)<=delta AND norm(W4)<=delta IMPLIES abs(G(K,V1,V2,V3,V4)-G(K,V1+W1,V2+W2,V3+W3,V4+W4))<epsil")
                                                      (("1"
                                                        (case
                                                         "NOT (LAMBDA (W, X, Y, Z: Vect2):
                                                                                                                                  FQ(G(1,X,W,X,W), G(1,Z,Y,Z,Y), G(-2,X,W,Z,Y),
                                                                                                                                       G(2,X,W,W,Y), G(-2,Z,Y,W,Y),
                                                                                                                                       G(1,W,Y,W,Y)))
                                                                                                                                = F")
                                                        (("1"
                                                          (replace
                                                           -10
                                                           1
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide-all-but
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "G")
                                                              (("1"
                                                                (expand
                                                                 "sqv")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (label
                                                           "Gdef"
                                                           -1)
                                                          (("2"
                                                            (copy -1)
                                                            (("2"
                                                              (decompose-equality
                                                               -1)
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "(A,B,C,D)")
                                                                (("2"
                                                                  (inst-cp
                                                                   -
                                                                   "1"
                                                                   "B"
                                                                   "A"
                                                                   "B"
                                                                   "A")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "Delta/100")
                                                                    (("2"
                                                                      (skolem
                                                                       -
                                                                       "d1")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "1"
                                                                         "D"
                                                                         "C"
                                                                         "D"
                                                                         "C")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "Delta/100")
                                                                          (("2"
                                                                            (skolem
                                                                             -
                                                                             "d2")
                                                                            (("2"
                                                                              (inst-cp
                                                                               -
                                                                               "-2"
                                                                               "B"
                                                                               "A"
                                                                               "D"
                                                                               "C")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "Delta/100")
                                                                                (("2"
                                                                                  (skolem
                                                                                   -
                                                                                   "d3")
                                                                                  (("2"
                                                                                    (inst-cp
                                                                                     -
                                                                                     "2"
                                                                                     "B"
                                                                                     "A"
                                                                                     "A"
                                                                                     "C")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "Delta/100")
                                                                                      (("2"
                                                                                        (skolem
                                                                                         -
                                                                                         "d4")
                                                                                        (("2"
                                                                                          (inst-cp
                                                                                           -
                                                                                           "-2"
                                                                                           "D"
                                                                                           "C"
                                                                                           "A"
                                                                                           "C")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "Delta/100")
                                                                                            (("2"
                                                                                              (skolem
                                                                                               -
                                                                                               "d5")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "1"
                                                                                                 "A"
                                                                                                 "C"
                                                                                                 "A"
                                                                                                 "C")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "Delta/100")
                                                                                                  (("2"
                                                                                                    (skolem
                                                                                                     -
                                                                                                     "d6")
                                                                                                    (("2"
                                                                                                      (name
                                                                                                       "Dstar"
                                                                                                       "min(min(d1,d2),min(min(d3,d4),min(d5,d6)))")
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "EXISTS (epsil:posreal): FORALL (q:real): abs(q)<=epsil IMPLIES (norm(q*av)<=Dstar AND norm(q*bv)<=Dstar AND norm(q*cv)<=Dstar AND norm(q*dv)<=Dstar)")
                                                                                                        (("1"
                                                                                                          (label
                                                                                                           "ans"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (skeep
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "epsil")
                                                                                                              (("1"
                                                                                                                (skeep*)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "q")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "q*av"
                                                                                                                         "q*cv"
                                                                                                                         "q*av"
                                                                                                                         "q*cv")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "q*dv"
                                                                                                                             "q*cv"
                                                                                                                             "q*av"
                                                                                                                             "q*cv")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "q*bv"
                                                                                                                                   "q*av"
                                                                                                                                   "q*av"
                                                                                                                                   "q*cv")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "q*bv"
                                                                                                                                       "q*av"
                                                                                                                                       "q*dv"
                                                                                                                                       "q*cv")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "q*dv"
                                                                                                                                           "q*cv"
                                                                                                                                           "q*dv"
                                                                                                                                           "q*cv")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "q*bv"
                                                                                                                                               "q*av"
                                                                                                                                               "q*bv"
                                                                                                                                               "q*av")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "NOT segment_2Ds_cross(A + q * av, B + q * bv, C + q * cv, D + q * dv)")
                                                                                                                                                  (("1"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (rewrite
                                                                                                                                                     "rews"
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (copy
                                                                                                                                                       "igz")
                                                                                                                                                      (("2"
                                                                                                                                                        (hide
                                                                                                                                                         "igz")
                                                                                                                                                        (("2"
                                                                                                                                                          (skeep
                                                                                                                                                           -)
                                                                                                                                                          (("2"
                                                                                                                                                            (insteep
                                                                                                                                                             -)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (case
                                                                                                                                                                 "abs(F(A + q * av, B + q * bv, C + q * cv, D + q * dv)(x, y)-F(A, B, C, D)(x, y))<Delta")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "abs"
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (hide
                                                                                                                                                                   "ans")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     "Gdef"
                                                                                                                                                                     1
                                                                                                                                                                     :dir
                                                                                                                                                                     rl)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (case
                                                                                                                                                                         "NOT FORALL (r1,r2,r3,r4,r5,r6,t1,t2,t3,t4,t5,t6:real): FQ(r1,r2,r3,r4,r5,r6)(x,y)-FQ(t1,t2,t3,t4,t5,t6)(x,y) = FQ(r1-t1,r2-t2,r3-t3,r4-t4,r5-t5,r6-t6)(x,y)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (hide-all-but
                                                                                                                                                                           1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "FQ")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           -1
                                                                                                                                                                           1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case
                                                                                                                                                                             "FORALL (r1,r2,r3,r4,r5,r6:real): abs(r1)<Delta/6 AND abs(r2)<Delta/6 AND abs(r3)<Delta/6 AND abs(r4)<Delta/6 AND abs(r5)<Delta/6 AND abs(r6)<Delta/6 IMPLIES abs(FQ(r1,r2,r3,r4,r5,r6)(x,y))<Delta")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst?)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (hide
                                                                                                                                                                                   2)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "abs_neg")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (split
                                                                                                                                                                                       +)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         -1
                                                                                                                                                                                         1
                                                                                                                                                                                         :dir
                                                                                                                                                                                         rl)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         -1
                                                                                                                                                                                         1
                                                                                                                                                                                         :dir
                                                                                                                                                                                         rl)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("3"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         -1
                                                                                                                                                                                         1
                                                                                                                                                                                         :dir
                                                                                                                                                                                         rl)
                                                                                                                                                                                        (("3"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("4"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         -1
                                                                                                                                                                                         1
                                                                                                                                                                                         :dir
                                                                                                                                                                                         rl)
                                                                                                                                                                                        (("4"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("5"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         -1
                                                                                                                                                                                         1
                                                                                                                                                                                         :dir
                                                                                                                                                                                         rl)
                                                                                                                                                                                        (("5"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("6"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         -1
                                                                                                                                                                                         1
                                                                                                                                                                                         :dir
                                                                                                                                                                                         rl)
                                                                                                                                                                                        (("6"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (case
                                                                                                                                                                               "NOT (0<=x AND x<=1 AND 0<=y AND y<=1)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                 (-1
                                                                                                                                                                                  1))
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (skeep*)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "FQ")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (case
                                                                                                                                                                                         "NOT FORALL (t1,t2,t3,t4,t5,t6:real): abs(t1)+abs(t2)+abs(t3)+abs(t4)+abs(t5)+abs(t6)<Delta IMPLIES abs(t1+t2+t3+t4+t5+t6)<Delta")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (grind)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (inst?)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (hide
                                                                                                                                                                                               2)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (case
                                                                                                                                                                                                 "NOT FORALL (rt1,rt2,rt3,rt4,rt5,rt6:real): rt1<Delta/6 AND rt2<Delta/6 AND rt3<Delta/6 AND rt4<Delta/6 AND rt5<Delta/6 AND rt6<Delta/6 IMPLIES rt1+rt2+rt3+rt4+rt5+rt6<Delta")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                                   1)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (skeep*)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (case
                                                                                                                                                                                                       "FORALL (a1,a2,a3,a4,a5,a6,Db:real): a1<Db/6 AND a2<Db/6 AND a3<Db/6 AND a4<Db/6 AND a5<Db/6 AND a6<Db/6 IMPLIES a1+a2+a3+a4+a5+a6<Db")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst?)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (split
                                                                                                                                                                                                           -)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("3"
                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("4"
                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("5"
                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("6"
                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("7"
                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (hide-all-but
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (grind)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (inst?)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (replace
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (hide
                                                                                                                                                                                                       2)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (case
                                                                                                                                                                                                         "FORALL (rr:real,pr:nnreal): pr<=1 IMPLIES abs(rr*pr)<=abs(rr)")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (split
                                                                                                                                                                                                           +)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -
                                                                                                                                                                                                             "r3"
                                                                                                                                                                                                             "x*y")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (mult-ineq
                                                                                                                                                                                                                 -2
                                                                                                                                                                                                                 -4)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                               "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "sq"
                                                                                                                                                                                                                 2)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (mult-ineq
                                                                                                                                                                                                                   -2
                                                                                                                                                                                                                   -2)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("3"
                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "sq"
                                                                                                                                                                                                                 2)
                                                                                                                                                                                                                (("3"
                                                                                                                                                                                                                  (mult-ineq
                                                                                                                                                                                                                   -4
                                                                                                                                                                                                                   -4)
                                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("4"
                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                            (("4"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("5"
                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                            (("5"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("6"
                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (skeep*)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "abs")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (ground)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (mult-by
                                                                                                                                                                                                                           -3
                                                                                                                                                                                                                           "-rr")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (mult-by
                                                                                                                                                                                                                           1
                                                                                                                                                                                                                           "pr")
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("3"
                                                                                                                                                                                                                          (mult-by
                                                                                                                                                                                                                           -1
                                                                                                                                                                                                                           "pr")
                                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("4"
                                                                                                                                                                                                                          (mult-by
                                                                                                                                                                                                                           -1
                                                                                                                                                                                                                           "rr")
                                                                                                                                                                                                                          (("4"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "EXISTS (M:posnat): M>norm(av) AND M>norm(bv) AND M>norm(cv) AND M>norm(dv)")
                                                                                                            (("1"
                                                                                                              (skeep
                                                                                                               -)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "Dstar/M")
                                                                                                                (("1"
                                                                                                                  (skeep*)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "norm_scal")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "norm_scal")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "norm_scal")
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "norm_scal")
                                                                                                                          (("1"
                                                                                                                            (cross-mult
                                                                                                                             -5)
                                                                                                                            (("1"
                                                                                                                              (mult-by
                                                                                                                               -1
                                                                                                                               "abs(q)")
                                                                                                                              (("1"
                                                                                                                                (mult-by
                                                                                                                                 -2
                                                                                                                                 "abs(q)")
                                                                                                                                (("1"
                                                                                                                                  (mult-by
                                                                                                                                   -3
                                                                                                                                   "abs(q)")
                                                                                                                                  (("1"
                                                                                                                                    (mult-by
                                                                                                                                     -4
                                                                                                                                     "abs(q)")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "ceiling(max(max(norm(av),norm(bv)),max(norm(cv),norm(dv))))+1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         (-1 1))
                                                        (("2"
                                                          (skeep*)
                                                          (("2"
                                                            (case
                                                             "EXISTS (M:posnat): M>norm(V1)+10 AND M>norm(V2)+10 AND M>norm(V3)+10 AND M>norm(V4)+10 AND M>abs(V1*V3)+10 AND M>abs(V1*V4)+10 AND M>abs(V2*V3)+10 AND M>abs(V2*V4)+10")
                                                            (("1"
                                                              (skeep*)
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "epsil/(1000*abs(K)*M+1000)")
                                                                (("1"
                                                                  (skeep*)
                                                                  (("1"
                                                                    (expand
                                                                     "G"
                                                                     +)
                                                                    (("1"
                                                                      (rewrite
                                                                       "dot_sub_left")
                                                                      (("1"
                                                                        (rewrite
                                                                         "dot_sub_left")
                                                                        (("1"
                                                                          (rewrite
                                                                           "dot_add_left")
                                                                          (("1"
                                                                            (rewrite
                                                                             "dot_add_left")
                                                                            (("1"
                                                                              (rewrite
                                                                               "dot_sub_right")
                                                                              (("1"
                                                                                (rewrite
                                                                                 "dot_sub_right")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "dot_sub_right")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "dot_sub_right")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "dot_sub_right")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "dot_sub_right")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "dot_add_right")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "dot_add_right")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "dot_add_right")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "dot_add_right")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "dot_add_right")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "dot_add_right")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "dot_add_right")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "dot_add_right")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (postpone)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (postpone)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil nil)
  (segments_2Ds_notcross_open-4 nil 3672582015
   (""
    (name "FQ"
          "LAMBDA (a,b,c,d,e,f:real): (LAMBDA (x,y:real): a*sq(x)+b*sq(y)+c*x*y+d*x+e*y+f)")
    (("" (hide -)
      (("" (skeep*)
        (("" (expand "isopen?")
          (("" (skeep)
            (("" (assert)
              (("" (expand "segments_2Ds_notcross_at")
                ((""
                  (name "F"
                        "LAMBDA (W,X,Y,Z:Vect2): FQ(sqv(X-W),sqv(Z-Y),-2*((X-W)*(Z-Y)),2*((X-W)*(W-Y)),-2*((Z-Y)*(W-Y)),sqv(W-Y))")
                  ((""
                    (case "NOT FORALL (W,X,Y,Z:Vect2,xr,yr:real): F(W,X,Y,Z)(xr,yr)=sqv((W+xr*(X-W))-(Y+yr*(Z-Y)))")
                    (("1" (hide-all-but 1)
                      (("1" (skeep*)
                        (("1" (expand "F")
                          (("1" (expand "FQ") (("1" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2"
                      (case "NOT FORALL (A,B,C,D:Vect2): segment_2Ds_cross(A,B,C,D) IFF (EXISTS (x,y:real): 0<=x AND x<=1 AND 0<=y AND y<=1 AND F(A,B,C,D)(x,y)=0)")
                      (("1" (skeep*)
                        (("1" (ground)
                          (("1" (expand "segment_2Ds_cross")
                            (("1" (skeep*)
                              (("1"
                                (expand "on_segment_2D?" (-1 -2))
                                (("1"
                                  (skolem - "x")
                                  (("1"
                                    (skolem - "y")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (replaces -3)
                                        (("1"
                                          (insteep)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (rewrite -6 1)
                                              (("1"
                                                (case
                                                 "(1 - x) * A + x * B=A+x*(B-A)")
                                                (("1"
                                                  (replaces -1)
                                                  (("1"
                                                    (replaces -5)
                                                    (("1"
                                                      (hide-all-but 1)
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (skeep*)
                            (("2" (expand "segment_2Ds_cross" 1)
                              (("2"
                                (inst + "(1-x)*A+x*B")
                                (("2"
                                  (expand "on_segment_2D?" 1)
                                  (("2"
                                    (split +)
                                    (("1"
                                      (inst + "x")
                                      (("1" (assert) nil nil))
                                      nil)
                                     ("2"
                                      (inst + "y")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (rewrite -6 -5)
                                          (("2"
                                            (lemma
                                             "vectors_2D.sqv_eq_0")
                                            (("2"
                                              (inst?)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (rewrite
                                                   "sub_eq_zero")
                                                  (("2"
                                                    (case
                                                     "(1 - x) * A + x * B=A+x*(B-A)")
                                                    (("1"
                                                      (replaces -1)
                                                      (("1"
                                                        (replaces -1)
                                                        (("1"
                                                          (hide-all-but
                                                           1)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (label "rews" -1)
                        (("2" (name "A" "a + t * av")
                          (("2" (replace -1)
                            (("2" (name "B" "b+t*bv")
                              (("2"
                                (replace -1)
                                (("2"
                                  (name "C" "c+t*cv")
                                  (("2"
                                    (replace -1)
                                    (("2"
                                      (name "D" "d+t*dv")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (case
                                           "EXISTS (epsil: posreal):
                                                                            FORALL (q: real):
                                                                              0<=t+q AND t+q <= T AND abs(q) <= epsil IMPLIES
                                                                               (NOT segment_2Ds_cross(A + q * av, B + q * bv, C + q * cv,
                                                                                                      D + q * dv))")
                                          (("1"
                                            (hide 1)
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (inst + "epsil")
                                                (("1"
                                                  (skeep*)
                                                  (("1"
                                                    (inst - "q-t")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand "A" 1)
                                                        (("1"
                                                          (expand
                                                           "B"
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "C"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "D"
                                                               1)
                                                              (("1"
                                                                (case
                                                                 "FORALL (zz,w:Vect2): (zz+t*w)+(q-t)*w = zz+q*w")
                                                                (("1"
                                                                  (rewrite
                                                                   -1
                                                                   1)
                                                                  (("1"
                                                                    (rewrite
                                                                     -1
                                                                     1)
                                                                    (("1"
                                                                      (rewrite
                                                                       -1
                                                                       1)
                                                                      (("1"
                                                                        (rewrite
                                                                         -1
                                                                         1)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide (2 4))
                                            (("2"
                                              (case
                                               "NOT EXISTS (Delta:posreal): FORALL (x,y:real): 0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                                                             IMPLIES F(A, B, C, D)(x, y) > Delta")
                                              (("1"
                                                (hide 2)
                                                (("1"
                                                  (lemma
                                                   "cont_box_min")
                                                  (("1"
                                                    (inst
                                                     -
                                                     "0"
                                                     "0"
                                                     "1"
                                                     "1")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst
                                                         -
                                                         "F(A,B,C,D)")
                                                        (("1"
                                                          (split -)
                                                          (("1"
                                                            (skeep -)
                                                            (("1"
                                                              (case
                                                               "F(A,B,C,D)(x1,x2)=0")
                                                              (("1"
                                                                (rewrite
                                                                 -11
                                                                 +)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "x1"
                                                                   "x2")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (case
                                                                 "NOT F(A,B,C,D)(x1,x2)>0")
                                                                (("1"
                                                                  (rewrite
                                                                   -11
                                                                   1)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   1)
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "F(A,B,C,D)(x1,x2)/2")
                                                                    (("1"
                                                                      (skeep*)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "x"
                                                                         "y")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide
                                                             (2 3))
                                                            (("2"
                                                              (skeep*)
                                                              (("2"
                                                                (lemma
                                                                 "quad_box_cont")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "F(A,B,C,D)")
                                                                  (("2"
                                                                    (split
                                                                     -)
                                                                    (("1"
                                                                      (insteep
                                                                       -)
                                                                      (("1"
                                                                        (skeep*)
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "delta")
                                                                          (("1"
                                                                            (skeep*)
                                                                            (("1"
                                                                              (insteep
                                                                               -)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (copy
                                                                         -11)
                                                                        (("2"
                                                                          (replace
                                                                           -1
                                                                           1
                                                                           :dir
                                                                           rl)
                                                                          (("2"
                                                                            (expand
                                                                             "FQ"
                                                                             1)
                                                                            (("2"
                                                                              (inst
                                                                               +
                                                                               "sqv(B - A)"
                                                                               "sqv(D - C)"
                                                                               "- 2 * (((B - A) * (D - C)))"
                                                                               " 2 * (((B - A) * (A - C)))"
                                                                               "- 2 * (((D - C) * (A - C)))"
                                                                               "sqv(A - C)")
                                                                              (("2"
                                                                                (skeep*)
                                                                                (("2"
                                                                                  (expand
                                                                                   "sq")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "^")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "expt")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "expt")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "expt")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (label "igz" -1)
                                                (("2"
                                                  (skeep -)
                                                  (("2"
                                                    (name
                                                     "G"
                                                     "LAMBDA (K:real,V1,V2,V3,V4:Vect2): K*((V1-V2)*(V3-V4))")
                                                    (("2"
                                                      (case
                                                       "FORALL (K: real, V1, V2, V3, V4: Vect2): FORALL (epsil:posreal): EXISTS (delta:posreal): FORALL (W1,W2,W3,W4:Vect2): norm(W1)<=delta AND norm(W2)<=delta AND norm(W3)<=delta AND norm(W4)<=delta IMPLIES abs(G(K,V1,V2,V3,V4)-G(K,V1+W1,V2+W2,V3+W3,V4+W4))<epsil")
                                                      (("1"
                                                        (case
                                                         "NOT (LAMBDA (W, X, Y, Z: Vect2):
                                                                                                                 FQ(G(1,X,W,X,W), G(1,Z,Y,Z,Y), G(-2,X,W,Z,Y),
                                                                                                                      G(2,X,W,W,Y), G(-2,Z,Y,W,Y),
                                                                                                                      G(1,W,Y,W,Y)))
                                                                                                               = F")
                                                        (("1"
                                                          (replace
                                                           -10
                                                           1
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide-all-but
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "G")
                                                              (("1"
                                                                (expand
                                                                 "sqv")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (copy -1)
                                                          (("2"
                                                            (decompose-equality
                                                             -1)
                                                            (("2"
                                                              (inst
                                                               -
                                                               "(A,B,C,D)")
                                                              (("2"
                                                                (inst-cp
                                                                 -
                                                                 "1"
                                                                 "B"
                                                                 "A"
                                                                 "B"
                                                                 "A")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "Delta/100")
                                                                  (("2"
                                                                    (skolem
                                                                     -
                                                                     "d1")
                                                                    (("2"
                                                                      (inst-cp
                                                                       -
                                                                       "1"
                                                                       "D"
                                                                       "C"
                                                                       "D"
                                                                       "C")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "Delta/100")
                                                                        (("2"
                                                                          (skolem
                                                                           -
                                                                           "d2")
                                                                          (("2"
                                                                            (inst-cp
                                                                             -
                                                                             "-2"
                                                                             "B"
                                                                             "A"
                                                                             "D"
                                                                             "C")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "Delta/100")
                                                                              (("2"
                                                                                (skolem
                                                                                 -
                                                                                 "d3")
                                                                                (("2"
                                                                                  (inst-cp
                                                                                   -
                                                                                   "2"
                                                                                   "B"
                                                                                   "A"
                                                                                   "A"
                                                                                   "C")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "Delta/100")
                                                                                    (("2"
                                                                                      (skolem
                                                                                       -
                                                                                       "d4")
                                                                                      (("2"
                                                                                        (inst-cp
                                                                                         -
                                                                                         "-2"
                                                                                         "D"
                                                                                         "C"
                                                                                         "A"
                                                                                         "C")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "Delta/100")
                                                                                          (("2"
                                                                                            (skolem
                                                                                             -
                                                                                             "d5")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "1"
                                                                                               "A"
                                                                                               "C"
                                                                                               "A"
                                                                                               "C")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "Delta/100")
                                                                                                (("2"
                                                                                                  (skolem
                                                                                                   -
                                                                                                   "d6")
                                                                                                  (("2"
                                                                                                    (name
                                                                                                     "Dstar"
                                                                                                     "min(min(d1,d2),min(min(d3,d4),min(d5,d6)))")
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "EXISTS (epsil:posreal): FORALL (q:real): abs(q)<=epsil IMPLIES (norm(q*av)<=Dstar AND norm(q*bv)<=Dstar AND norm(q*cv)<=Dstar AND norm(q*dv)<=Dstar)")
                                                                                                      (("1"
                                                                                                        (label
                                                                                                         "ans"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (skeep
                                                                                                           -)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "epsil")
                                                                                                            (("1"
                                                                                                              (skeep*)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "q")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "q*av"
                                                                                                                       "q*cv"
                                                                                                                       "q*av"
                                                                                                                       "q*cv")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "q*dv"
                                                                                                                           "q*cv"
                                                                                                                           "q*av"
                                                                                                                           "q*cv")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "q*bv"
                                                                                                                                 "q*av"
                                                                                                                                 "q*av"
                                                                                                                                 "q*cv")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "q*bv"
                                                                                                                                     "q*av"
                                                                                                                                     "q*dv"
                                                                                                                                     "q*cv")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "q*dv"
                                                                                                                                         "q*cv"
                                                                                                                                         "q*dv"
                                                                                                                                         "q*cv")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "q*bv"
                                                                                                                                             "q*av"
                                                                                                                                             "q*bv"
                                                                                                                                             "q*av")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (case
                                                                                                                                                 "NOT segment_2Ds_cross(A + q * av, B + q * bv, C + q * cv, D + q * dv)")
                                                                                                                                                (("1"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (rewrite
                                                                                                                                                   "rews"
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (copy
                                                                                                                                                     "igz")
                                                                                                                                                    (("2"
                                                                                                                                                      (hide
                                                                                                                                                       "igz")
                                                                                                                                                      (("2"
                                                                                                                                                        (skeep
                                                                                                                                                         -)
                                                                                                                                                        (("2"
                                                                                                                                                          (insteep
                                                                                                                                                           -)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (case
                                                                                                                                                               "abs(F(A + q * av, B + q * bv, C + q * cv, D + q * dv)(x, y)-F(A, B, C, D)(x, y))<Delta")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "abs"
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (postpone)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (postpone)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (postpone)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil nil)
  (segments_2Ds_notcross_open-3 nil 3672581488
   (""
    (name "FQ"
          "LAMBDA (a,b,c,d,e,f:real): (LAMBDA (x,y:real): a*sq(x)+b*sq(y)+c*x*y+d*x+e*y+f)")
    (("" (hide -)
      (("" (skeep*)
        (("" (expand "isopen?")
          (("" (skeep)
            (("" (assert)
              (("" (expand "segments_2Ds_notcross_at")
                ((""
                  (name "F"
                        "LAMBDA (W,X,Y,Z:Vect2): FQ(sqv(X-W),sqv(Z-Y),-2*((X-W)*(Z-Y)),2*((X-W)*(W-Y)),-2*((Z-Y)*(W-Y)),sqv(W-Y))")
                  ((""
                    (case "NOT FORALL (W,X,Y,Z:Vect2,xr,yr:real): F(W,X,Y,Z)(xr,yr)=sqv((W+xr*(X-W))-(Y+yr*(Z-Y)))")
                    (("1" (hide-all-but 1)
                      (("1" (skeep*)
                        (("1" (expand "F")
                          (("1" (expand "FQ") (("1" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2"
                      (case "NOT FORALL (A,B,C,D:Vect2): segment_2Ds_cross(A,B,C,D) IFF (EXISTS (x,y:real): 0<=x AND x<=1 AND 0<=y AND y<=1 AND F(A,B,C,D)(x,y)=0)")
                      (("1" (skeep*)
                        (("1" (ground)
                          (("1" (expand "segment_2Ds_cross")
                            (("1" (skeep*)
                              (("1"
                                (expand "on_segment_2D?" (-1 -2))
                                (("1"
                                  (skolem - "x")
                                  (("1"
                                    (skolem - "y")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (replaces -3)
                                        (("1"
                                          (insteep)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (rewrite -6 1)
                                              (("1"
                                                (case
                                                 "(1 - x) * A + x * B=A+x*(B-A)")
                                                (("1"
                                                  (replaces -1)
                                                  (("1"
                                                    (replaces -5)
                                                    (("1"
                                                      (hide-all-but 1)
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (skeep*)
                            (("2" (expand "segment_2Ds_cross" 1)
                              (("2"
                                (inst + "(1-x)*A+x*B")
                                (("2"
                                  (expand "on_segment_2D?" 1)
                                  (("2"
                                    (split +)
                                    (("1"
                                      (inst + "x")
                                      (("1" (assert) nil nil))
                                      nil)
                                     ("2"
                                      (inst + "y")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (rewrite -6 -5)
                                          (("2"
                                            (lemma
                                             "vectors_2D.sqv_eq_0")
                                            (("2"
                                              (inst?)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (rewrite
                                                   "sub_eq_zero")
                                                  (("2"
                                                    (case
                                                     "(1 - x) * A + x * B=A+x*(B-A)")
                                                    (("1"
                                                      (replaces -1)
                                                      (("1"
                                                        (replaces -1)
                                                        (("1"
                                                          (hide-all-but
                                                           1)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (label "rews" -1)
                        (("2" (name "A" "a + t * av")
                          (("2" (replace -1)
                            (("2" (name "B" "b+t*bv")
                              (("2"
                                (replace -1)
                                (("2"
                                  (name "C" "c+t*cv")
                                  (("2"
                                    (replace -1)
                                    (("2"
                                      (name "D" "d+t*dv")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (case
                                           "EXISTS (epsil: posreal):
                                                                 FORALL (q: real):
                                                                   0<=t+q AND t+q <= T AND abs(q) <= epsil IMPLIES
                                                                    (NOT segment_2Ds_cross(A + q * av, B + q * bv, C + q * cv,
                                                                                           D + q * dv))")
                                          (("1"
                                            (hide 1)
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (inst + "epsil")
                                                (("1"
                                                  (skeep*)
                                                  (("1"
                                                    (inst - "q-t")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand "A" 1)
                                                        (("1"
                                                          (expand
                                                           "B"
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "C"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "D"
                                                               1)
                                                              (("1"
                                                                (case
                                                                 "FORALL (zz,w:Vect2): (zz+t*w)+(q-t)*w = zz+q*w")
                                                                (("1"
                                                                  (rewrite
                                                                   -1
                                                                   1)
                                                                  (("1"
                                                                    (rewrite
                                                                     -1
                                                                     1)
                                                                    (("1"
                                                                      (rewrite
                                                                       -1
                                                                       1)
                                                                      (("1"
                                                                        (rewrite
                                                                         -1
                                                                         1)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide (2 4))
                                            (("2"
                                              (case
                                               "NOT EXISTS (Delta:posreal): FORALL (x,y:real): 0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                                                IMPLIES F(A, B, C, D)(x, y) > Delta")
                                              (("1"
                                                (hide 2)
                                                (("1"
                                                  (lemma
                                                   "cont_box_min")
                                                  (("1"
                                                    (inst
                                                     -
                                                     "0"
                                                     "0"
                                                     "1"
                                                     "1")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst
                                                         -
                                                         "F(A,B,C,D)")
                                                        (("1"
                                                          (split -)
                                                          (("1"
                                                            (skeep -)
                                                            (("1"
                                                              (case
                                                               "F(A,B,C,D)(x1,x2)=0")
                                                              (("1"
                                                                (rewrite
                                                                 -11
                                                                 +)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "x1"
                                                                   "x2")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (case
                                                                 "NOT F(A,B,C,D)(x1,x2)>0")
                                                                (("1"
                                                                  (rewrite
                                                                   -11
                                                                   1)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   1)
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "F(A,B,C,D)(x1,x2)/2")
                                                                    (("1"
                                                                      (skeep*)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "x"
                                                                         "y")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide
                                                             (2 3))
                                                            (("2"
                                                              (skeep*)
                                                              (("2"
                                                                (lemma
                                                                 "quad_box_cont")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "F(A,B,C,D)")
                                                                  (("2"
                                                                    (split
                                                                     -)
                                                                    (("1"
                                                                      (insteep
                                                                       -)
                                                                      (("1"
                                                                        (skeep*)
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "delta")
                                                                          (("1"
                                                                            (skeep*)
                                                                            (("1"
                                                                              (insteep
                                                                               -)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (copy
                                                                         -11)
                                                                        (("2"
                                                                          (replace
                                                                           -1
                                                                           1
                                                                           :dir
                                                                           rl)
                                                                          (("2"
                                                                            (expand
                                                                             "FQ"
                                                                             1)
                                                                            (("2"
                                                                              (inst
                                                                               +
                                                                               "sqv(B - A)"
                                                                               "sqv(D - C)"
                                                                               "- 2 * (((B - A) * (D - C)))"
                                                                               " 2 * (((B - A) * (A - C)))"
                                                                               "- 2 * (((D - C) * (A - C)))"
                                                                               "sqv(A - C)")
                                                                              (("2"
                                                                                (skeep*)
                                                                                (("2"
                                                                                  (expand
                                                                                   "sq")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "^")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "expt")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "expt")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "expt")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (skeep -)
                                                (("2"
                                                  (name
                                                   "G"
                                                   "LAMBDA (K:real,V1,V2,V3,V4:Vect2): K*((V1-V2)*(V3-V4))")
                                                  (("2"
                                                    (case
                                                     "FORALL (K: real, V1, V2, V3, V4: Vect2): FORALL (epsil:posreal): EXISTS (delta:posreal): FORALL (W1,W2,W3,W4:Vect2): norm(W1)<=delta AND norm(W2)<=delta AND norm(W3)<=delta AND norm(W4)<=delta IMPLIES abs(G(K,V1,V2,V3,V4)-G(K,V1+W1,V2+W2,V3+W3,V4+W4))<epsil")
                                                    (("1"
                                                      (case
                                                       "NOT (LAMBDA (W, X, Y, Z: Vect2):
                                                                                                FQ(G(1,X,W,X,W), G(1,Z,Y,Z,Y), G(-2,X,W,Z,Y),
                                                                                                     G(2,X,W,W,Y), G(-2,Z,Y,W,Y),
                                                                                                     G(1,W,Y,W,Y)))
                                                                                              = F")
                                                      (("1"
                                                        (replace
                                                         -10
                                                         1
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (hide-all-but
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "G")
                                                            (("1"
                                                              (expand
                                                               "sqv")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (copy -1)
                                                        (("2"
                                                          (decompose-equality
                                                           -1)
                                                          (("2"
                                                            (inst
                                                             -
                                                             "(A,B,C,D)")
                                                            (("2"
                                                              (inst-cp
                                                               -
                                                               "1"
                                                               "B"
                                                               "A"
                                                               "B"
                                                               "A")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "Delta/100")
                                                                (("2"
                                                                  (skolem
                                                                   -
                                                                   "d1")
                                                                  (("2"
                                                                    (inst-cp
                                                                     -
                                                                     "1"
                                                                     "D"
                                                                     "C"
                                                                     "D"
                                                                     "C")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "Delta/100")
                                                                      (("2"
                                                                        (skolem
                                                                         -
                                                                         "d2")
                                                                        (("2"
                                                                          (inst-cp
                                                                           -
                                                                           "-2"
                                                                           "B"
                                                                           "A"
                                                                           "D"
                                                                           "C")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "Delta/100")
                                                                            (("2"
                                                                              (skolem
                                                                               -
                                                                               "d3")
                                                                              (("2"
                                                                                (inst-cp
                                                                                 -
                                                                                 "2"
                                                                                 "B"
                                                                                 "A"
                                                                                 "A"
                                                                                 "C")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "Delta/100")
                                                                                  (("2"
                                                                                    (skolem
                                                                                     -
                                                                                     "d4")
                                                                                    (("2"
                                                                                      (inst-cp
                                                                                       -
                                                                                       "-2"
                                                                                       "D"
                                                                                       "C"
                                                                                       "A"
                                                                                       "C")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "Delta/100")
                                                                                        (("2"
                                                                                          (skolem
                                                                                           -
                                                                                           "d5")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "1"
                                                                                             "A"
                                                                                             "C"
                                                                                             "A"
                                                                                             "C")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "Delta/100")
                                                                                              (("2"
                                                                                                (skolem
                                                                                                 -
                                                                                                 "d6")
                                                                                                (("2"
                                                                                                  (name
                                                                                                   "Dstar"
                                                                                                   "min(min(d1,d2),min(min(d3,d4),min(d5,d6)))")
                                                                                                  (("2"
                                                                                                    (case
                                                                                                     "EXISTS (epsil:posreal): FORALL (q:real): abs(q)<=epsil IMPLIES (norm(q*av)<=Dstar AND norm(q*bv)<=Dstar AND norm(q*cv)<=Dstar AND norm(q*dv)<=Dstar)")
                                                                                                    (("1"
                                                                                                      (label
                                                                                                       "ans"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (skeep
                                                                                                         -)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           +
                                                                                                           "epsil")
                                                                                                          (("1"
                                                                                                            (skeep*)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "q")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "q*av"
                                                                                                                     "q*cv"
                                                                                                                     "q*av"
                                                                                                                     "q*cv")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "q*dv"
                                                                                                                         "q*cv"
                                                                                                                         "q*av"
                                                                                                                         "q*cv")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "q*bv"
                                                                                                                               "q*av"
                                                                                                                               "q*av"
                                                                                                                               "q*cv")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "q*bv"
                                                                                                                                   "q*av"
                                                                                                                                   "q*dv"
                                                                                                                                   "q*cv")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "q*dv"
                                                                                                                                       "q*cv"
                                                                                                                                       "q*dv"
                                                                                                                                       "q*cv")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "q*bv"
                                                                                                                                           "q*av"
                                                                                                                                           "q*bv"
                                                                                                                                           "q*av")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "NOT segment_2Ds_cross(A + q * av, B + q * bv, C + q * cv, D + q * dv)")
                                                                                                                                              (("1"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (rewrite
                                                                                                                                                 "rews"
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (postpone)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (postpone)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (postpone)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil nil)
  (segments_2Ds_notcross_open-2 nil 3672580327
   (""
    (name "FQ"
          "LAMBDA (a,b,c,d,e,f:real): (LAMBDA (x,y:real): a*sq(x)+b*sq(y)+c*x*y+d*x+e*y+f)")
    (("" (hide -)
      (("" (skeep*)
        (("" (expand "isopen?")
          (("" (skeep)
            (("" (assert)
              (("" (expand "segments_2Ds_notcross_at")
                ((""
                  (name "F"
                        "LAMBDA (W,X,Y,Z:Vect2): FQ(sqv(X-W),sqv(Z-Y),-2*((X-W)*(Z-Y)),2*((X-W)*(W-Y)),-2*((Z-Y)*(W-Y)),sqv(W-Y))")
                  ((""
                    (case "NOT FORALL (W,X,Y,Z:Vect2,xr,yr:real): F(W,X,Y,Z)(xr,yr)=sqv((W+xr*(X-W))-(Y+yr*(Z-Y)))")
                    (("1" (hide-all-but 1)
                      (("1" (skeep*)
                        (("1" (expand "F")
                          (("1" (expand "FQ") (("1" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2"
                      (case "NOT FORALL (A,B,C,D:Vect2): segment_2Ds_cross(A,B,C,D) IFF (EXISTS (x,y:real): 0<=x AND x<=1 AND 0<=y AND y<=1 AND F(A,B,C,D)(x,y)=0)")
                      (("1" (skeep*)
                        (("1" (ground)
                          (("1" (expand "segment_2Ds_cross")
                            (("1" (skeep*)
                              (("1"
                                (expand "on_segment_2D?" (-1 -2))
                                (("1"
                                  (skolem - "x")
                                  (("1"
                                    (skolem - "y")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (replaces -3)
                                        (("1"
                                          (insteep)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (rewrite -6 1)
                                              (("1"
                                                (case
                                                 "(1 - x) * A + x * B=A+x*(B-A)")
                                                (("1"
                                                  (replaces -1)
                                                  (("1"
                                                    (replaces -5)
                                                    (("1"
                                                      (hide-all-but 1)
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (skeep*)
                            (("2" (expand "segment_2Ds_cross" 1)
                              (("2"
                                (inst + "(1-x)*A+x*B")
                                (("2"
                                  (expand "on_segment_2D?" 1)
                                  (("2"
                                    (split +)
                                    (("1"
                                      (inst + "x")
                                      (("1" (assert) nil nil))
                                      nil)
                                     ("2"
                                      (inst + "y")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (rewrite -6 -5)
                                          (("2"
                                            (lemma
                                             "vectors_2D.sqv_eq_0")
                                            (("2"
                                              (inst?)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (rewrite
                                                   "sub_eq_zero")
                                                  (("2"
                                                    (case
                                                     "(1 - x) * A + x * B=A+x*(B-A)")
                                                    (("1"
                                                      (replaces -1)
                                                      (("1"
                                                        (replaces -1)
                                                        (("1"
                                                          (hide-all-but
                                                           1)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (name "A" "a + t * av")
                        (("2" (replace -1)
                          (("2" (name "B" "b+t*bv")
                            (("2" (replace -1)
                              (("2"
                                (name "C" "c+t*cv")
                                (("2"
                                  (replace -1)
                                  (("2"
                                    (name "D" "d+t*dv")
                                    (("2"
                                      (replace -1)
                                      (("2"
                                        (case
                                         "EXISTS (epsil: posreal):
                                           FORALL (q: real):
                                             0<=t+q AND t+q <= T AND abs(q) <= epsil IMPLIES
                                              (NOT segment_2Ds_cross(A + q * av, B + q * bv, C + q * cv,
                                                                     D + q * dv))")
                                        (("1"
                                          (hide 1)
                                          (("1"
                                            (skeep)
                                            (("1"
                                              (inst + "epsil")
                                              (("1"
                                                (skeep*)
                                                (("1"
                                                  (inst - "q-t")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand "A" 1)
                                                      (("1"
                                                        (expand "B" 1)
                                                        (("1"
                                                          (expand
                                                           "C"
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "D"
                                                             1)
                                                            (("1"
                                                              (case
                                                               "FORALL (zz,w:Vect2): (zz+t*w)+(q-t)*w = zz+q*w")
                                                              (("1"
                                                                (rewrite
                                                                 -1
                                                                 1)
                                                                (("1"
                                                                  (rewrite
                                                                   -1
                                                                   1)
                                                                  (("1"
                                                                    (rewrite
                                                                     -1
                                                                     1)
                                                                    (("1"
                                                                      (rewrite
                                                                       -1
                                                                       1)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide (2 4))
                                          (("2"
                                            (case
                                             "NOT EXISTS (Delta:posreal): FORALL (x,y:real): 0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                      IMPLIES F(A, B, C, D)(x, y) > Delta")
                                            (("1"
                                              (hide 2)
                                              (("1"
                                                (lemma "cont_box_min")
                                                (("1"
                                                  (inst
                                                   -
                                                   "0"
                                                   "0"
                                                   "1"
                                                   "1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst
                                                       -
                                                       "F(A,B,C,D)")
                                                      (("1"
                                                        (split -)
                                                        (("1"
                                                          (skeep -)
                                                          (("1"
                                                            (case
                                                             "F(A,B,C,D)(x1,x2)=0")
                                                            (("1"
                                                              (rewrite
                                                               -11
                                                               +)
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "x1"
                                                                 "x2")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "NOT F(A,B,C,D)(x1,x2)>0")
                                                              (("1"
                                                                (rewrite
                                                                 -11
                                                                 1)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 1)
                                                                (("2"
                                                                  (inst
                                                                   +
                                                                   "F(A,B,C,D)(x1,x2)/2")
                                                                  (("1"
                                                                    (skeep*)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x"
                                                                       "y")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide (2 3))
                                                          (("2"
                                                            (skeep*)
                                                            (("2"
                                                              (lemma
                                                               "quad_box_cont")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "F(A,B,C,D)")
                                                                (("2"
                                                                  (split
                                                                   -)
                                                                  (("1"
                                                                    (insteep
                                                                     -)
                                                                    (("1"
                                                                      (skeep*)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "delta")
                                                                        (("1"
                                                                          (skeep*)
                                                                          (("1"
                                                                            (insteep
                                                                             -)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     2)
                                                                    (("2"
                                                                      (copy
                                                                       -11)
                                                                      (("2"
                                                                        (replace
                                                                         -1
                                                                         1
                                                                         :dir
                                                                         rl)
                                                                        (("2"
                                                                          (expand
                                                                           "FQ"
                                                                           1)
                                                                          (("2"
                                                                            (inst
                                                                             +
                                                                             "sqv(B - A)"
                                                                             "sqv(D - C)"
                                                                             "- 2 * (((B - A) * (D - C)))"
                                                                             " 2 * (((B - A) * (A - C)))"
                                                                             "- 2 * (((D - C) * (A - C)))"
                                                                             "sqv(A - C)")
                                                                            (("2"
                                                                              (skeep*)
                                                                              (("2"
                                                                                (expand
                                                                                 "sq")
                                                                                (("2"
                                                                                  (expand
                                                                                   "^")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "expt")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "expt")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "expt")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (skeep -)
                                              (("2"
                                                (name
                                                 "G"
                                                 "LAMBDA (K:real,V1,V2,V3,V4:Vect2): K*((V1-V2)*(V3-V4))")
                                                (("2"
                                                  (case
                                                   "FORALL (K: real, V1, V2, V3, V4: Vect2): FORALL (epsil:posreal): EXISTS (delta:posreal): FORALL (W1,W2,W3,W4:Vect2): norm(W1)<=delta AND norm(W2)<=delta AND norm(W3)<=delta AND norm(W4)<=delta IMPLIES abs(G(K,V1,V2,V3,V4)-G(K,V1+W1,V2+W2,V3+W3,V4+W4))<epsil")
                                                  (("1"
                                                    (case
                                                     "NOT (LAMBDA (W, X, Y, Z: Vect2):
                                                              FQ(G(1,X,W,X,W), G(1,Z,Y,Z,Y), G(-2,X,W,Z,Y),
                                                                   G(2,X,W,W,Y), G(-2,Z,Y,W,Y),
                                                                   G(1,W,Y,W,Y)))
                                                            = F")
                                                    (("1"
                                                      (replace
                                                       -10
                                                       1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (hide-all-but
                                                         1)
                                                        (("1"
                                                          (expand "G")
                                                          (("1"
                                                            (expand
                                                             "sqv")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (copy -1)
                                                      (("2"
                                                        (decompose-equality
                                                         -1)
                                                        (("2"
                                                          (inst
                                                           -
                                                           "(A,B,C,D)")
                                                          (("2"
                                                            (inst-cp
                                                             -
                                                             "1"
                                                             "B"
                                                             "A"
                                                             "B"
                                                             "A")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "Delta/100")
                                                              (("2"
                                                                (skolem
                                                                 -
                                                                 "d1")
                                                                (("2"
                                                                  (inst-cp
                                                                   -
                                                                   "1"
                                                                   "D"
                                                                   "C"
                                                                   "D"
                                                                   "C")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "Delta/100")
                                                                    (("2"
                                                                      (skolem
                                                                       -
                                                                       "d2")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "-2"
                                                                         "B"
                                                                         "A"
                                                                         "D"
                                                                         "C")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "Delta/100")
                                                                          (("2"
                                                                            (skolem
                                                                             -
                                                                             "d3")
                                                                            (("2"
                                                                              (inst-cp
                                                                               -
                                                                               "2"
                                                                               "B"
                                                                               "A"
                                                                               "A"
                                                                               "C")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "Delta/100")
                                                                                (("2"
                                                                                  (skolem
                                                                                   -
                                                                                   "d4")
                                                                                  (("2"
                                                                                    (inst-cp
                                                                                     -
                                                                                     "-2"
                                                                                     "D"
                                                                                     "C"
                                                                                     "A"
                                                                                     "C")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "Delta/100")
                                                                                      (("2"
                                                                                        (skolem
                                                                                         -
                                                                                         "d5")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "1"
                                                                                           "A"
                                                                                           "C"
                                                                                           "A"
                                                                                           "C")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "Delta/100")
                                                                                            (("2"
                                                                                              (skolem
                                                                                               -
                                                                                               "d6")
                                                                                              (("2"
                                                                                                (name
                                                                                                 "Dstar"
                                                                                                 "min(min(d1,d2),min(min(d3,d4),min(d5,d6)))")
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "EXISTS (epsil:posreal): FORALL (q:real): abs(q)<=epsil IMPLIES (norm(q*av)<=Dstar AND norm(q*bv)<=Dstar AND norm(q*cv)<=Dstar AND norm(q*dv)<=Dstar)")
                                                                                                  (("1"
                                                                                                    (skeep
                                                                                                     -)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "epsil")
                                                                                                      (("1"
                                                                                                        (skeep*)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "q")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "q*av"
                                                                                                                 "q*cv"
                                                                                                                 "q*av"
                                                                                                                 "q*cv")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "q*dv"
                                                                                                                     "q*cv"
                                                                                                                     "q*av"
                                                                                                                     "q*cv")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "q*bv"
                                                                                                                           "q*av"
                                                                                                                           "q*av"
                                                                                                                           "q*cv")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "q*bv"
                                                                                                                               "q*av"
                                                                                                                               "q*dv"
                                                                                                                               "q*cv")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "q*dv"
                                                                                                                                   "q*cv"
                                                                                                                                   "q*dv"
                                                                                                                                   "q*cv")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "q*bv"
                                                                                                                                       "q*av"
                                                                                                                                       "q*bv"
                                                                                                                                       "q*av")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (postpone)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (postpone)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (postpone)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil nil)
  (segments_2Ds_notcross_open-1 nil 3672140978
   (""
    (name "FQ"
          "LAMBDA (a,b,c,d,e,f:real): (LAMBDA (x,y:real): a*sq(x)+b*sq(y)+c*x*y+d*x+e*y+f)")
    (("" (hide -)
      (("" (skeep*)
        (("" (expand "isopen?")
          (("" (skeep)
            (("" (assert)
              (("" (expand "segments_2Ds_notcross_at")
                ((""
                  (name "F"
                        "LAMBDA (W,X,Y,Z:Vect2): FQ(sqv(X-W),sqv(Z-Y),-2*((X-W)*(Z-Y)),2*((X-W)*(W-Y)),-2*((Z-Y)*(W-Y)),sqv(W-Y))")
                  ((""
                    (case "NOT FORALL (W,X,Y,Z:Vect2,xr,yr:real): F(W,X,Y,Z)(xr,yr)=sqv((W+xr*(X-W))-(Y+yr*(Z-Y)))")
                    (("1" (hide-all-but 1)
                      (("1" (skeep*)
                        (("1" (expand "F")
                          (("1" (expand "FQ") (("1" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2"
                      (case "NOT FORALL (A,B,C,D:Vect2): segment_2Ds_cross(A,B,C,D) IFF (EXISTS (x,y:real): 0<=x AND x<=1 AND 0<=y AND y<=1 AND F(A,B,C,D)(x,y)=0)")
                      (("1" (skeep*)
                        (("1" (ground)
                          (("1" (expand "segment_2Ds_cross")
                            (("1" (skeep*)
                              (("1"
                                (expand "on_segment_2D?" (-1 -2))
                                (("1"
                                  (skolem - "x")
                                  (("1"
                                    (skolem - "y")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (replaces -3)
                                        (("1"
                                          (insteep)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (rewrite -6 1)
                                              (("1"
                                                (case
                                                 "(1 - x) * A + x * B=A+x*(B-A)")
                                                (("1"
                                                  (replaces -1)
                                                  (("1"
                                                    (replaces -5)
                                                    (("1"
                                                      (hide-all-but 1)
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (skeep*)
                            (("2" (expand "segment_2Ds_cross" 1)
                              (("2"
                                (inst + "(1-x)*A+x*B")
                                (("2"
                                  (expand "on_segment_2D?" 1)
                                  (("2"
                                    (split +)
                                    (("1"
                                      (inst + "x")
                                      (("1" (assert) nil nil))
                                      nil)
                                     ("2"
                                      (inst + "y")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (rewrite -6 -5)
                                          (("2"
                                            (lemma
                                             "vectors_2D.sqv_eq_0")
                                            (("2"
                                              (inst?)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (rewrite
                                                   "sub_eq_zero")
                                                  (("2"
                                                    (case
                                                     "(1 - x) * A + x * B=A+x*(B-A)")
                                                    (("1"
                                                      (replaces -1)
                                                      (("1"
                                                        (replaces -1)
                                                        (("1"
                                                          (hide-all-but
                                                           1)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (name "A" "a + t * av")
                        (("2" (replace -1)
                          (("2" (name "B" "b+t*bv")
                            (("2" (replace -1)
                              (("2"
                                (name "C" "c+t*cv")
                                (("2"
                                  (replace -1)
                                  (("2"
                                    (name "D" "d+t*dv")
                                    (("2"
                                      (replace -1)
                                      (("2"
                                        (case
                                         "EXISTS (epsil: posreal):
                                FORALL (q: real):
                                  0<=t+q AND t+q <= T AND abs(q) <= epsil IMPLIES
                                   (NOT segment_2Ds_cross(A + q * av, B + q * bv, C + q * cv,
                                                          D + q * dv))")
                                        (("1"
                                          (hide 1)
                                          (("1"
                                            (skeep)
                                            (("1"
                                              (inst + "epsil")
                                              (("1"
                                                (skeep*)
                                                (("1"
                                                  (inst - "q-t")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand "A" 1)
                                                      (("1"
                                                        (expand "B" 1)
                                                        (("1"
                                                          (expand
                                                           "C"
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "D"
                                                             1)
                                                            (("1"
                                                              (case
                                                               "FORALL (zz,w:Vect2): (zz+t*w)+(q-t)*w = zz+q*w")
                                                              (("1"
                                                                (rewrite
                                                                 -1
                                                                 1)
                                                                (("1"
                                                                  (rewrite
                                                                   -1
                                                                   1)
                                                                  (("1"
                                                                    (rewrite
                                                                     -1
                                                                     1)
                                                                    (("1"
                                                                      (rewrite
                                                                       -1
                                                                       1)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide (2 4))
                                          (("2"
                                            (case
                                             "NOT EXISTS (Delta:posreal): FORALL (x,y:real): 0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                         IMPLIES F(A, B, C, D)(x, y) > Delta")
                                            (("1"
                                              (hide 2)
                                              (("1"
                                                (lemma "cont_box_min")
                                                (("1"
                                                  (inst
                                                   -
                                                   "0"
                                                   "0"
                                                   "1"
                                                   "1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst
                                                       -
                                                       "F(A,B,C,D)")
                                                      (("1"
                                                        (split -)
                                                        (("1"
                                                          (skeep -)
                                                          (("1"
                                                            (case
                                                             "F(A,B,C,D)(x1,x2)=0")
                                                            (("1"
                                                              (rewrite
                                                               -11
                                                               +)
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "x1"
                                                                 "x2")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "NOT F(A,B,C,D)(x1,x2)>0")
                                                              (("1"
                                                                (rewrite
                                                                 -11
                                                                 1)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 1)
                                                                (("2"
                                                                  (inst
                                                                   +
                                                                   "F(A,B,C,D)(x1,x2)/2")
                                                                  (("1"
                                                                    (skeep*)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x"
                                                                       "y")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide (2 3))
                                                          (("2"
                                                            (skeep*)
                                                            (("2"
                                                              (lemma
                                                               "quad_box_cont")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "F(A,B,C,D)")
                                                                (("2"
                                                                  (split
                                                                   -)
                                                                  (("1"
                                                                    (insteep
                                                                     -)
                                                                    (("1"
                                                                      (skeep*)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "delta")
                                                                        (("1"
                                                                          (skeep*)
                                                                          (("1"
                                                                            (insteep
                                                                             -)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     2)
                                                                    (("2"
                                                                      (copy
                                                                       -11)
                                                                      (("2"
                                                                        (replace
                                                                         -1
                                                                         1
                                                                         :dir
                                                                         rl)
                                                                        (("2"
                                                                          (expand
                                                                           "FQ"
                                                                           1)
                                                                          (("2"
                                                                            (inst
                                                                             +
                                                                             "sqv(B - A)"
                                                                             "sqv(D - C)"
                                                                             "- 2 * (((B - A) * (D - C)))"
                                                                             " 2 * (((B - A) * (A - C)))"
                                                                             "- 2 * (((D - C) * (A - C)))"
                                                                             "sqv(A - C)")
                                                                            (("2"
                                                                              (skeep*)
                                                                              (("2"
                                                                                (expand
                                                                                 "sq")
                                                                                (("2"
                                                                                  (expand
                                                                                   "^")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "expt")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "expt")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "expt")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (skeep -)
                                              (("2"
                                                (name
                                                 "G"
                                                 "LAMBDA (K:real,V1,V2,V3,V4:Vect2): K*((V1-V2)*(V3-V4))")
                                                (("2"
                                                  (case
                                                   "FORALL (K: posreal, V1, V2, V3, V4: Vect2): FORALL (epsil:posreal): EXISTS (delta:posreal): FORALL (W1,W2,W3,W4:Vect2): norm(W1)<=delta AND norm(W2)<=delta AND norm(W3)<=delta AND norm(W4)<=delta IMPLIES abs(G(K,V1,V2,V3,V4)-G(K,V1+W1,V2+W2,V3+W3,V4+W4))<epsil")
                                                  (("1"
                                                    (case
                                                     "NOT (LAMBDA (W, X, Y, Z: Vect2):
                                             FQ(G(1,X,W,X,W), G(1,Z,Y,Z,Y), G(-2,X,W,Z,Y),
                                                  G(2,X,W,W,Y), G(-2,Z,Y,W,Y),
                                                  G(1,W,Y,W,Y)))
                                           = F")
                                                    (("1"
                                                      (replace
                                                       -10
                                                       1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (hide-all-but
                                                         1)
                                                        (("1"
                                                          (expand "G")
                                                          (("1"
                                                            (expand
                                                             "sqv")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (copy -1)
                                                      (("2"
                                                        (decompose-equality
                                                         -1)
                                                        (("2"
                                                          (inst
                                                           -
                                                           "(A,B,C,D)")
                                                          (("2"
                                                            (inst-cp
                                                             -
                                                             "1"
                                                             "B"
                                                             "A"
                                                             "B"
                                                             "A")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "Delta/100")
                                                              (("2"
                                                                (skolem
                                                                 -
                                                                 "d1")
                                                                (("2"
                                                                  (inst-cp
                                                                   -
                                                                   "1"
                                                                   "D"
                                                                   "C"
                                                                   "D"
                                                                   "C")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "Delta/100")
                                                                    (("2"
                                                                      (skolem
                                                                       -
                                                                       "d2")
                                                                      (("2"
                                                                        (postpone)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (postpone)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (on_segment_2Ds_cross 0
  (on_segment_2Ds_cross-3 nil 3671974140
   ("" (skeep*)
    ((""
      (name "Aset"
            "{t:real | 0<=t AND t<=T AND open_segment_2Ds_cross_at(a,b,c,d,av,bv,cv,dv)(t)}")
      ((""
        (name "Bset"
              "{t:real | 0<=t AND t<=T AND segments_2Ds_notcross_at(a,b,c,d,av,bv,cv,dv)(t)}")
        (("" (case "NOT (isopen?(T)(Aset) AND isopen?(T)(Bset))")
          (("1" (lemma "on_open_segment_2Ds_cross_open")
            (("1" (insteep -)
              (("1" (replace 3)
                (("1" (assert)
                  (("1" (lemma "segments_2Ds_notcross_open")
                    (("1" (insteep -)
                      (("1" (replace 3)
                        (("1" (assert)
                          (("1" (hide-all-but (-1 -2 1))
                            (("1" (expand "isopen?")
                              (("1"
                                (expand "Aset")
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "Bset")
                                    (("1"
                                      (split +)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (insteep -)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (insteep)
                                                  (("1"
                                                    (skeep)
                                                    (("1"
                                                      (insteep)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide -2)
                                        (("2"
                                          (skeep)
                                          (("2"
                                            (insteep -)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (insteep)
                                                  (("2"
                                                    (skeep)
                                                    (("2"
                                                      (insteep)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2"
              (case "EXISTS (t:nnreal): t<=T AND (NOT Aset(t)) AND (NOT Bset(t))")
              (("1" (skeep -)
                (("1" (expand "Bset" +)
                  (("1" (assert)
                    (("1" (expand "segments_2Ds_notcross_at" +)
                      (("1" (expand "segment_2Ds_cross" -2)
                        (("1" (skeep -)
                          (("1" (expand "on_segment_2D?")
                            (("1" (skolem - "t1")
                              (("1"
                                (skolem - "t2")
                                (("1"
                                  (flatten)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (replaces -4)
                                      (("1"
                                        (case
                                         "t1=0 OR t1=1 OR t2=0 OR t2=1")
                                        (("1"
                                          (inst + "t")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (split -)
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst 5 "t2")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (replace -1)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst 6 "t2")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (replace -1)
                                                  (("3"
                                                    (assert)
                                                    (("3"
                                                      (inst + "t1")
                                                      (("3"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("4"
                                                  (replace -1)
                                                  (("4"
                                                    (assert)
                                                    (("4"
                                                      (inst 4 "t1")
                                                      (("4"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "Aset" 2)
                                          (("2"
                                            (expand
                                             "open_segment_2Ds_cross_at")
                                            (("2"
                                              (expand
                                               "open_segment_2Ds_cross")
                                              (("2"
                                                (inst
                                                 +
                                                 "(1 - t1) * (a + t * av) + t1 * (b + t * bv)")
                                                (("2"
                                                  (expand
                                                   "on_strict_segment_2D?"
                                                   +)
                                                  (("2"
                                                    (hide 4)
                                                    (("2"
                                                      (split +)
                                                      (("1"
                                                        (expand
                                                         "on_strict_segment_2D_at?")
                                                        (("1"
                                                          (inst + "t1")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (replace -6)
                                                          (("2"
                                                            (inst
                                                             +
                                                             "t2")
                                                            (("2"
                                                              (expand
                                                               "on_strict_segment_2D_at?")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2"
                (case "EXISTS (t:nnreal): t<=T AND (Aset(t)) AND (Bset(t))")
                (("1" (hide 1)
                  (("1" (skeep -)
                    (("1" (expand "Aset" -2)
                      (("1" (expand "Bset" -3)
                        (("1" (flatten)
                          (("1" (hide (-2 -4))
                            (("1"
                              (expand "open_segment_2Ds_cross_at" -2)
                              (("1"
                                (expand "segments_2Ds_notcross_at" -3)
                                (("1"
                                  (expand "segment_2Ds_cross" 1)
                                  (("1"
                                    (expand
                                     "open_segment_2Ds_cross"
                                     -2)
                                    (("1"
                                      (skeep -)
                                      (("1"
                                        (inst + "s")
                                        (("1"
                                          (expand
                                           "on_strict_segment_2D?")
                                          (("1"
                                            (expand "on_segment_2D?" 1)
                                            (("1"
                                              (split +)
                                              (("1"
                                                (skolem - "t1")
                                                (("1"
                                                  (inst + "t1")
                                                  (("1"
                                                    (expand
                                                     "on_strict_segment_2D_at?")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (skolem -3 "t2")
                                                (("2"
                                                  (expand
                                                   "on_strict_segment_2D_at?")
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (inst + "t2")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (label "inboth" 1)
                  (("2" (hide "inboth")
                    (("2" (case "NOT Aset(T)")
                      (("1" (expand "Aset" 1)
                        (("1" (expand "open_segment_2Ds_cross_at" 1)
                          (("1" (expand "open_segment_2Ds_cross")
                            (("1" (expand "segment_2Ds_cross" -)
                              (("1"
                                (skeep)
                                (("1"
                                  (inst + "s")
                                  (("1"
                                    (expand "on_segment_2D?" -)
                                    (("1"
                                      (skolem - "t1")
                                      (("1"
                                        (skolem - "t2")
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (expand
                                             "on_strict_segment_2D?")
                                            (("1"
                                              (expand
                                               "on_strict_segment_2D_at?")
                                              (("1"
                                                (split +)
                                                (("1"
                                                  (inst + "t1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (case "t1=0")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (replace
                                                             -8)
                                                            (("1"
                                                              (inst
                                                               3
                                                               "T")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (expand
                                                                     "on_segment_2D?")
                                                                    (("1"
                                                                      (inst
                                                                       5
                                                                       "t2")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (case "t1=1")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst
                                                               5
                                                               "T")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (expand
                                                                     "on_segment_2D?")
                                                                    (("1"
                                                                      (inst
                                                                       8
                                                                       "t2")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (inst + "t2")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (case "t2=0")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (inst
                                                             4
                                                             "T")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (expand
                                                                   "on_segment_2D?")
                                                                  (("1"
                                                                    (inst
                                                                     4
                                                                     "t1")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (case "t2=1")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst
                                                               5
                                                               "T")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "on_segment_2D?")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       6
                                                                       "t1")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (name "t" "glb(Aset)")
                        (("1" (label "ans" 3)
                          (("1" (hide "ans")
                            (("1" (case "0<=t AND t<=T")
                              (("1"
                                (flatten)
                                (("1"
                                  (inst + "t")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (split +)
                                      (("1"
                                        (case "NOT isopen?(T)(Aset)")
                                        (("1" (propax) nil nil)
                                         ("2"
                                          (expand "isopen?" -1)
                                          (("2"
                                            (inst - "t")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (case "t = 0")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (hide -2)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (expand
                                                             "Aset"
                                                             -1)
                                                            (("1"
                                                              (expand
                                                               "open_segment_2Ds_cross_at"
                                                               -1)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "open_segment_2Ds_cross")
                                                                  (("1"
                                                                    (expand
                                                                     "segment_2Ds_cross"
                                                                     +)
                                                                    (("1"
                                                                      (skeep)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "s")
                                                                        (("1"
                                                                          (expand
                                                                           "on_segment_2D?")
                                                                          (("1"
                                                                            (expand
                                                                             "on_strict_segment_2D?")
                                                                            (("1"
                                                                              (skolem
                                                                               -
                                                                               "t1")
                                                                              (("1"
                                                                                (skolem
                                                                                 -
                                                                                 "t2")
                                                                                (("1"
                                                                                  (split
                                                                                   +)
                                                                                  (("1"
                                                                                    (inst
                                                                                     +
                                                                                     "t1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "on_strict_segment_2D_at?")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "on_strict_segment_2D_at?")
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (inst
                                                                                         +
                                                                                         "t2")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (name
                                                     "delt"
                                                     "min(epsil/2,t/2)")
                                                    (("2"
                                                      (inst - "t-delt")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (case
                                                           "NOT delt>0")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "delt"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "min"
                                                                 1)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "abs"
                                                               -3)
                                                              (("2"
                                                                (typepred
                                                                 "t")
                                                                (("2"
                                                                  (expand
                                                                   "greatest_lower_bound?")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (expand
                                                                       "lower_bound?"
                                                                       -1)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "t-delt")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred "t")
                                        (("2"
                                          (case "NOT isopen?(T)(Bset)")
                                          (("1" (propax) nil nil)
                                           ("2"
                                            (expand "isopen?" -1)
                                            (("2"
                                              (inst - "t")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (skeep -)
                                                  (("2"
                                                    (case "NOT t=T")
                                                    (("1"
                                                      (case
                                                       "NOT EXISTS (delt:posreal): delt<epsil/2 AND delt<(T-t)/2")
                                                      (("1"
                                                        (inst
                                                         +
                                                         "min(epsil/4,(T-t)/4)")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (case
                                                             "t<T")
                                                            (("1"
                                                              (hide-all-but
                                                               (-1 1))
                                                              (("1"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "NOT t=T")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (case "t<T")
                                                          (("1"
                                                            (hide-all-but
                                                             (-1 1))
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (skeep -)
                                                        (("2"
                                                          (typepred
                                                           "t")
                                                          (("2"
                                                            (expand
                                                             "greatest_lower_bound?"
                                                             -1)
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "t+delt")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "lower_bound?"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "lower_bound?"
                                                                       -1)
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (typepred
                                                                           "s")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "s")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "s")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "abs")
                                                                                    (("2"
                                                                                      (reveal
                                                                                       "inboth")
                                                                                      (("2"
                                                                                        (inst
                                                                                         +
                                                                                         "s")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (reveal "inboth")
                                                      (("2"
                                                        (inst + "T")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil)
                               ("2"
                                (assert)
                                (("2"
                                  (typepred "t")
                                  (("2"
                                    (expand "greatest_lower_bound?")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (case "NOT t>=0")
                                        (("1"
                                          (hide 2)
                                          (("1"
                                            (inst - "0")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand
                                                 "lower_bound?"
                                                 +)
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (typepred "s!1")
                                                    (("1"
                                                      (expand
                                                       "Aset"
                                                       -1)
                                                      (("1"
                                                        (flatten)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2"
                                            (expand "lower_bound?")
                                            (("2"
                                              (inst - "T")
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (split +)
                          (("1" (expand "nonempty?")
                            (("1" (expand "empty?")
                              (("1"
                                (expand "member")
                                (("1" (inst - "T") nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "bounded_below?")
                            (("2" (inst + "0")
                              (("2"
                                (expand "lower_bound?")
                                (("2"
                                  (skosimp*)
                                  (("2"
                                    (typepred "s!1")
                                    (("2"
                                      (expand "Aset" -1)
                                      (("2" (flatten) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((open_segment_2Ds_cross_at const-decl "bool" multipoly nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil)
    (isopen? const-decl "bool" multipoly nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal type-eq-decl nil real_types nil)
    (Bset skolem-const-decl "[real -> boolean]" multipoly nil)
    (Aset skolem-const-decl "[real -> boolean]" multipoly nil)
    (segments_2Ds_notcross_open formula-decl nil multipoly nil)
    (on_open_segment_2Ds_cross_open formula-decl nil multipoly nil)
    (open_segment_2Ds_cross const-decl "bool" edge_proximity nil)
    (on_strict_segment_2D? const-decl "bool" edge_proximity nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (on_strict_segment_2D_at? const-decl "bool" edge_proximity nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (+ const-decl "Vector" vectors_2D "vectors/")
    (* const-decl "Vector" vectors_2D "vectors/")
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (add_zero_left formula-decl nil vectors_2D "vectors/")
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (add_zero_right formula-decl nil vectors_2D "vectors/")
    (scal_0 formula-decl nil vectors_2D "vectors/")
    (scal_1 formula-decl nil vectors_2D "vectors/")
    (odd_minus_even_is_odd application-judgement "odd_int" integers
     nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (on_segment_2D? const-decl "bool" edge_proximity nil)
    (segment_2Ds_cross const-decl "bool" edge_proximity nil)
    (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (t skolem-const-decl "{x | greatest_lower_bound?(x, Aset)}"
     multipoly nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (epsil skolem-const-decl "posreal" multipoly nil)
    (delt skolem-const-decl "{p: real | p <= epsil / 2 AND p <= t / 2}"
     multipoly nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (lower_bound? const-decl "bool" bounded_real_defs nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (< const-decl "bool" reals nil)
    (T skolem-const-decl "posreal" multipoly nil)
    (epsil skolem-const-decl "posreal" multipoly nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (glb const-decl "{x | greatest_lower_bound?(x, SB)}"
     bounded_real_defs nil)
    (greatest_lower_bound? const-decl "bool" bounded_real_defs nil)
    (bounded_below? const-decl "bool" bounded_real_defs nil)
    (nonempty? const-decl "bool" sets nil)
    (segments_2Ds_notcross_at const-decl "bool" multipoly nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil)
  (on_segment_2Ds_cross-2 nil 3671973981
   ("" (skeep*)
    ((""
      (case "open_segment_2Ds_cross(a + T * av, b + T * bv, c + T * cv, d + T * dv)")
      (("1" (lemma "open_segment_2Ds_cross_rew2")
        (("1" (inst?)
          (("1" (assert)
            (("1" (split -)
              (("1" (skeep*)
                (("1"
                  (name "F"
                        "LAMBDA (t:real): min(min(min(eps1 * det(c + t * cv - (a + t * av), b + t * bv - (a + t * av)),-eps1 * det(d + t * dv - (a + t * av), b + t * bv - (a + t * av))),min(eps2 * det(a + t * av - (c + t * cv), d + t * dv - (c + t * cv)),-eps2 * det(b + t * bv - (c + t * cv), d + t * dv - (c + t * cv)))),min(min(max((c + t * cv - (a + t * av)) * (b + t * bv - (a + t * av)),(d + t * dv - (a + t * av)) * (b + t * bv - (a + t * av))),max((c + t * cv - (b + t * bv)) * (a + t * av - (b + t * bv)),(d + t * dv - (b + t * bv)) * (a + t * av - (b + t * bv)))),min(max((a + t * av - (c + t * cv)) * (d + t * dv - (c + t * cv)),(b + t * bv - (c + t * cv)) * (d + t * dv - (c + t * cv))),max((a + t * av - (d + t * dv)) * (c + t * cv - (d + t * dv)),(b + t * bv - (d + t * dv)) * (c + t * cv - (d + t * dv))))))")
                  (("1" (case "NOT F(T)>0")
                    (("1" (hide (-1 -10 -11 2 3))
                      (("1" (expand "F")
                        (("1" (expand "min" + 1)
                          (("1" (lift-if)
                            (("1" (split +)
                              (("1"
                                (flatten)
                                (("1"
                                  (hide -1)
                                  (("1"
                                    (hide (-1 -2 -3 -4))
                                    (("1"
                                      (expand "min" + 1)
                                      (("1"
                                        (lift-if)
                                        (("1"
                                          (split +)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (hide (-1 -2))
                                                (("1"
                                                  (grind
                                                   :exclude
                                                   ("+" "-" "*"))
                                                  nil)))))))
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (hide 1)
                                              (("2"
                                                (hide (-3 -4))
                                                (("2"
                                                  (grind
                                                   :exclude
                                                   ("+" "-" "*"))
                                                  nil)))))))))))))))))))
                               ("2"
                                (flatten)
                                (("2"
                                  (hide 1)
                                  (("2"
                                    (hide (-5 -6 -7 -8))
                                    (("2"
                                      (grind :exclude ("+" "-" "*"))
                                      nil)))))))))))))))))
                     ("2" (case "EXISTS (t:nnreal): t<=T AND F(t)=0")
                      (("1" (hide -3)
                        (("1" (skeep -)
                          (("1" (hide (-4 -5 -6 -7 -8 -9 -10 -11))
                            (("1" (hide -3)
                              (("1"
                                (inst + "t")
                                (("1"
                                  (expand "F" -2)
                                  (("1"
                                    (case
                                     "NOT FORALL (q,r,t,u:real): min(min(q,r),min(t,u))=0 IFF ((q=0 AND r>=0 AND t>=0 AND u>=0) OR (q>=0 AND r=0 AND t>=0 AND u>=0) OR (q>=0 AND r>=0 AND t=0 AND u>=0) OR (q>=0 AND r>=0 AND t>=0 AND u=0))")
                                    (("1"
                                      (hide-all-but 1)
                                      (("1" (grind) nil)))
                                     ("2"
                                      (copy -3)
                                      (("2"
                                        (hide -4)
                                        (("2"
                                          (name "AA" "a + t * av")
                                          (("2"
                                            (replaces -1)
                                            (("2"
                                              (name "BB" "b+t*bv")
                                              (("2"
                                                (replaces -1)
                                                (("2"
                                                  (name "CC" "c+t*cv")
                                                  (("2"
                                                    (replaces -1)
                                                    (("2"
                                                      (name
                                                       "DD"
                                                       "d+t*dv")
                                                      (("2"
                                                        (replaces -1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (postpone)
                                                            nil)))))))))))))))))))))))))))))))))))))
                       ("2" (postpone) nil)))))))))
               ("2" (postpone) nil) ("3" (postpone) nil)
               ("4" (postpone) nil) ("5" (postpone) nil)))))))))
       ("2" (postpone) nil))))
    nil)
   nil nil)
  (on_segment_2Ds_cross-1 nil 3671902263
   ("" (skeep*)
    ((""
      (case "open_segment_2Ds_cross(a + T * av, b + T * bv, c + T * cv, d + T * dv)")
      (("1" (lemma "open_segment_2Ds_cross_rew2")
        (("1" (inst?)
          (("1" (assert)
            (("1" (split -)
              (("1" (skeep*)
                (("1"
                  (name "F"
                        "LAMBDA (t:real): min(min(min(eps1 * det(c + t * cv - (a + t * av), b + t * bv - (a + t * av)),-eps1 * det(d + t * dv - (a + t * av), b + t * bv - (a + t * av))),min(eps2 * det(a + t * av - (c + t * cv), d + t * dv - (c + t * cv)),-eps2 * det(b + t * bv - (c + t * cv), d + t * dv - (c + t * cv)))),min(min(max((c + t * cv - (a + t * av)) * (b + t * bv - (a + t * av)),(d + t * dv - (a + t * av)) * (b + t * bv - (a + t * av))),max((c + t * cv - (b + t * bv)) * (a + t * av - (b + t * bv)),(d + t * dv - (b + t * bv)) * (a + t * av - (b + t * bv)))),min(max((a + t * av - (c + t * cv)) * (d + t * dv - (c + t * cv)),(b + t * bv - (c + t * cv)) * (d + t * dv - (c + t * cv))),max((a + t * av - (d + t * dv)) * (c + t * cv - (d + t * dv)),(b + t * bv - (d + t * dv)) * (c + t * cv - (d + t * dv))))))")
                  (("1" (case "NOT F(T)>0")
                    (("1" (hide (-1 -10 -11 2 3))
                      (("1" (expand "F")
                        (("1" (expand "min" + 1)
                          (("1" (lift-if)
                            (("1" (split +)
                              (("1"
                                (flatten)
                                (("1"
                                  (hide -1)
                                  (("1"
                                    (hide (-1 -2 -3 -4))
                                    (("1"
                                      (expand "min" + 1)
                                      (("1"
                                        (lift-if)
                                        (("1"
                                          (split +)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (hide (-1 -2))
                                                (("1"
                                                  (grind
                                                   :exclude
                                                   ("+" "-" "*"))
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (hide 1)
                                              (("2"
                                                (hide (-3 -4))
                                                (("2"
                                                  (grind
                                                   :exclude
                                                   ("+" "-" "*"))
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (hide 1)
                                  (("2"
                                    (hide (-5 -6 -7 -8))
                                    (("2"
                                      (grind :exclude ("+" "-" "*"))
                                      nil
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (case "EXISTS (t:nnreal): t<=T AND F(t)=0")
                      (("1" (hide -3)
                        (("1" (skeep -)
                          (("1" (hide (-4 -5 -6 -7 -8 -9 -10 -11))
                            (("1" (hide -3)
                              (("1"
                                (inst + "t")
                                (("1"
                                  (expand "F" -2)
                                  (("1"
                                    (case
                                     "NOT FORALL (q,r,t,u:real): min(min(q,r),min(t,u))=0 IFF ((q=0 AND r>=0 AND t>=0 AND u>=0) OR (q>=0 AND r=0 AND t>=0 AND u>=0) OR (q>=0 AND r>=0 AND t=0 AND u>=0) OR (q>=0 AND r>=0 AND t>=0 AND u=0))")
                                    (("1"
                                      (hide-all-but 1)
                                      (("1" (grind) nil nil))
                                      nil)
                                     ("2"
                                      (copy -3)
                                      (("2"
                                        (hide -4)
                                        (("2"
                                          (name "A" "a + t * av")
                                          (("2"
                                            (replaces -1)
                                            (("2"
                                              (name "B" "b+t*bv")
                                              (("2"
                                                (replaces -1)
                                                (("2"
                                                  (name "C" "c+t*cv")
                                                  (("2"
                                                    (replaces -1)
                                                    (("2"
                                                      (name
                                                       "D"
                                                       "d+t*dv")
                                                      (("2"
                                                        (replaces -1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (postpone)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (postpone) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (postpone) nil nil) ("3" (postpone) nil nil)
               ("4" (postpone) nil nil) ("5" (postpone) nil nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (postpone) nil nil))
      nil))
    nil)
   nil shostak))
 (Moving_Polygon_Collision_Detector_def 0
  (Moving_Polygon_Collision_Detector_def-1 nil 3671447061
   ("" (skeep*)
    (("" (split)
      (("1" (expand "Moving_Polygon_Collision_Detector")
        (("1" (assert) nil nil)) nil)
       ("2" (flatten)
        (("2" (expand "Moving_Polygon_Collision_Detector")
          (("2" (split +)
            (("1" (propax) nil nil)
             ("2" (flatten)
              (("2"
                (case "(EXISTS (i: below(N)):
                                 Collision_Detector(T, M, mp2, mp1`polystart(i), mp1`polyvel(i),
                                                    BUFF, Fac)) OR (EXISTS (j: below(M)):
                                    Collision_Detector(T, N, mp1, mp2`polystart(j),
                                                       mp2`polyvel(j), BUFF, Fac))")
                (("1" (ground) nil nil)
                 ("2" (hide 3)
                  (("2" (flatten)
                    (("2" (expand "on_any_edge?")
                      (("2" (skolem - "i1")
                        (("2" (skolem - "i2")
                          (("2"
                            (name "P1"
                                  "moving_polygon_2D_at(N, mp1)(t)")
                            (("2"
                              (name "P2"
                                    "moving_polygon_2D_at(M, mp2)(t)")
                              (("2"
                                (replace -1)
                                (("2"
                                  (replace -2)
                                  (("2"
                                    (name
                                     "next1"
                                     "IF i1<N-1 THEN 1+i1 ELSE 0 ENDIF")
                                    (("2"
                                      (name
                                       "next2"
                                       "IF i2<M-1 THEN 1+i2 ELSE 0 ENDIF")
                                      (("2"
                                        (inst-cp + "i1")
                                        (("2"
                                          (inst + "next1")
                                          (("1"
                                            (inst-cp + "i2")
                                            (("1"
                                              (inst + "next2")
                                              (("1"
                                                (case
                                                 "NOT IF i1 < N - 1 THEN P1(1 + i1) ELSE P1(0) ENDIF = P1(next1)")
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (ground)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (replaces -)
                                                  (("2"
                                                    (case
                                                     "NOT IF i2 < M - 1 THEN P2(1 + i2) ELSE P2(0) ENDIF = P2(next2)")
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (ground)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (replaces -1)
                                                      (("2"
                                                        (expand
                                                         "Collision_Detector")
                                                        (("2"
                                                          (split +)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (split +)
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (split
                                                                 +)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (split
                                                                     +)
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (split
                                                                       +)
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (split
                                                                           +)
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (split
                                                                             +)
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (split
                                                                                 +)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (inst
                                                                                   +
                                                                                   "i1")
                                                                                  (("2"
                                                                                    (inst
                                                                                     +
                                                                                     "i1")
                                                                                    (("2"
                                                                                      (inst
                                                                                       +
                                                                                       "i2")
                                                                                      (("2"
                                                                                        (inst
                                                                                         +
                                                                                         "i2")
                                                                                        (("2"
                                                                                          (name
                                                                                           "Jpos1"
                                                                                           "IF i1 < N - 1 THEN mp1`polystart(1 + i1)
                                           ELSE mp1`polystart(0)
                                           ENDIF")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (name
                                                                                               "Jvel1"
                                                                                               "IF i1 < N - 1 THEN mp1`polyvel(1 + i1)
                                           ELSE mp1`polyvel(0)
                                           ENDIF")
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (name
                                                                                                   "Jpos2"
                                                                                                   "IF i2 < M - 1 THEN mp2`polystart(1 + i2)
                                           ELSE mp2`polystart(0)
                                           ENDIF")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (name
                                                                                                       "Jvel2"
                                                                                                       "IF i2 < M - 1 THEN mp2`polyvel(1 + i2)
                                           ELSE mp2`polyvel(0)
                                           ENDIF")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "edge_detect_def")
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (hide
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "edge_detect_def")
                                                                                                                  (("2"
                                                                                                                    (inst?)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         3)
                                                                                                                        (("2"
                                                                                                                          (lemma
                                                                                                                           "edge_detect_def")
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 4)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "edge_detect_def")
                                                                                                                                  (("2"
                                                                                                                                    (inst?)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (hide
                                                                                                                                         5)
                                                                                                                                        (("2"
                                                                                                                                          (lemma
                                                                                                                                           "on_segment_2Ds_cross")
                                                                                                                                          (("2"
                                                                                                                                            (name
                                                                                                                                             "PS1"
                                                                                                                                             "mp1`polystart")
                                                                                                                                            (("2"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("2"
                                                                                                                                                (name
                                                                                                                                                 "PV1"
                                                                                                                                                 "mp1`polyvel")
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (name
                                                                                                                                                     "PS2"
                                                                                                                                                     "mp2`polystart")
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -1)
                                                                                                                                                      (("2"
                                                                                                                                                        (name
                                                                                                                                                         "PV2"
                                                                                                                                                         "mp2`polyvel")
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (case
                                                                                                                                                             "NOT Jpos1 = PS1(next1)")
                                                                                                                                                            (("1"
                                                                                                                                                              (lift-if)
                                                                                                                                                              (("1"
                                                                                                                                                                (ground)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (replaces
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (hide
                                                                                                                                                                 -9)
                                                                                                                                                                (("2"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT Jvel1 = PV1(next1)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (lift-if)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (ground)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replaces
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (hide
                                                                                                                                                                       -8)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (case
                                                                                                                                                                         "NOT Jpos2 = PS2(next2)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (lift-if)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (ground)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (replaces
                                                                                                                                                                           -1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (hide
                                                                                                                                                                             -7)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (case
                                                                                                                                                                               "NOT Jvel2 = PV2(next2)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (lift-if)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (ground)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (replaces
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (hide
                                                                                                                                                                                   -6)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (case
                                                                                                                                                                                     "t>0")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -
                                                                                                                                                                                       "PS1(i1)"
                                                                                                                                                                                       "PS1(next1)"
                                                                                                                                                                                       "PS2(i2)"
                                                                                                                                                                                       "PS2(next2)"
                                                                                                                                                                                       "PV1(i1)"
                                                                                                                                                                                       "PV1(next1)"
                                                                                                                                                                                       "PV2(i2)"
                                                                                                                                                                                       "PV2(next2)"
                                                                                                                                                                                       "t")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (split
                                                                                                                                                                                           -)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (skolem
                                                                                                                                                                                             -
                                                                                                                                                                                             "r")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (flatten)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (split
                                                                                                                                                                                                 -)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (hide
                                                                                                                                                                                                   (1
                                                                                                                                                                                                    2
                                                                                                                                                                                                    3))
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "hits_moving_seg_2D")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "on_segment_2D?")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (skolem
                                                                                                                                                                                                         -
                                                                                                                                                                                                         "q")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           +
                                                                                                                                                                                                           "r"
                                                                                                                                                                                                           "q")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (hide
                                                                                                                                                                                                   (1
                                                                                                                                                                                                    2
                                                                                                                                                                                                    4))
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "hits_moving_seg_2D")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "on_segment_2D?")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (skolem
                                                                                                                                                                                                         -
                                                                                                                                                                                                         "q")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           +
                                                                                                                                                                                                           "r"
                                                                                                                                                                                                           "q")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("3"
                                                                                                                                                                                                  (hide
                                                                                                                                                                                                   (1
                                                                                                                                                                                                    3
                                                                                                                                                                                                    4))
                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "hits_moving_seg_2D")
                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "on_segment_2D?")
                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                        (skolem
                                                                                                                                                                                                         -
                                                                                                                                                                                                         "q")
                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           +
                                                                                                                                                                                                           "r"
                                                                                                                                                                                                           "q")
                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("4"
                                                                                                                                                                                                  (hide
                                                                                                                                                                                                   (2
                                                                                                                                                                                                    3
                                                                                                                                                                                                    4))
                                                                                                                                                                                                  (("4"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "hits_moving_seg_2D")
                                                                                                                                                                                                    (("4"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "on_segment_2D?")
                                                                                                                                                                                                      (("4"
                                                                                                                                                                                                        (skolem
                                                                                                                                                                                                         -
                                                                                                                                                                                                         "q")
                                                                                                                                                                                                        (("4"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           +
                                                                                                                                                                                                           "r"
                                                                                                                                                                                                           "q")
                                                                                                                                                                                                          (("4"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (hide
                                                                                                                                                                                             (1
                                                                                                                                                                                              2
                                                                                                                                                                                              3
                                                                                                                                                                                              4))
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (lemma
                                                                                                                                                                                               "polygons_overlap_def")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (hide
                                                                                                                                                                                                       (1
                                                                                                                                                                                                        2
                                                                                                                                                                                                        4))
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         +
                                                                                                                                                                                                         "i1"
                                                                                                                                                                                                         "i2")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "segment_2Ds_cross")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (skeep
                                                                                                                                                                                                             -)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               +
                                                                                                                                                                                                               "s!1"
                                                                                                                                                                                                               "s!1")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (case
                                                                                                                                                                                                                   "NOT IF i1 < N - 1 THEN PS1(1 + i1) ELSE PS1(0) ENDIF = PS1(next1)")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (replaces
                                                                                                                                                                                                                     -1)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (case
                                                                                                                                                                                                                       "NOT IF i2 < M - 1 THEN PS2(1 + i2) ELSE PS2(0) ENDIF = PS2(next2)")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (replaces
                                                                                                                                                                                                                         -1)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "sq")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("3"
                                                                                                                                                                                            (case
                                                                                                                                                                                             "NOT (on_segment_2D?(P1(i1), P1(next1), s) AND on_segment_2D?(P2(i2), P2(next2), s))")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (flatten)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (lemma
                                                                                                                                                                                                 "P1")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (replaces
                                                                                                                                                                                                   -1
                                                                                                                                                                                                   -2)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "P2")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (replaces
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       -3)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "moving_polygon_2D_at"
                                                                                                                                                                                                         (-1
                                                                                                                                                                                                          -2))
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (replace
                                                                                                                                                                                                           -7)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (replace
                                                                                                                                                                                                             -6)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               -5)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                 -4)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "segment_2Ds_cross")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (insteep
                                                                                                                                                                                                                     +)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "NOT t = 0")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "NOT P1 = PS1")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (decompose-equality
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "P1"
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "PS1"
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "moving_polygon_2D_at")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (replaces
                                                                                                                                                                                                     -1)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (case
                                                                                                                                                                                             "NOT P2=PS2")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (decompose-equality
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "P2"
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "PS2"
                                                                                                                                                                                                   1)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (replace
                                                                                                                                                                                                     -2)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "moving_polygon_2D_at"
                                                                                                                                                                                                       +)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (case
                                                                                                                                                                                               "NOT (on_segment_2D?(P1(i1), P1(next1), s) AND on_segment_2D?(P2(i2), P2(next2), s))")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (replaces
                                                                                                                                                                                                 -2
                                                                                                                                                                                                 -1)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (replaces
                                                                                                                                                                                                   -2
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                       "polygons_overlap_def")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (inst?)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               3
                                                                                                                                                                                                               "i1"
                                                                                                                                                                                                               "i2")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 +
                                                                                                                                                                                                                 "s"
                                                                                                                                                                                                                 "s")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (ground)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (ground)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (lift-if)
                                                (("2"
                                                  (ground)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (lift-if)
                                            (("2" (ground) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (Moving_Polygon_Collision_Detector const-decl "bool" multipoly nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (on_any_edge? const-decl "bool" polygon_contain nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (next1 skolem-const-decl "naturalnumber" multipoly nil)
    (N skolem-const-decl "posnat" multipoly nil)
    (next2 skolem-const-decl "naturalnumber" multipoly nil)
    (M skolem-const-decl "posnat" multipoly nil)
    (edge_detect_def formula-decl nil detection nil)
    (on_segment_2Ds_cross formula-decl nil multipoly nil)
    (scal_0 formula-decl nil vectors_2D "vectors/")
    (add_zero_right formula-decl nil vectors_2D "vectors/")
    (PS1 skolem-const-decl "polygon_2D(N)" multipoly nil)
    (PS2 skolem-const-decl "polygon_2D(M)" multipoly nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (t skolem-const-decl "nnreal" multipoly nil)
    (on_segment_2D? const-decl "bool" edge_proximity nil)
    (hits_moving_seg_2D const-decl "bool" detection nil)
    (polygons_overlap_def formula-decl nil multipoly nil)
    (segment_2Ds_cross const-decl "bool" edge_proximity nil)
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (sq const-decl "nonneg_real" sq "reals/")
    (sqv_zero formula-decl nil vectors_2D "vectors/")
    (sub_eq_args formula-decl nil vectors_2D "vectors/")
    (P2 skolem-const-decl "[below(M) -> Vect2]" multipoly nil)
    (P1 skolem-const-decl "[below(N) -> Vect2]" multipoly nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nnreal type-eq-decl nil real_types nil)
    (moving_polygon_2D_at const-decl "Vect2" detection nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (polygon_2D type-eq-decl nil acceptable_polygon nil)
    (Moving_Polygon_2D type-eq-decl nil detection nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Collision_Detector const-decl "bool" detection nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   shostak))
 (Static_Shape_Polygon_Collision_Detector_def 0
  (Static_Shape_Polygon_Collision_Detector_def-1 nil 3672673925
   ("" (skeep*)
    (("" (split)
      (("1" (assert)
        (("1" (expand "Static_Shape_Polygon_Collision_Detector")
          (("1" (split +)
            (("1" (propax) nil nil)
             ("2" (flatten)
              (("2"
                (case "(EXISTS (i: below(N)):
                                 Static_Collision_Detector(0, T, M, p2, v2, p1(i), v1, BUFF)) OR (EXISTS (j: below(M)):
                                    Static_Collision_Detector(0, T, N, p1, v1, p2(j), v2, BUFF))")
                (("1" (ground) nil nil)
                 ("2" (hide 3)
                  (("2" (flatten)
                    (("2" (case "NOT polygon_2D_at(N,p1,v1)(0)=p1")
                      (("1" (decompose-equality 1)
                        (("1" (expand "polygon_2D_at")
                          (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (replaces -1)
                        (("2" (case "NOT polygon_2D_at(M,p2,v2)(0)=p2")
                          (("1" (decompose-equality 1)
                            (("1" (expand "polygon_2D_at")
                              (("1" (assert) nil nil)) nil))
                            nil)
                           ("2" (replaces -1) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (flatten)
        (("2" (expand "Static_Shape_Polygon_Collision_Detector")
          (("2" (split +)
            (("1" (propax) nil nil)
             ("2" (flatten)
              (("2" (split +)
                (("1" (propax) nil nil)
                 ("2" (flatten)
                  (("2" (split +)
                    (("1" (propax) nil nil)
                     ("2" (hide 3)
                      (("2" (expand "on_any_edge?")
                        (("2" (skolem - "i1")
                          (("2" (skolem - "i2")
                            (("2"
                              (name "P1" "polygon_2D_at(N, p1, v1)(t)")
                              (("2"
                                (name
                                 "P2"
                                 "polygon_2D_at(M, p2, v2)(t)")
                                (("2"
                                  (replace -1)
                                  (("2"
                                    (replace -2)
                                    (("2"
                                      (name
                                       "next1"
                                       "IF i1<N-1 THEN 1+i1 ELSE 0 ENDIF")
                                      (("2"
                                        (name
                                         "next2"
                                         "IF i2<M-1 THEN 1+i2 ELSE 0 ENDIF")
                                        (("2"
                                          (copy 2)
                                          (("2"
                                            (hide 3)
                                            (("2"
                                              (inst-cp + "i1")
                                              (("2"
                                                (inst + "next1")
                                                (("1"
                                                  (inst-cp + "i2")
                                                  (("1"
                                                    (inst + "next2")
                                                    (("1"
                                                      (case
                                                       "NOT IF i1 < N - 1 THEN P1(1 + i1) ELSE P1(0) ENDIF = P1(next1)")
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (ground)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (replaces -)
                                                        (("2"
                                                          (case
                                                           "NOT IF i2 < M - 1 THEN P2(1 + i2) ELSE P2(0) ENDIF = P2(next2)")
                                                          (("1"
                                                            (lift-if)
                                                            (("1"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (replaces
                                                             -1)
                                                            (("2"
                                                              (expand
                                                               "Static_Collision_Detector")
                                                              (("2"
                                                                (split
                                                                 +)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (split
                                                                     +)
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (split
                                                                       +)
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (split
                                                                           +)
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (split
                                                                             +)
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (split
                                                                                 +)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (split
                                                                                   +)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (split
                                                                                       +)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (inst
                                                                                         +
                                                                                         "i1")
                                                                                        (("2"
                                                                                          (inst
                                                                                           +
                                                                                           "i1")
                                                                                          (("2"
                                                                                            (inst
                                                                                             +
                                                                                             "i2")
                                                                                            (("2"
                                                                                              (inst
                                                                                               +
                                                                                               "i2")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (name
                                                                                                   "Jpos1"
                                                                                                   "IF i1 < N - 1 THEN p1(1 + i1) ELSE p1(0) ENDIF")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (name
                                                                                                       "Jpos2"
                                                                                                       "IF i2 < M - 1 THEN p2(1 + i2) ELSE p2(0) ENDIF")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "segments_2D_close_def")
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             -1
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               -1
                                                                                                               :dir
                                                                                                               rl)
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 -1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   -1
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (label
                                                                                                                       "DO"
                                                                                                                       (-3
                                                                                                                        -4
                                                                                                                        -5
                                                                                                                        -6
                                                                                                                        -7
                                                                                                                        -8
                                                                                                                        -9
                                                                                                                        -10))
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         "DO")
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "NOT Jpos1 = p1(next1)")
                                                                                                                          (("1"
                                                                                                                            (lift-if)
                                                                                                                            (("1"
                                                                                                                              (ground)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (replaces
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (hide
                                                                                                                               -2)
                                                                                                                              (("2"
                                                                                                                                (case
                                                                                                                                 "NOT Jpos2 = p2(next2)")
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (ground)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (replaces
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (hide
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "on_segment_2Ds_cross")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "p1(i1)"
                                                                                                                                         "p1(next1)"
                                                                                                                                         "p2(i2)"
                                                                                                                                         "p2(next2)"
                                                                                                                                         "v1"
                                                                                                                                         "v1"
                                                                                                                                         "v2"
                                                                                                                                         "v2"
                                                                                                                                         "t")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (split
                                                                                                                                             -)
                                                                                                                                            (("1"
                                                                                                                                              (skosimp
                                                                                                                                               -)
                                                                                                                                              (("1"
                                                                                                                                                (split)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   +
                                                                                                                                                   "p2(i2)+t!1*(v2-v1)"
                                                                                                                                                   "p2(i2)+t!1*(v2-v1)")
                                                                                                                                                  (("1"
                                                                                                                                                    (hide
                                                                                                                                                     (2
                                                                                                                                                      3
                                                                                                                                                      4))
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "sq_eq_0")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "on_segment_2D?")
                                                                                                                                                              (("1"
                                                                                                                                                                (split)
                                                                                                                                                                (("1"
                                                                                                                                                                  (skolem
                                                                                                                                                                   -
                                                                                                                                                                   "z")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     +
                                                                                                                                                                     "z")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (hide-all-but
                                                                                                                                                                             (-3
                                                                                                                                                                              1))
                                                                                                                                                                            (("1"
                                                                                                                                                                              (grind)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   "t!1/T")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (split
                                                                                                                                                                       +)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (cross-mult
                                                                                                                                                                         1)
                                                                                                                                                                        nil
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (cross-mult
                                                                                                                                                                         1)
                                                                                                                                                                        nil
                                                                                                                                                                        nil)
                                                                                                                                                                       ("3"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         1)
                                                                                                                                                                        (("3"
                                                                                                                                                                          (grind)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (hide
                                                                                                                                                   (1
                                                                                                                                                    3
                                                                                                                                                    4))
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "p2(next2)+t!1*(v2-v1)"
                                                                                                                                                     "p2(next2)+t!1*(v2-v1)")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (lemma
                                                                                                                                                         "sq_eq_0")
                                                                                                                                                        (("2"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "on_segment_2D?")
                                                                                                                                                              (("2"
                                                                                                                                                                (split)
                                                                                                                                                                (("1"
                                                                                                                                                                  (skolem
                                                                                                                                                                   -
                                                                                                                                                                   "z")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     +
                                                                                                                                                                     "z")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (hide-all-but
                                                                                                                                                                           (-3
                                                                                                                                                                            1))
                                                                                                                                                                          (("1"
                                                                                                                                                                            (grind)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   "t!1/T")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (split)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (cross-mult
                                                                                                                                                                       1)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (cross-mult
                                                                                                                                                                       1)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("3"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       1)
                                                                                                                                                                      (("3"
                                                                                                                                                                        (grind)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("3"
                                                                                                                                                  (hide
                                                                                                                                                   (1
                                                                                                                                                    2
                                                                                                                                                    4))
                                                                                                                                                  (("3"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "p1(i1)+t!1*(v1-v2)"
                                                                                                                                                     "p1(i1)+t!1*(v1-v2)")
                                                                                                                                                    (("3"
                                                                                                                                                      (assert)
                                                                                                                                                      (("3"
                                                                                                                                                        (lemma
                                                                                                                                                         "sq_eq_0")
                                                                                                                                                        (("3"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("3"
                                                                                                                                                            (assert)
                                                                                                                                                            (("3"
                                                                                                                                                              (expand
                                                                                                                                                               "on_segment_2D?")
                                                                                                                                                              (("3"
                                                                                                                                                                (split
                                                                                                                                                                 +)
                                                                                                                                                                (("1"
                                                                                                                                                                  (skolem
                                                                                                                                                                   -
                                                                                                                                                                   "z")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     +
                                                                                                                                                                     "z")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       (-1
                                                                                                                                                                        1))
                                                                                                                                                                      (("1"
                                                                                                                                                                        (grind)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   "t!1/T")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (split)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (cross-mult
                                                                                                                                                                       1)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (cross-mult
                                                                                                                                                                       1)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("3"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       (-1
                                                                                                                                                                        1))
                                                                                                                                                                      (("3"
                                                                                                                                                                        (grind)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("4"
                                                                                                                                                  (hide
                                                                                                                                                   (1
                                                                                                                                                    2
                                                                                                                                                    3))
                                                                                                                                                  (("4"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "p1(next1)+t!1*(v1-v2)"
                                                                                                                                                     "p1(next1)+t!1*(v1-v2)")
                                                                                                                                                    (("4"
                                                                                                                                                      (assert)
                                                                                                                                                      (("4"
                                                                                                                                                        (lemma
                                                                                                                                                         "sq_eq_0")
                                                                                                                                                        (("4"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("4"
                                                                                                                                                            (assert)
                                                                                                                                                            (("4"
                                                                                                                                                              (expand
                                                                                                                                                               "on_segment_2D?")
                                                                                                                                                              (("4"
                                                                                                                                                                (split
                                                                                                                                                                 +)
                                                                                                                                                                (("1"
                                                                                                                                                                  (skolem
                                                                                                                                                                   -
                                                                                                                                                                   "z")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     +
                                                                                                                                                                     "z")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       (-1
                                                                                                                                                                        1))
                                                                                                                                                                      (("1"
                                                                                                                                                                        (grind)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   "t!1/T")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (split)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (cross-mult
                                                                                                                                                                       1)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (cross-mult
                                                                                                                                                                       1)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("3"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       (-1
                                                                                                                                                                        1))
                                                                                                                                                                      (("3"
                                                                                                                                                                        (grind)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (case
                                                                                                                                               "polygons_overlap(N, polygon_2D_at(N, p1, v1)(0), M,
                                                               polygon_2D_at(M, p2, v2)(0), BUFF)")
                                                                                                                                              (("1"
                                                                                                                                                (reveal
                                                                                                                                                 +)
                                                                                                                                                (("1"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (hide
                                                                                                                                                 (2
                                                                                                                                                  3
                                                                                                                                                  4
                                                                                                                                                  5))
                                                                                                                                                (("2"
                                                                                                                                                  (rewrite
                                                                                                                                                   "polygons_overlap_def"
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (hide
                                                                                                                                                       (1
                                                                                                                                                        2))
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "i1"
                                                                                                                                                         "i2")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "segment_2Ds_cross")
                                                                                                                                                          (("2"
                                                                                                                                                            (case
                                                                                                                                                             "NOT polygon_2D_at(N, p1, v1)(0) = p1")
                                                                                                                                                            (("1"
                                                                                                                                                              (decompose-equality
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "polygon_2D_at"
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (replaces
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (case
                                                                                                                                                                 "NOT polygon_2D_at(M, p2, v2)(0) = p2")
                                                                                                                                                                (("1"
                                                                                                                                                                  (decompose-equality
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "polygon_2D_at"
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (replaces
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (case
                                                                                                                                                                     "NOT IF i1 < N - 1 THEN p1(1 + i1) ELSE p1(0) ENDIF = p1(next1)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lift-if)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (ground)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (replaces
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (case
                                                                                                                                                                         "NOT IF i2 < M - 1 THEN p2(1 + i2) ELSE p2(0) ENDIF = p2(next2)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (lift-if)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (ground)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (replaces
                                                                                                                                                                           -1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (skolem
                                                                                                                                                                             -
                                                                                                                                                                             "q")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               +
                                                                                                                                                                               "q"
                                                                                                                                                                               "q")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "sq_eq_0")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst?)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("3"
                                                                                                                                              (hide
                                                                                                                                               (2
                                                                                                                                                3
                                                                                                                                                4
                                                                                                                                                5))
                                                                                                                                              (("3"
                                                                                                                                                (replaces
                                                                                                                                                 -3
                                                                                                                                                 :dir
                                                                                                                                                 rl)
                                                                                                                                                (("3"
                                                                                                                                                  (replaces
                                                                                                                                                   -3
                                                                                                                                                   :dir
                                                                                                                                                   rl)
                                                                                                                                                  (("3"
                                                                                                                                                    (expand
                                                                                                                                                     "polygon_2D_at")
                                                                                                                                                    (("3"
                                                                                                                                                      (expand
                                                                                                                                                       "segment_2Ds_cross")
                                                                                                                                                      (("3"
                                                                                                                                                        (insteep)
                                                                                                                                                        (("3"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (case
                                                                                                                                             "polygons_overlap(N, polygon_2D_at(N, p1, v1)(0), M,
                                                               polygon_2D_at(M, p2, v2)(0), BUFF)")
                                                                                                                                            (("1"
                                                                                                                                              (reveal
                                                                                                                                               +)
                                                                                                                                              (("1"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (case
                                                                                                                                               "NOT t = 0")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (rewrite
                                                                                                                                                     "polygons_overlap_def"
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("2"
                                                                                                                                                        (hide
                                                                                                                                                         (1
                                                                                                                                                          2
                                                                                                                                                          5
                                                                                                                                                          6
                                                                                                                                                          7
                                                                                                                                                          8))
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "i1"
                                                                                                                                                           "i2")
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             +
                                                                                                                                                             "s"
                                                                                                                                                             "s")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -5)
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -4)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (case
                                                                                                                                                                     "NOT IF i2 < M - 1 THEN P2(1 + i2) ELSE P2(0) ENDIF = P2(next2)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lift-if)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (ground)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "NOT IF i1 < N - 1 THEN P1(1 + i1) ELSE P1(0) ENDIF = P1(next1)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (ground)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (replaces
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replaces
                                                                                                                                                                           -1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "sq_eq_0")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst?)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (ground)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (ground)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (lift-if)
                                                      (("2"
                                                        (ground)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (lift-if)
                                                  (("2"
                                                    (ground)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Static_Shape_Polygon_Collision_Detector const-decl "bool"
     multipoly nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (polygon_2D_at const-decl "Vect2" detection nil)
    (add_zero_right formula-decl nil vectors_2D "vectors/")
    (scal_0 formula-decl nil vectors_2D "vectors/")
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (nnreal type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (polygon_2D type-eq-decl nil acceptable_polygon nil)
    (Static_Collision_Detector const-decl "bool" detection nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (segments_2D_close_def formula-decl nil edge_proximity nil)
    (on_segment_2Ds_cross formula-decl nil multipoly nil)
    (polygons_overlap const-decl "bool" multipoly nil)
    (polygons_overlap_def formula-decl nil multipoly nil)
    (segment_2Ds_cross const-decl "bool" edge_proximity nil)
    (sub_eq_args formula-decl nil vectors_2D "vectors/")
    (sqv_zero formula-decl nil vectors_2D "vectors/")
    (on_segment_2D? const-decl "bool" edge_proximity nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (div_mult_pos_le2 formula-decl nil real_props nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (div_mult_pos_le1 formula-decl nil real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (sq_eq_0 formula-decl nil sq "reals/")
    (t skolem-const-decl "nnreal" multipoly nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (+ const-decl "Vector" vectors_2D "vectors/")
    (* const-decl "Vector" vectors_2D "vectors/")
    (- const-decl "Vector" vectors_2D "vectors/")
    (M skolem-const-decl "posnat" multipoly nil)
    (next2 skolem-const-decl "naturalnumber" multipoly nil)
    (N skolem-const-decl "posnat" multipoly nil)
    (next1 skolem-const-decl "naturalnumber" multipoly nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (on_any_edge? const-decl "bool" polygon_contain nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil)))

