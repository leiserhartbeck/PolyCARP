(edge_proximity
 (segment_2Ds_cross_rew1 0
  (segment_2Ds_cross_rew1-1 nil 3671555365
   ("" (expand "segment_2Ds_cross_alt")
    (("" (skeep*)
      (("" (ground)
        (("1" (expand "segment_2Ds_cross")
          (("1" (skeep)
            (("1" (expand "on_segment_2D?")
              (("1" (skolem - "x")
                (("1" (skolem - "y")
                  (("1" (insteep) (("1" (grind) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (skeep*)
          (("2" (expand "segment_2Ds_cross")
            (("2" (inst + "(1 - x) * a + x * b")
              (("2" (expand "on_segment_2D?")
                (("2" (split)
                  (("1" (inst?) (("1" (assert) nil nil)) nil)
                   ("2" (inst + "y") (("2" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (segment_2Ds_cross const-decl "bool" edge_proximity nil)
    (on_segment_2D? const-decl "bool" edge_proximity nil)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (segment_2Ds_cross_alt const-decl "bool" edge_proximity nil))
   shostak))
 (open_segment_2Ds_cross_rew1 0
  (open_segment_2Ds_cross_rew1-1 nil 3671558500
   ("" (expand "open_segment_2Ds_cross_alt")
    (("" (expand "open_segment_2Ds_cross")
      (("" (skeep*)
        (("" (ground)
          (("1" (skeep)
            (("1" (expand "on_strict_segment_2D?")
              (("1" (skolem - "x")
                (("1" (skolem - "y")
                  (("1" (insteep) (("1" (grind) nil nil)) nil)) nil))
                nil))
              nil))
            nil)
           ("2" (skeep*)
            (("2" (expand "on_strict_segment_2D?")
              (("2" (expand "on_strict_segment_2D_at?")
                (("2" (inst + "(1 - x) * a + x * b")
                  (("2" (split)
                    (("1" (inst?) (("1" (assert) nil nil)) nil)
                     ("2" (inst + "y") (("2" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((open_segment_2Ds_cross const-decl "bool" edge_proximity nil)
    (on_strict_segment_2D? const-decl "bool" edge_proximity nil)
    (on_strict_segment_2D_at? const-decl "bool" edge_proximity nil)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (open_segment_2Ds_cross_alt const-decl "bool" edge_proximity nil))
   nil))
 (open_segment_2Ds_cross_rew3_TCC1 0
  (open_segment_2Ds_cross_rew3_TCC1-1 nil 3671813600
   ("" (skeep*)
    (("" (lemma "sqv_eq_0")
      (("" (inst?)
        (("" (assert) (("" (rewrite "sub_eq_zero") nil nil)) nil))
        nil))
      nil))
    nil)
   ((sqv_eq_0 formula-decl nil vectors_2D vectors)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sub_eq_zero formula-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (- const-decl "Vector" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (open_segment_2Ds_cross_rew3 subtype
    "vectors_2D.sqv((vectors_2D.-)(edge_proximity.b, edge_proximity.a))"
    "posreal")))
 (open_segment_2Ds_cross_rew3_TCC2 0
  (open_segment_2Ds_cross_rew3_TCC2-1 nil 3675443045
   ("" (skeep*)
    (("" (lemma "sqv_eq_0")
      (("" (inst?)
        (("" (assert) (("" (rewrite "sub_eq_zero") nil nil)) nil))
        nil))
      nil))
    nil)
   ((sqv_eq_0 formula-decl nil vectors_2D vectors)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sub_eq_zero formula-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (- const-decl "Vector" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (open_segment_2Ds_cross_rew3 subtype
    "vectors_2D.sqv((vectors_2D.-)(edge_proximity.d, edge_proximity.c))"
    "posreal")))
 (open_segment_2Ds_cross_rew3 0
  (open_segment_2Ds_cross_rew3-1 nil 3671813602
   ("" (skeep*)
    (("" (expand "open_segment_2Ds_cross")
      (("" (ground)
        (("1" (skeep*)
          (("1" (expand "on_strict_segment_2D?")
            (("1" (skolem - "x")
              (("1" (skolem - "y")
                (("1" (insteep +)
                  (("1" (expand "on_strict_segment_2D_at?")
                    (("1" (flatten)
                      (("1" (assert)
                        (("1" (replaces -3)
                          (("1"
                            (case "sqv(((1 - x) * a + x * b) -( (1 - y) * c + y * d))=0")
                            (("1" (hide-all-but (-1 1))
                              (("1"
                                (invoke
                                 (case "NOT %1 = %2")
                                 (! -1 1)
                                 (! 1 1))
                                (("1"
                                  (hide-all-but 1)
                                  (("1" (grind) nil nil))
                                  nil)
                                 ("2" (replaces -1 :dir rl) nil nil))
                                nil))
                              nil)
                             ("2" (replace -5) (("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (skeep*)
          (("2"
            (case "sqv(((1 - x) * a + x * b) -( (1 - y) * c + y * d))=0")
            (("1" (lemma "sqv_eq_0")
              (("1" (inst?)
                (("1" (assert)
                  (("1" (rewrite "sub_eq_zero")
                    (("1" (inst + "(1-x)*a+x*b")
                      (("1" (split +)
                        (("1" (expand "on_strict_segment_2D?")
                          (("1" (expand "on_strict_segment_2D_at?")
                            (("1" (inst?) (("1" (assert) nil nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "on_strict_segment_2D?")
                          (("2" (replace -1 +)
                            (("2" (expand "on_strict_segment_2D_at?")
                              (("2"
                                (inst + "y")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (invoke (case "NOT %1 = %2") (! -5 1) (! 1 1))
              (("1" (hide-all-but 1) (("1" (grind) nil nil)) nil)
               ("2" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((open_segment_2Ds_cross const-decl "bool" edge_proximity nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (sub_eq_zero formula-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (sub_eq_args formula-decl nil vectors_2D vectors)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sq const-decl "nonneg_real" sq reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (quad const-decl "real" double_quadratic reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "real" vectors_2D vectors)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (- const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (on_strict_segment_2D_at? const-decl "bool" edge_proximity nil)
    (on_strict_segment_2D? const-decl "bool" edge_proximity nil)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   shostak))
 (on_segment_2D_sym 0
  (on_segment_2D_sym-2 nil 3671558410
   (""
    (case "FORALL (s, segend, segstart: Vect2):
        on_segment_2D?(segstart, segend, s) IMPLIES
         on_segment_2D?(segend, segstart, s)")
    (("1" (skeep*)
      (("1" (copy -1)
        (("1" (insteep -)
          (("1" (inst - "s" "segstart" "segend")
            (("1" (ground) nil nil)) nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2" (skeep*)
        (("2" (expand "on_segment_2D?")
          (("2" (skeep)
            (("2" (inst + "1-t") (("2" (grind) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((real_minus_real_is_real application-judgement "real" reals nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (TRUE const-decl "bool" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (on_segment_2D? const-decl "bool" edge_proximity nil))
   nil)
  (on_segment_2D_sym-1 nil 3578418698
   ("" (skeep)
    (("" (expand "on_segment_2D?")
      (("" (ground)
        (("1" (skeep -1)
          (("1" (inst + "1-t")
            (("1" (assert)
              (("1" (replaces -3) (("1" (grind) nil nil)) nil)) nil))
            nil))
          nil)
         ("2" (skeep -1)
          (("2" (inst + "1-t")
            (("2" (assert)
              (("2" (replaces -3) (("2" (grind) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors))
   shostak))
 (near_edge_def 0
  (near_edge_def-1 nil 3635152484
   ("" (skeep)
    (("" (split)
      (("1" (flatten)
        (("1" (expand "near_edge" :assert? none)
          (("1" (split -)
            (("1" (propax) nil nil)
             ("2" (flatten)
              (("2" (split -)
                (("1" (propax) nil nil)
                 ("2" (flatten)
                  (("2" (hide (1 2))
                    (("2" (skoletin)
                      (("2" (skoletin)
                        (("2" (skoletin)
                          (("2" (assert)
                            (("2" (splash -)
                              (("1"
                                (flatten)
                                (("1"
                                  (lemma "quad_min_le_D_int_def")
                                  (("1"
                                    (inst?)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (lemma "quad_min_interval_def")
                                        (("1"
                                          (inst - "ap" "b" "c" "0" "1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (name
                                                 "tt"
                                                 "quad_min_int(ap,b,c,0,1)")
                                                (("1"
                                                  (expand
                                                   "on_segment_2D?")
                                                  (("1"
                                                    (name
                                                     "ww"
                                                     "(1 - tt) * segstart + tt * segend")
                                                    (("1"
                                                      (inst + "ww")
                                                      (("1"
                                                        (split +)
                                                        (("1"
                                                          (inst + "tt")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "ww"
                                                           +)
                                                          (("2"
                                                            (replace
                                                             -2)
                                                            (("2"
                                                              (expand
                                                               "ap"
                                                               -6)
                                                              (("2"
                                                                (expand
                                                                 "b"
                                                                 -6)
                                                                (("2"
                                                                  (expand
                                                                   "c"
                                                                   -6)
                                                                  (("2"
                                                                    (hide-all-but
                                                                     (-6
                                                                      1))
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (inst + "segend")
                                (("2"
                                  (assert)
                                  (("2"
                                    (expand "on_segment_2D?")
                                    (("2"
                                      (inst + "1")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (inst + "segstart")
                                (("3"
                                  (assert)
                                  (("3"
                                    (expand "on_segment_2D?")
                                    (("3"
                                      (inst + "0")
                                      (("3" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (flatten)
        (("2" (skeep -)
          (("2" (expand "on_segment_2D?")
            (("2" (skeep -)
              (("2" (replaces -3)
                (("2" (expand "near_edge" :assert? none)
                  (("2" (split +)
                    (("1" (flatten)
                      (("1"
                        (case "FORALL (vv:Vect2): sqv(vv)<sq(BUFF) IMPLIES abs(vv`x)<BUFF")
                        (("1" (inst?)
                          (("1" (assert)
                            (("1" (expand "abs" (-2 -3))
                              (("1"
                                (expand "sign")
                                (("1"
                                  (lift-if)
                                  (("1"
                                    (lift-if)
                                    (("1"
                                      (lift-if)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (ground)
                                          (("1"
                                            (mult-by -4 "(1-t)")
                                            (("1"
                                              (mult-by -2 "t")
                                              (("1" (grind) nil nil)
                                               ("2"
                                                (case "NOT t = 0")
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (replaces -1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case "NOT t=1")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (replaces -1)
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (mult-by -4 "(1-t)")
                                            (("1"
                                              (mult-by -3 "t")
                                              (("1" (grind) nil nil)
                                               ("2"
                                                (case "NOT t=0")
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (replaces -1)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case "NOT t=1")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (replaces -1)
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide-all-but 1)
                          (("2" (skeep*)
                            (("2" (rewrite "sq_lt" 1 :dir rl)
                              (("2" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (hide 1)
                        (("2" (split +)
                          (("1" (flatten)
                            (("1"
                              (case "FORALL (vv:Vect2): sqv(vv)<sq(BUFF) IMPLIES abs(vv`y)<BUFF")
                              (("1"
                                (inst?)
                                (("1"
                                  (assert)
                                  (("1"
                                    (hide -7)
                                    (("1"
                                      (expand "abs" (-2 -3))
                                      (("1"
                                        (expand "sign")
                                        (("1"
                                          (lift-if)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (lift-if)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (ground)
                                                      (("1"
                                                        (mult-by
                                                         -4
                                                         "1-t")
                                                        (("1"
                                                          (mult-by
                                                           -2
                                                           "t")
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (case
                                                             "NOT t=0")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (replaces
                                                               -1)
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (case
                                                           "NOT t=1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (replaces
                                                             -1)
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (mult-by
                                                         -4
                                                         "1-t")
                                                        (("1"
                                                          (mult-by
                                                           -3
                                                           "t")
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (case
                                                             "NOT t=0")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (replaces
                                                               -1)
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (case
                                                           "NOT t=1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (replaces
                                                             -1)
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide -)
                                (("2"
                                  (skeep*)
                                  (("2"
                                    (rewrite "sq_lt" 1 :dir rl)
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (flatten)
                            (("2" (hide 1)
                              (("2"
                                (skoletin)
                                (("2"
                                  (skoletin)
                                  (("2"
                                    (skoletin)
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (case "ap = 0")
                                        (("1"
                                          (expand "ap" -1)
                                          (("1"
                                            (lemma
                                             "vectors_2D.sqv_eq_0")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (rewrite
                                                   "sub_eq_zero")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (hide-all-but
                                                         (-8 +))
                                                        (("1"
                                                          (hide 2)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2"
                                            (lemma
                                             "quad_min_le_D_int_def")
                                            (("2"
                                              (inst
                                               -
                                               "sq(BUFF)"
                                               "ap"
                                               "b"
                                               "c"
                                               "0"
                                               "1")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (lemma
                                                   "quad_min_interval_def")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (inst - "t")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (hide-all-but
                                                               (-3
                                                                -9
                                                                1))
                                                              (("2"
                                                                (expand
                                                                 "ap")
                                                                (("2"
                                                                  (expand
                                                                   "b")
                                                                  (("2"
                                                                    (expand
                                                                     "c")
                                                                    (("2"
                                                                      (grind
                                                                       :exclude
                                                                       "quad_min_int")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_minus_real_is_real application-judgement "real" reals nil)
    (near_edge const-decl "bool" edge_proximity nil)
    (TRUE const-decl "bool" booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (- const-decl "Vector" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (* const-decl "real" vectors_2D vectors)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (quad_min_le_D_int const-decl "bool" quad_minmax reals)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (sq const-decl "nonneg_real" sq reals)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (quad_min_le_D_int_def formula-decl nil quad_minmax reals)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (/= const-decl "boolean" notequal nil)
    (on_segment_2D? const-decl "bool" edge_proximity nil)
    (ww skolem-const-decl "Vector" edge_proximity nil)
    (ap skolem-const-decl "nnreal" edge_proximity nil)
    (c skolem-const-decl "nnreal" edge_proximity nil)
    (quadratic const-decl "real" quadratic reals)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (b skolem-const-decl "real" edge_proximity nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (quad_min_int const-decl "real" quad_minmax reals)
    (quad_min_interval_def formula-decl nil quad_minmax reals)
    (add_zero_left formula-decl nil vectors_2D vectors)
    (scal_1 formula-decl nil vectors_2D vectors)
    (scal_0 formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (b skolem-const-decl "real" edge_proximity nil)
    (c skolem-const-decl "nnreal" edge_proximity nil)
    (ap skolem-const-decl "nnreal" edge_proximity nil)
    (sub_eq_zero formula-decl nil vectors_2D vectors)
    (sub_eq_args formula-decl nil vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (sq_lt formula-decl nil sq reals)
    (sq_abs formula-decl nil sq reals)
    (minus_real_is_real application-judgement "real" reals nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers
     nil)
    (t skolem-const-decl "real" edge_proximity nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (sign const-decl "Sign" sign reals)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil))
   nil))
 (closest_point_TCC1 0
  (closest_point_TCC1-1 nil 3658745810
   ("" (skeep*) (("" (replaces -1) (("" (assert) nil nil)) nil)) nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (closest_point subtype
    "(vectors_2D.-)(edge_proximity.segend, edge_proximity.segstart)"
    "Nz_vector")))
 (closest_point_def 0
  (closest_point_def-1 nil 3658746706
   (""
    (case "FORALL (BUFFER: nnreal, s, segend: Vect2):
        LET p = closest_point(zero, segend, s, BUFFER) IN
          on_segment_2D?(zero, segend, p) AND
           (FORALL (w):
              on_segment_2D?(zero, segend, w) IMPLIES
               ((norm(segend) <= BUFFER AND p = zero) OR
                 norm(s - w) >= norm(s - p)))")
    (("1" (skeep)
      (("1" (inst - "BUFFER" "s-segstart" "segend-segstart")
        (("1" (skoletin +)
          (("1"
            (case "NOT closest_point(zero, segend - segstart, s - segstart, BUFFER) = p-segstart")
            (("1" (hide (-2 2))
              (("1" (replaces -1)
                (("1" (expand "closest_point")
                  (("1" (lift-if)
                    (("1" (assert)
                      (("1" (lift-if)
                        (("1" (assert)
                          (("1" (lift-if)
                            (("1" (ground)
                              (("1"
                                (hide-all-but (-1 1))
                                (("1" (grind) nil nil))
                                nil)
                               ("2"
                                (hide-all-but (-1 2))
                                (("2" (grind) nil nil))
                                nil)
                               ("3"
                                (hide-all-but 2)
                                (("3" (grind :exclude "norm") nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (replaces -1)
              (("2" (assert)
                (("2" (flatten)
                  (("2" (split +)
                    (("1" (expand "on_segment_2D?")
                      (("1" (skeep*)
                        (("1" (inst + "t")
                          (("1" (assert)
                            (("1" (hide-all-but (-4 1))
                              (("1"
                                (case "NOT p=p+zero")
                                (("1" (assert) nil nil)
                                 ("2"
                                  (replaces -1)
                                  (("2" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (skeep)
                      (("2" (inst - "w-segstart")
                        (("2" (assert)
                          (("2" (split -)
                            (("1" (flatten)
                              (("1"
                                (assert)
                                (("1"
                                  (rewrite "sub_eq_zero" -2)
                                  nil
                                  nil))
                                nil))
                              nil)
                             ("2" (hide-all-but (-1 2))
                              (("2" (grind :exclude "norm") nil nil))
                              nil)
                             ("3" (hide -3)
                              (("3"
                                (expand "on_segment_2D?")
                                (("3"
                                  (skeep*)
                                  (("3"
                                    (inst + "t")
                                    (("3"
                                      (assert)
                                      (("3"
                                        (hide-all-but (-1 -2 -3 1))
                                        (("3"
                                          (case "NOT w=w+zero")
                                          (("1" (assert) nil nil)
                                           ("2"
                                            (replaces -1)
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2" (skeep*)
        (("2" (skoletin 1)
          (("2" (case "segend=zero")
            (("1" (replaces -1)
              (("1" (assert)
                (("1" (expand "closest_point")
                  (("1" (assert)
                    (("1" (replaces -1)
                      (("1" (assert)
                        (("1" (expand "on_segment_2D?")
                          (("1" (inst + "0") (("1" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (assert)
              (("2" (name "vv" "^(segend)")
                (("2" (case "NOT orthonormal?(vv,perpR(vv))")
                  (("1" (expand "orthonormal?")
                    (("1" (assert)
                      (("1" (split +)
                        (("1" (hide-all-but 1) (("1" (grind) nil nil))
                          nil)
                         ("2" (flatten)
                          (("2" (typepred "vv")
                            (("2" (replaces -2)
                              (("2" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("3" (flatten)
                          (("3" (lemma "norm_eq_0")
                            (("3" (inst - "vv")
                              (("3" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("4" (hide-all-but 1)
                          (("4" (typepred "vv") (("4" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (lemma "orthonormal_basis")
                    (("2" (inst - "vv" "perpR(vv)" _)
                      (("2" (copy -4)
                        (("2" (hide -5)
                          (("2" (expand "closest_point" :assert? none)
                            (("2" (lift-if -1)
                              (("2"
                                (split -)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "on_segment_2D?")
                                      (("1"
                                        (inst + "0")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (hide 1)
                                    (("2"
                                      (split -)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (replace -2)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (split +)
                                                (("1"
                                                  (expand
                                                   "on_segment_2D?")
                                                  (("1"
                                                    (inst + "0")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skeep*)
                                                  (("2"
                                                    (expand
                                                     "on_segment_2D?")
                                                    (("2"
                                                      (skeep*)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (lemma
                                                           "sq_ge")
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (rewrite
                                                                 "sq_norm")
                                                                (("2"
                                                                  (rewrite
                                                                   "sq_norm")
                                                                  (("2"
                                                                    (replace
                                                                     -3)
                                                                    (("2"
                                                                      (rewrite
                                                                       "sqv_sub")
                                                                      (("2"
                                                                        (mult-by
                                                                         -4
                                                                         "t")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (split -1)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -2)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split +)
                                                    (("1"
                                                      (expand
                                                       "on_segment_2D?")
                                                      (("1"
                                                        (inst + "1")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (skeep)
                                                      (("2"
                                                        (expand
                                                         "on_segment_2D?")
                                                        (("2"
                                                          (skeep -)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (replaces
                                                               -3)
                                                              (("2"
                                                                (lemma
                                                                 "sq_ge")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (rewrite
                                                                         "sq_norm")
                                                                        (("2"
                                                                          (rewrite
                                                                           "sq_norm")
                                                                          (("2"
                                                                            (name
                                                                             "kz"
                                                                             "s-segend")
                                                                            (("2"
                                                                              (replace
                                                                               -1)
                                                                              (("2"
                                                                                (case
                                                                                 "NOT s-t*segend = kz+(1-t)*segend")
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "kz")
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("2"
                                                                                    (name
                                                                                     "gg"
                                                                                     "1-t")
                                                                                    (("2"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "sqv_add")
                                                                                        (("2"
                                                                                          (case
                                                                                           "kz*segend>=0")
                                                                                          (("1"
                                                                                            (mult-by
                                                                                             -1
                                                                                             "gg")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             (-5
                                                                                              1))
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (replace -4)
                                                (("2"
                                                  (rewrite "det_perpR")
                                                  (("2"
                                                    (inst-cp - "s")
                                                    (("2"
                                                      (name "gg" "-s")
                                                      (("2"
                                                        (replaces -1)
                                                        (("2"
                                                          (replaces
                                                           -3
                                                           -1)
                                                          (("2"
                                                            (expand
                                                             "gg")
                                                            (("2"
                                                              (rewrite
                                                               "dot_neg_left")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (case
                                                                   "NOT (s * vv) * vv + (s * perpR(vv)) * perpR(vv) +
        -(s * perpR(vv)) * perpR(vv) = (s*vv)*vv")
                                                                  (("1"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("1"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (replaces
                                                                     -1)
                                                                    (("2"
                                                                      (case
                                                                       "NOT p=(1/sqv(segend))*((s*segend)*segend)")
                                                                      (("1"
                                                                        (replaces
                                                                         -1
                                                                         1)
                                                                        (("1"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "vv")
                                                                            (("1"
                                                                              (expand
                                                                               "^")
                                                                              (("1"
                                                                                (lemma
                                                                                 "sq_norm")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "sq")
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (case
                                                                           "NOT on_segment_2D?(zero, segend, p)")
                                                                          (("1"
                                                                            (hide
                                                                             5)
                                                                            (("1"
                                                                              (expand
                                                                               "on_segment_2D?")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (mult-by
                                                                                         3
                                                                                         "1/sqv(segend)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "sqv_eq_0")
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (split)
                                                                                                (("1"
                                                                                                  (cross-mult
                                                                                                   1)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (cross-mult
                                                                                                   1)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (cross-mult
                                                                                         1)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "sqv_eq_0")
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (hide-all-but
                                                                                                 (2
                                                                                                  3))
                                                                                                (("2"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (label
                                                                               "igz"
                                                                               4)
                                                                              (("2"
                                                                                (skeep)
                                                                                (("2"
                                                                                  (copy
                                                                                   "igz")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "on_segment_2D?"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (copy
                                                                                           -7)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -8)
                                                                                            (("2"
                                                                                              (inst-cp
                                                                                               -
                                                                                               "s")
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -8
                                                                                                 -2
                                                                                                 :dir
                                                                                                 rl)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "NOT s-p = (s * perpR(vv)) * perpR(vv)")
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     (-2
                                                                                                      1))
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "NOT s=s+zero")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (replaces
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (replaces
                                                                                                     -1
                                                                                                     +)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "EXISTS (r:real): w=r*vv")
                                                                                                        (("1"
                                                                                                          (skeep*)
                                                                                                          (("1"
                                                                                                            (replaces
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -8
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (name
                                                                                                                 "aa"
                                                                                                                 "s-r*vv")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -3
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (replaces
                                                                                                                       -1
                                                                                                                       +
                                                                                                                       :dir
                                                                                                                       rl)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "NOT (s * vv) * vv + (s * perpR(vv)) * perpR(vv) - r * vv = (s * vv-r) * vv + (s * perpR(vv)) * perpR(vv)")
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (replaces
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (lemma
                                                                                                                               "sq_ge")
                                                                                                                              (("2"
                                                                                                                                (inst?)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (rewrite
                                                                                                                                     "sq_norm"
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (rewrite
                                                                                                                                       "sq_norm"
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (hide
                                                                                                                                         "igz")
                                                                                                                                        (("2"
                                                                                                                                          (name
                                                                                                                                           "ivv"
                                                                                                                                           "(s * perpR(vv)) * perpR(vv)")
                                                                                                                                          (("2"
                                                                                                                                            (replaces
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (name
                                                                                                                                               "izz"
                                                                                                                                               "(s * vv - r) * vv")
                                                                                                                                              (("2"
                                                                                                                                                (replaces
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (case
                                                                                                                                                   "izz*ivv=0")
                                                                                                                                                  (("1"
                                                                                                                                                    (rewrite
                                                                                                                                                     "sqv_add"
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (replaces
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "izz")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "ivv")
                                                                                                                                                        (("2"
                                                                                                                                                          (grind)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (inst
                                                                                                           +
                                                                                                           "t*norm(segend)")
                                                                                                          (("2"
                                                                                                            (replaces
                                                                                                             -5
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (hide-all-but
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "vv")
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (flatten)
                                                                        (("3"
                                                                          (lemma
                                                                           "sqv_eq_0")
                                                                          (("3"
                                                                            (inst?)
                                                                            (("3"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((orthonormal? const-decl "bool" basis_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (nz_sqv_gt_0 application-judgement "posreal" vectors_2D vectors)
    (sqrt_pos application-judgement "posreal" sqrt reals)
    (nz_norm_gt_0 application-judgement "posreal" vectors_2D vectors)
    (norm_eq_0 formula-decl nil vectors_2D vectors)
    (orthogonal? const-decl "bool" vectors_2D vectors)
    (sq_ge formula-decl nil sq reals)
    (sqv_sub formula-decl nil vectors_2D vectors)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (dot_scal_right formula-decl nil vectors_2D vectors)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (sq_norm formula-decl nil vectors_2D vectors)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (gg skolem-const-decl "real" edge_proximity nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (sqv_add formula-decl nil vectors_2D vectors)
    (kz skolem-const-decl "Vector" edge_proximity nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (scal_1 formula-decl nil vectors_2D vectors)
    (det_perpR formula-decl nil det_2D vectors)
    (dot_neg_left formula-decl nil vectors_2D vectors)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sq const-decl "nonneg_real" sq reals)
    (vv skolem-const-decl "Normalized" edge_proximity nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (div_mult_pos_gt1 formula-decl nil extra_real_props nil)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (segend skolem-const-decl "Vect2" edge_proximity nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (both_sides_times_pos_le1 formula-decl nil real_props nil)
    (div_mult_pos_neg_le1 formula-decl nil extra_real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (times_div2 formula-decl nil real_props nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (izz skolem-const-decl "Vector" edge_proximity nil)
    (ivv skolem-const-decl "Vector" edge_proximity nil)
    (scal_assoc formula-decl nil vectors_2D vectors)
    (gg skolem-const-decl "Vector" edge_proximity nil)
    (scal_0 formula-decl nil vectors_2D vectors)
    (orthonormal_basis formula-decl nil basis_2D vectors)
    (Normalized type-eq-decl nil vectors_2D vectors)
    (Nz_vector type-eq-decl nil vectors_2D vectors)
    (/= const-decl "boolean" notequal nil)
    (neg_zero formula-decl nil vectors_2D vectors)
    (norm_zero formula-decl nil vectors_2D vectors)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (sub_eq_zero formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (add_zero_left formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (sub_zero_right formula-decl nil vectors_2D vectors)
    (sub_eq_args formula-decl nil vectors_2D vectors)
    (sub_zero_left formula-decl nil vectors_2D vectors)
    (perpR_nz application-judgement "Nz_vect2" perpendicular_2D
     vectors)
    (* const-decl "real" vectors_2D vectors)
    (- const-decl "Vector" vectors_2D vectors)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (+ const-decl "Vector" vectors_2D vectors)
    (perpR const-decl "Vect2" perpendicular_2D vectors)
    (det const-decl "real" det_2D vectors)
    (^ const-decl "Normalized" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (on_segment_2D? const-decl "bool" edge_proximity nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (norm const-decl "nnreal" vectors_2D vectors)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (- const-decl "Vector" vectors_2D vectors)
    (closest_point const-decl "Vect2" edge_proximity nil))
   shostak))
 (rev_0_global_min 0
  (rev_0_global_min-1 nil 3635613901
   ("" (skeep*)
    (("" (skoletin)
      (("" (skoletin)
        (("" (skoletin)
          (("" (skoletin)
            (("" (skoletin)
              (("" (skoletin)
                (("" (flatten)
                  (("" (lemma "schwarz_converse")
                    (("" (case "w = zero")
                      (("1" (replace -1) (("1" (assert) nil nil)) nil)
                       ("2" (inst - "w" "v")
                        (("1" (assert)
                          (("1" (invoke (case "NOT %1") (! -1 1))
                            (("1" (hide -1)
                              (("1"
                                (assert)
                                (("1"
                                  (rewrite "sq_eq" 1 :dir rl)
                                  (("1"
                                    (rewrite "sq_times")
                                    (("1"
                                      (rewrite "sq_norm")
                                      (("1"
                                        (rewrite "sq_norm")
                                        (("1"
                                          (expand "c" -1)
                                          (("1"
                                            (expand "a" -1)
                                            (("1"
                                              (expand "b" -1)
                                              (("1"
                                                (rewrite "sq_times")
                                                (("1"
                                                  (rewrite "sq_neg" -1)
                                                  (("1"
                                                    (expand "sq" -1 1)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (assert)
                              (("2"
                                (skeep -)
                                (("2"
                                  (replaces -2 :dir rl)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (lemma "sqv")
                                      (("2"
                                        (decompose-equality -1)
                                        (("2"
                                          (inst - "w")
                                          (("2"
                                            (rewrite "sqv_scal")
                                            (("2"
                                              (replace -1 :dir rl)
                                              (("2"
                                                (assert)
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (* const-decl "real" vectors_2D vectors)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (sq const-decl "nonneg_real" sq reals)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (dot_zero_right formula-decl nil vectors_2D vectors)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (* const-decl "Vector" vectors_2D vectors)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (sqv_scal formula-decl nil vectors_2D vectors)
    (dot_scal_right formula-decl nil vectors_2D vectors)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (sq_eq formula-decl nil sq reals)
    (sq_abs formula-decl nil sq reals)
    (sq_norm formula-decl nil vectors_2D vectors)
    (c skolem-const-decl "real" edge_proximity nil)
    (b skolem-const-decl "nnreal" edge_proximity nil)
    (sq_neg formula-decl nil sq reals)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (a skolem-const-decl "nnreal" edge_proximity nil)
    (sq_times formula-decl nil sq reals)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (norm const-decl "nnreal" vectors_2D vectors)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (Nz_vector type-eq-decl nil vectors_2D vectors)
    (w skolem-const-decl "Vect2" edge_proximity nil)
    (/= const-decl "boolean" notequal nil)
    (schwarz_converse formula-decl nil vectors_2D vectors)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   shostak))
 (segments_2D_close_TCC1 0
  (segments_2D_close_TCC1-1 nil 3635758233
   ("" (skeep*) (("" (assert) nil nil)) nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil (segments_2D_close subtype "edge_proximity.a" "posreal")))
 (segments_2D_close_TCC2 0
  (segments_2D_close_TCC2-1 nil 3635758233
   ("" (skeep*) (("" (assert) nil nil)) nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil (segments_2D_close subtype "edge_proximity.b" "posreal")))
 (segments_2D_close_def 0
  (segments_2D_close_def-9 nil 3794657048
   ("" (skeep)
    (("" (split)
      (("1" (flatten)
        (("1" (expand "segments_2D_close" :assert? none)
          (("1" (skoletin 1)
            (("1" (skoletin 1)
              (("1" (skoletin 1)
                (("1" (skoletin 1)
                  (("1" (skoletin 1)
                    (("1" (skoletin 1)
                      (("1" (skoletin 1)
                        (("1" (skoletin 1)
                          (("1"
                            (name-replace "segXApart"
                             "(abs(segStartXDiff) > 2 * BUFF)
             AND (abs(segStartEndXDiff) > 2 * BUFF)
             AND (abs(segEndXDiff) > 2 * BUFF)
             AND (abs(segEndStartXDiff) > 2 * BUFF)
             AND (sign(segStartXDiff) = sign(segStartEndXDiff))
             AND (sign(segEndXDiff) = sign(segEndStartXDiff))
             AND (sign(segStartXDiff) = sign(segEndXDiff))" :hide? nil)
                            (("1"
                              (invoke (case "%2=(%1)") (! -1 1)
                               (! -1 2))
                              (("1"
                                (hide -2)
                                (("1"
                                  (name-replace
                                   "segYApart"
                                   "(abs(segStartYDiff) > 2 * BUFF)
             AND (abs(segStartEndYDiff) > 2 * BUFF)
             AND (abs(segEndYDiff) > 2 * BUFF)
             AND (abs(segEndStartYDiff) > 2 * BUFF)
             AND (sign(segStartYDiff) = sign(segStartEndYDiff))
             AND (sign(segEndYDiff) = sign(segEndStartYDiff))
             AND (sign(segStartYDiff) = sign(segEndYDiff))"
                                   :hide?
                                   nil)
                                  (("1"
                                    (invoke
                                     (case "%2=(%1)")
                                     (! -1 1)
                                     (! -1 2))
                                    (("1"
                                      (hide -2)
                                      (("1"
                                        (beta)
                                        (("1"
                                          (split +)
                                          (("1"
                                            (case
                                             "FORALL (w,v:Vect2): sqv(w-v)<sq(BUFF) IMPLIES (abs(w`x-v`x)<BUFF AND abs(w`y-v`y)<BUFF)")
                                            (("1"
                                              (skeep -)
                                              (("1"
                                                (insteep -)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (case
                                                       "NOT (on_segment_2D?(segstart1, segend1, v)
              AND on_segment_2D?(segstart2, segend2, w))")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (expand
                                                           "on_segment_2D?"
                                                           (-1 -2))
                                                          (("2"
                                                            (skolem
                                                             -
                                                             "tv")
                                                            (("2"
                                                              (skolem
                                                               -
                                                               "tw")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (case
                                                                   "FORALL (a,b,c,d,t1,t2:real): 0<=t1 AND t1<=1 AND 0<=t2 AND t2<=1 AND c-a>2*BUFF AND c-b>2*BUFF AND d-a>2*BUFF AND d-b>2*BUFF IMPLIES ((1-t2)*c+t2*d)-((1-t1)*a+t1*b)>2*BUFF")
                                                                  (("1"
                                                                    (replaces
                                                                     -4)
                                                                    (("1"
                                                                      (replaces
                                                                       -6)
                                                                      (("1"
                                                                        (rewrite
                                                                         "vx_distr_add")
                                                                        (("1"
                                                                          (rewrite
                                                                           "vx_distr_add")
                                                                          (("1"
                                                                            (rewrite
                                                                             "vx_scal")
                                                                            (("1"
                                                                              (rewrite
                                                                               "vx_scal")
                                                                              (("1"
                                                                                (rewrite
                                                                                 "vx_scal")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "vx_scal")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vy_distr_add")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "vy_distr_add")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "vy_scal")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "vy_scal")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "vy_scal")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "vy_scal")
                                                                                              (("1"
                                                                                                (split)
                                                                                                (("1"
                                                                                                  (replaces
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -8)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "abs"
                                                                                                       -8)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "sign"
                                                                                                         -8)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (lift-if)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (lift-if)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (ground)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "segstart1`x"
                                                                                                                           "segend1`x"
                                                                                                                           "segstart2`x"
                                                                                                                           "segend2`x"
                                                                                                                           "tv"
                                                                                                                           "tw")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "segstart2`x"
                                                                                                                           "segend2`x"
                                                                                                                           "segstart1`x"
                                                                                                                           "segend1`x"
                                                                                                                           "tw"
                                                                                                                           "tv")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (replaces
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -9)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "abs"
                                                                                                       -8)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "sign"
                                                                                                         -8)
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (lift-if)
                                                                                                            (("2"
                                                                                                              (lift-if)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (lift-if)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "segstart1`y"
                                                                                                                         "segend1`y"
                                                                                                                         "segstart2`y"
                                                                                                                         "segend2`y"
                                                                                                                         "tv"
                                                                                                                         "tw")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "segstart2`y"
                                                                                                                         "segend2`y"
                                                                                                                         "segstart1`y"
                                                                                                                         "segend1`y"
                                                                                                                         "tw"
                                                                                                                         "tv")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     -)
                                                                    (("2"
                                                                      (skeep*)
                                                                      (("2"
                                                                        (case
                                                                         "FORALL (cc,dd,tt:real): 0<=tt AND tt<=1 IMPLIES (1-tt)*cc+tt*dd>=min(cc,dd)")
                                                                        (("1"
                                                                          (inst-cp
                                                                           -
                                                                           "c"
                                                                           "d"
                                                                           "t2")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "-a"
                                                                             "-b"
                                                                             "t1")
                                                                            (("1"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (skeep*)
                                                                            (("2"
                                                                              (expand
                                                                               "min")
                                                                              (("2"
                                                                                (lift-if)
                                                                                (("2"
                                                                                  (ground)
                                                                                  (("1"
                                                                                    (mult-by
                                                                                     -1
                                                                                     "1-tt")
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (mult-by
                                                                                     1
                                                                                     "tt")
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide -)
                                              (("2"
                                                (skeep*)
                                                (("2"
                                                  (rewrite
                                                   "vx_distr_sub"
                                                   :dir
                                                   rl)
                                                  (("2"
                                                    (rewrite
                                                     "vy_distr_sub"
                                                     :dir
                                                     rl)
                                                    (("2"
                                                      (name
                                                       "vvv"
                                                       "w-v")
                                                      (("2"
                                                        (replaces -1)
                                                        (("2"
                                                          (split)
                                                          (("1"
                                                            (rewrite
                                                             "sq_lt"
                                                             1
                                                             :dir
                                                             rl)
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (rewrite
                                                             "sq_lt"
                                                             1
                                                             :dir
                                                             rl)
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (hide
                                               (-1
                                                -2
                                                -3
                                                -4
                                                -5
                                                -6
                                                -7
                                                -8
                                                -9
                                                -10
                                                1
                                                2))
                                              (("2"
                                                (split +)
                                                (("1" (propax) nil nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (split +)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (split +)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (split +)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (split
                                                                 +)
                                                                (("1"
                                                                  (split)
                                                                  (("1"
                                                                    (lemma
                                                                     "vectors_2D.sqv_eq_0")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (rewrite
                                                                           "sub_eq_zero")
                                                                          (("1"
                                                                            (replace
                                                                             -1
                                                                             :dir
                                                                             rl)
                                                                            (("1"
                                                                              (skeep)
                                                                              (("1"
                                                                                (case
                                                                                 "v = segend1")
                                                                                (("1"
                                                                                  (hide
                                                                                   (1
                                                                                    2
                                                                                    4))
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "near_edge_def")
                                                                                    (("1"
                                                                                      (inst?)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (inst
                                                                                           +
                                                                                           "w")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "on_segment_2D?"
                                                                                     -3)
                                                                                    (("2"
                                                                                      (skeep)
                                                                                      (("2"
                                                                                        (replaces
                                                                                         -5)
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (decompose-equality)
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "vectors_2D.sqv_eq_0")
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (rewrite
                                                                           "sub_eq_zero")
                                                                          (("2"
                                                                            (replace
                                                                             -1
                                                                             :dir
                                                                             rl)
                                                                            (("2"
                                                                              (skeep)
                                                                              (("2"
                                                                                (case
                                                                                 "w = segend2")
                                                                                (("1"
                                                                                  (hide
                                                                                   (2
                                                                                    3
                                                                                    4))
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "near_edge_def")
                                                                                    (("1"
                                                                                      (inst?)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (inst
                                                                                           +
                                                                                           "v")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (case
                                                                                               "sqv(v-segend2)=sqv(segend2-v)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "on_segment_2D?"
                                                                                   -4)
                                                                                  (("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (replaces
                                                                                       -6
                                                                                       1)
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (decompose-equality)
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (name-replace
                                                                     "s"
                                                                     "segstart1 - segstart2"
                                                                     :hide?
                                                                     nil)
                                                                    (("2"
                                                                      (invoke
                                                                       (case
                                                                        "%2=(%1)")
                                                                       (!
                                                                        -1
                                                                        1)
                                                                       (!
                                                                        -1
                                                                        2))
                                                                      (("1"
                                                                        (hide
                                                                         -2)
                                                                        (("1"
                                                                          (name-replace
                                                                           "v"
                                                                           "segend1 - segstart1"
                                                                           :hide?
                                                                           nil)
                                                                          (("1"
                                                                            (invoke
                                                                             (case
                                                                              "%2=(%1)")
                                                                             (!
                                                                              -1
                                                                              1)
                                                                             (!
                                                                              -1
                                                                              2))
                                                                            (("1"
                                                                              (hide
                                                                               -2)
                                                                              (("1"
                                                                                (name-replace
                                                                                 "w"
                                                                                 "segend2 - segstart2"
                                                                                 :hide?
                                                                                 nil)
                                                                                (("1"
                                                                                  (invoke
                                                                                   (case
                                                                                    "%2=(%1)")
                                                                                   (!
                                                                                    -1
                                                                                    1)
                                                                                   (!
                                                                                    -1
                                                                                    2))
                                                                                  (("1"
                                                                                    (hide
                                                                                     -2)
                                                                                    (("1"
                                                                                      (name-replace
                                                                                       "a"
                                                                                       "sqv(v)"
                                                                                       :hide?
                                                                                       nil)
                                                                                      (("1"
                                                                                        (invoke
                                                                                         (case
                                                                                          "%2=(%1)")
                                                                                         (!
                                                                                          -1
                                                                                          1)
                                                                                         (!
                                                                                          -1
                                                                                          2))
                                                                                        (("1"
                                                                                          (hide
                                                                                           -2)
                                                                                          (("1"
                                                                                            (name-replace
                                                                                             "b"
                                                                                             "sqv(w)"
                                                                                             :hide?
                                                                                             nil)
                                                                                            (("1"
                                                                                              (invoke
                                                                                               (case
                                                                                                "%2=(%1)")
                                                                                               (!
                                                                                                -1
                                                                                                1)
                                                                                               (!
                                                                                                -1
                                                                                                2))
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (name-replace
                                                                                                   "c"
                                                                                                   "-2 * (v * w)"
                                                                                                   :hide?
                                                                                                   nil)
                                                                                                  (("1"
                                                                                                    (invoke
                                                                                                     (case
                                                                                                      "%2=(%1)")
                                                                                                     (!
                                                                                                      -1
                                                                                                      1)
                                                                                                     (!
                                                                                                      -1
                                                                                                      2))
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (name-replace
                                                                                                         "d"
                                                                                                         "2 * (s * v)"
                                                                                                         :hide?
                                                                                                         nil)
                                                                                                        (("1"
                                                                                                          (invoke
                                                                                                           (case
                                                                                                            "%2=(%1)")
                                                                                                           (!
                                                                                                            -1
                                                                                                            1)
                                                                                                           (!
                                                                                                            -1
                                                                                                            2))
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (name-replace
                                                                                                               "ee"
                                                                                                               "-2 * (s * w)"
                                                                                                               :hide?
                                                                                                               nil)
                                                                                                              (("1"
                                                                                                                (invoke
                                                                                                                 (case
                                                                                                                  "%2=(%1)")
                                                                                                                 (!
                                                                                                                  -1
                                                                                                                  1)
                                                                                                                 (!
                                                                                                                  -1
                                                                                                                  2))
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (name-replace
                                                                                                                     "f"
                                                                                                                     "sqv(s)"
                                                                                                                     :hide?
                                                                                                                     nil)
                                                                                                                    (("1"
                                                                                                                      (invoke
                                                                                                                       (case
                                                                                                                        "%2=(%1)")
                                                                                                                       (!
                                                                                                                        -1
                                                                                                                        1)
                                                                                                                       (!
                                                                                                                        -1
                                                                                                                        2))
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "quad_min_unit_box_def_lt")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "sq(BUFF)"
                                                                                                                             "a"
                                                                                                                             "b"
                                                                                                                             "c"
                                                                                                                             "d"
                                                                                                                             "ee"
                                                                                                                             "f")
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "quad_min_unit_box_def_eq")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "sq(BUFF)"
                                                                                                                                 "a"
                                                                                                                                 "b"
                                                                                                                                 "c"
                                                                                                                                 "d"
                                                                                                                                 "ee"
                                                                                                                                 "f")
                                                                                                                                (("1"
                                                                                                                                  (case
                                                                                                                                   "NOT ((rev_disc(a, b, c) = 0 AND 2 * ee * a = c * d) OR rev_disc(a, b, c) < 0)")
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (hide
                                                                                                                                       (-1
                                                                                                                                        -2))
                                                                                                                                      (("1"
                                                                                                                                        (case
                                                                                                                                         "rev_disc(a,b,c)=0")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (lemma
                                                                                                                                             "rev_0_global_min")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "s"
                                                                                                                                               "v"
                                                                                                                                               "w")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "rev_disc"
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (hide
                                                                                                                                           2)
                                                                                                                                          (("2"
                                                                                                                                            (case
                                                                                                                                             "rev_disc(a,b,c)<=0")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide
                                                                                                                                               (2
                                                                                                                                                3))
                                                                                                                                              (("2"
                                                                                                                                                (replaces
                                                                                                                                                 -4
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (replaces
                                                                                                                                                   -4
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (replaces
                                                                                                                                                     -4
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "rev_disc"
                                                                                                                                                       1)
                                                                                                                                                      (("2"
                                                                                                                                                        (rewrite
                                                                                                                                                         "sq_times")
                                                                                                                                                        (("2"
                                                                                                                                                          (rewrite
                                                                                                                                                           "sq_neg")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "sq"
                                                                                                                                                             1
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "vectors_2D.cauchy_schwarz")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "v"
                                                                                                                                                                 "w")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (case
                                                                                                                                       "(EXISTS (x, y:real):
                                                                                                                                                                0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                                                                                                                            AND quad(a, b, c, d, ee, f)(x, y) < sq(BUFF))")
                                                                                                                                      (("1"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide
                                                                                                                                         (-1
                                                                                                                                          -2
                                                                                                                                          -3))
                                                                                                                                        (("2"
                                                                                                                                          (copy
                                                                                                                                           -10)
                                                                                                                                          (("2"
                                                                                                                                            (skeep
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "on_segment_2D?"
                                                                                                                                               (-1
                                                                                                                                                -2))
                                                                                                                                              (("2"
                                                                                                                                                (skolem
                                                                                                                                                 -
                                                                                                                                                 "tv")
                                                                                                                                                (("2"
                                                                                                                                                  (skolem
                                                                                                                                                   -
                                                                                                                                                   "tw")
                                                                                                                                                  (("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       +
                                                                                                                                                       "tv"
                                                                                                                                                       "tw")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (case
                                                                                                                                                           "NOT v!1 = segstart1+tv*v")
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -3
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "v"
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (grind)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (case
                                                                                                                                                             "NOT w!1 = segstart2+tw*w")
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -7
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "w"
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide-all-but
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (grind)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (copy
                                                                                                                                                               -9)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -3
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -2
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "a"
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "b"
                                                                                                                                                                       1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "c"
                                                                                                                                                                         1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "d"
                                                                                                                                                                           1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "ee"
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "f"
                                                                                                                                                                               1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "s"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                   (-1
                                                                                                                                                                                    1))
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (grind)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replace
                                                                               -1)
                                                                              (("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (replace
                                                                         -1)
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (replace -1)
                                      (("2" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (replace -1)
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (flatten)
        (("2" (expand "segments_2D_close" :assert? none)
          (("2" (skoletin -)
            (("2" (skoletin -)
              (("2" (skoletin -)
                (("2" (skoletin -)
                  (("2" (skoletin -)
                    (("2" (skoletin -)
                      (("2" (skoletin -)
                        (("2" (skoletin -)
                          (("2"
                            (name-replace "segXApart"
                             "(abs(segStartXDiff) > 2 * BUFF)
             AND (abs(segStartEndXDiff) > 2 * BUFF)
             AND (abs(segEndXDiff) > 2 * BUFF)
             AND (abs(segEndStartXDiff) > 2 * BUFF)
             AND (sign(segStartXDiff) = sign(segStartEndXDiff))
             AND (sign(segEndXDiff) = sign(segEndStartXDiff))
             AND (sign(segStartXDiff) = sign(segEndXDiff))" :hide? nil)
                            (("2"
                              (invoke (case "%2=(%1)") (! -1 1)
                               (! -1 2))
                              (("1"
                                (hide -2)
                                (("1"
                                  (name-replace
                                   "segYApart"
                                   "(abs(segStartYDiff) > 2 * BUFF)
             AND (abs(segStartEndYDiff) > 2 * BUFF)
             AND (abs(segEndYDiff) > 2 * BUFF)
             AND (abs(segEndStartYDiff) > 2 * BUFF)
             AND (sign(segStartYDiff) = sign(segStartEndYDiff))
             AND (sign(segEndYDiff) = sign(segEndStartYDiff))
             AND (sign(segStartYDiff) = sign(segEndYDiff))"
                                   :hide?
                                   nil)
                                  (("1"
                                    (invoke
                                     (case "%2=(%1)")
                                     (! -1 1)
                                     (! -1 2))
                                    (("1"
                                      (hide -2)
                                      (("1"
                                        (beta)
                                        (("1"
                                          (hide-all-but (-3 1))
                                          (("1"
                                            (lemma "near_edge_def")
                                            (("1"
                                              (split -)
                                              (("1" (propax) nil nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (hide (1 2))
                                                  (("2"
                                                    (split -)
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (inst
                                                             +
                                                             "w"
                                                             "segstart1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "on_segment_2D?")
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "0")
                                                                  (("1"
                                                                    (hide
                                                                     -)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (split -)
                                                        (("1"
                                                          (hide 1)
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (skeep)
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "w"
                                                                   "segend1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "on_segment_2D?")
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "1")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (split -)
                                                            (("1"
                                                              (hide
                                                               (1 2))
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (skeep)
                                                                    (("1"
                                                                      (inst
                                                                       +
                                                                       "segstart2"
                                                                       "w")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (split)
                                                                          (("1"
                                                                            (expand
                                                                             "on_segment_2D?"
                                                                             +)
                                                                            (("1"
                                                                              (inst
                                                                               +
                                                                               "0")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             (-1
                                                                              -2))
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (split
                                                                 -)
                                                                (("1"
                                                                  (hide
                                                                   (1
                                                                    2
                                                                    3))
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "segend2"
                                                                           "w")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split)
                                                                              (("1"
                                                                                (expand
                                                                                 "on_segment_2D?")
                                                                                (("1"
                                                                                  (inst
                                                                                   +
                                                                                   "1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 (-1
                                                                                  -2))
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (split
                                                                     -)
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (name-replace
                                                                         "s"
                                                                         "segstart1 - segstart2"
                                                                         :hide?
                                                                         nil)
                                                                        (("2"
                                                                          (invoke
                                                                           (case
                                                                            "%2=(%1)")
                                                                           (!
                                                                            -1
                                                                            1)
                                                                           (!
                                                                            -1
                                                                            2))
                                                                          (("1"
                                                                            (hide
                                                                             -2)
                                                                            (("1"
                                                                              (name-replace
                                                                               "v"
                                                                               "segend1 - segstart1"
                                                                               :hide?
                                                                               nil)
                                                                              (("1"
                                                                                (invoke
                                                                                 (case
                                                                                  "%2=(%1)")
                                                                                 (!
                                                                                  -1
                                                                                  1)
                                                                                 (!
                                                                                  -1
                                                                                  2))
                                                                                (("1"
                                                                                  (hide
                                                                                   -2)
                                                                                  (("1"
                                                                                    (name-replace
                                                                                     "w"
                                                                                     "segend2 - segstart2"
                                                                                     :hide?
                                                                                     nil)
                                                                                    (("1"
                                                                                      (invoke
                                                                                       (case
                                                                                        "%2=(%1)")
                                                                                       (!
                                                                                        -1
                                                                                        1)
                                                                                       (!
                                                                                        -1
                                                                                        2))
                                                                                      (("1"
                                                                                        (hide
                                                                                         -2)
                                                                                        (("1"
                                                                                          (name-replace
                                                                                           "a"
                                                                                           "sqv(v)"
                                                                                           :hide?
                                                                                           nil)
                                                                                          (("1"
                                                                                            (invoke
                                                                                             (case
                                                                                              "%2=(%1)")
                                                                                             (!
                                                                                              -1
                                                                                              1)
                                                                                             (!
                                                                                              -1
                                                                                              2))
                                                                                            (("1"
                                                                                              (hide
                                                                                               -2)
                                                                                              (("1"
                                                                                                (name-replace
                                                                                                 "b"
                                                                                                 "sqv(w)"
                                                                                                 :hide?
                                                                                                 nil)
                                                                                                (("1"
                                                                                                  (invoke
                                                                                                   (case
                                                                                                    "%2=(%1)")
                                                                                                   (!
                                                                                                    -1
                                                                                                    1)
                                                                                                   (!
                                                                                                    -1
                                                                                                    2))
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -2)
                                                                                                    (("1"
                                                                                                      (name-replace
                                                                                                       "c"
                                                                                                       "-2 * (v * w)"
                                                                                                       :hide?
                                                                                                       nil)
                                                                                                      (("1"
                                                                                                        (invoke
                                                                                                         (case
                                                                                                          "%2=(%1)")
                                                                                                         (!
                                                                                                          -1
                                                                                                          1)
                                                                                                         (!
                                                                                                          -1
                                                                                                          2))
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (name-replace
                                                                                                             "d"
                                                                                                             "2 * (s * v)"
                                                                                                             :hide?
                                                                                                             nil)
                                                                                                            (("1"
                                                                                                              (invoke
                                                                                                               (case
                                                                                                                "%2=(%1)")
                                                                                                               (!
                                                                                                                -1
                                                                                                                1)
                                                                                                               (!
                                                                                                                -1
                                                                                                                2))
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (name-replace
                                                                                                                   "ee"
                                                                                                                   "-2 * (s * w)"
                                                                                                                   :hide?
                                                                                                                   nil)
                                                                                                                  (("1"
                                                                                                                    (invoke
                                                                                                                     (case
                                                                                                                      "%2=(%1)")
                                                                                                                     (!
                                                                                                                      -1
                                                                                                                      1)
                                                                                                                     (!
                                                                                                                      -1
                                                                                                                      2))
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (name-replace
                                                                                                                         "f"
                                                                                                                         "sqv(s)"
                                                                                                                         :hide?
                                                                                                                         nil)
                                                                                                                        (("1"
                                                                                                                          (invoke
                                                                                                                           (case
                                                                                                                            "%2=(%1)")
                                                                                                                           (!
                                                                                                                            -1
                                                                                                                            1)
                                                                                                                           (!
                                                                                                                            -1
                                                                                                                            2))
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "quad_min_unit_box_def_lt")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "sq(BUFF)"
                                                                                                                                 "a"
                                                                                                                                 "b"
                                                                                                                                 "c"
                                                                                                                                 "d"
                                                                                                                                 "ee"
                                                                                                                                 "f")
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "quad_min_unit_box_def_eq")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "sq(BUFF)"
                                                                                                                                     "a"
                                                                                                                                     "b"
                                                                                                                                     "c"
                                                                                                                                     "d"
                                                                                                                                     "ee"
                                                                                                                                     "f")
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "NOT ((rev_disc(a, b, c) = 0 AND 2 * ee * a = c * d) OR rev_disc(a, b, c) < 0)")
                                                                                                                                      (("1"
                                                                                                                                        (hide
                                                                                                                                         (-1
                                                                                                                                          -2))
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "rev_disc(a,b,c)=0")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "rev_0_global_min")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "s"
                                                                                                                                                   "v"
                                                                                                                                                   "w")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "rev_disc"
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (case
                                                                                                                                                 "rev_disc(a,b,c)<=0")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (hide
                                                                                                                                                   (2
                                                                                                                                                    3))
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "rev_disc"
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "a"
                                                                                                                                                       1)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "b"
                                                                                                                                                         1)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "c"
                                                                                                                                                           1)
                                                                                                                                                          (("2"
                                                                                                                                                            (rewrite
                                                                                                                                                             "sq_times")
                                                                                                                                                            (("2"
                                                                                                                                                              (rewrite
                                                                                                                                                               "sq_neg")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "sq"
                                                                                                                                                                 1
                                                                                                                                                                 1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "vectors_2D.cauchy_schwarz")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "v"
                                                                                                                                                                     "w")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (case
                                                                                                                                         "NOT (EXISTS (x, y:real):
                                                                                                        0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                                                                    AND quad(a, b, c, d, ee, f)(x, y) < sq(BUFF))")
                                                                                                                                        (("1"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (hide
                                                                                                                                           (-2
                                                                                                                                            -3
                                                                                                                                            -4))
                                                                                                                                          (("2"
                                                                                                                                            (skeep)
                                                                                                                                            (("2"
                                                                                                                                              (name
                                                                                                                                               "ww"
                                                                                                                                               "segstart2+y*(segend2-segstart2)")
                                                                                                                                              (("2"
                                                                                                                                                (name
                                                                                                                                                 "vv"
                                                                                                                                                 "segstart1+x*(segend1-segstart1)")
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   +
                                                                                                                                                   "ww"
                                                                                                                                                   "vv")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (split
                                                                                                                                                       +)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "on_segment_2D?")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "x")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (replaces
                                                                                                                                                               -1
                                                                                                                                                               1
                                                                                                                                                               :dir
                                                                                                                                                               rl)
                                                                                                                                                              (("1"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (grind)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (expand
                                                                                                                                                         "on_segment_2D?")
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "y")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (replaces
                                                                                                                                                               -2
                                                                                                                                                               1
                                                                                                                                                               :dir
                                                                                                                                                               rl)
                                                                                                                                                              (("2"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (grind)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("3"
                                                                                                                                                        (assert)
                                                                                                                                                        (("3"
                                                                                                                                                          (copy
                                                                                                                                                           -7)
                                                                                                                                                          (("3"
                                                                                                                                                            (expand
                                                                                                                                                             "a"
                                                                                                                                                             -1)
                                                                                                                                                            (("3"
                                                                                                                                                              (expand
                                                                                                                                                               "b"
                                                                                                                                                               -1)
                                                                                                                                                              (("3"
                                                                                                                                                                (expand
                                                                                                                                                                 "c"
                                                                                                                                                                 -1)
                                                                                                                                                                (("3"
                                                                                                                                                                  (expand
                                                                                                                                                                   "d"
                                                                                                                                                                   -1)
                                                                                                                                                                  (("3"
                                                                                                                                                                    (expand
                                                                                                                                                                     "ee"
                                                                                                                                                                     -1)
                                                                                                                                                                    (("3"
                                                                                                                                                                      (expand
                                                                                                                                                                       "f"
                                                                                                                                                                       -1)
                                                                                                                                                                      (("3"
                                                                                                                                                                        (expand
                                                                                                                                                                         "s"
                                                                                                                                                                         -1)
                                                                                                                                                                        (("3"
                                                                                                                                                                          (replaces
                                                                                                                                                                           -2
                                                                                                                                                                           1
                                                                                                                                                                           :dir
                                                                                                                                                                           rl)
                                                                                                                                                                          (("3"
                                                                                                                                                                            (replaces
                                                                                                                                                                             -2
                                                                                                                                                                             1
                                                                                                                                                                             :dir
                                                                                                                                                                             rl)
                                                                                                                                                                            (("3"
                                                                                                                                                                              (expand
                                                                                                                                                                               "v"
                                                                                                                                                                               -1)
                                                                                                                                                                              (("3"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "w"
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("3"
                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                   (-1
                                                                                                                                                                                    1))
                                                                                                                                                                                  (("3"
                                                                                                                                                                                    (grind)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (replace
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("2"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (replace
                                                                             -1)
                                                                            (("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (replace -1)
                                      (("2" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (replace -1)
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((add_zero_right formula-decl nil vectors_2D vectors)
    (scal_0 formula-decl nil vectors_2D vectors)
    (scal_1 formula-decl nil vectors_2D vectors)
    (add_zero_left formula-decl nil vectors_2D vectors)
    (a skolem-const-decl "nnreal" edge_proximity nil)
    (c skolem-const-decl "real" edge_proximity nil)
    (b skolem-const-decl "nnreal" edge_proximity nil)
    (d skolem-const-decl "real" edge_proximity nil)
    (f skolem-const-decl "nnreal" edge_proximity nil)
    (v skolem-const-decl "Vector" edge_proximity nil)
    (w skolem-const-decl "Vector" edge_proximity nil)
    (s skolem-const-decl "Vector" edge_proximity nil)
    (ee skolem-const-decl "real" edge_proximity nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (> const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (/= const-decl "boolean" notequal nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Sign type-eq-decl nil sign reals)
    (sign const-decl "Sign" sign reals)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (- const-decl "Vector" vectors_2D vectors)
    (near_edge const-decl "bool" edge_proximity nil)
    (* const-decl "real" vectors_2D vectors)
    (TRUE const-decl "bool" booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (FALSE const-decl "bool" booleans nil)
    (quad_min_unit_box const-decl "bool" double_quadratic reals)
    (sq const-decl "nonneg_real" sq reals)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (near_edge_def formula-decl nil edge_proximity nil)
    (sub_eq_args formula-decl nil vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (sub_eq_zero formula-decl nil vectors_2D vectors)
    (quad_min_unit_box_def_lt formula-decl nil double_quadratic reals)
    (quad_min_unit_box_def_eq formula-decl nil double_quadratic reals)
    (rev_disc const-decl "real" double_quadratic reals)
    (sq_neg formula-decl nil sq reals)
    (cauchy_schwarz formula-decl nil vectors_2D vectors)
    (sq_times formula-decl nil sq reals)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (rev_0_global_min formula-decl nil edge_proximity nil)
    (quad const-decl "real" double_quadratic reals)
    (v skolem-const-decl "Vector" edge_proximity nil)
    (b skolem-const-decl "nnreal" edge_proximity nil)
    (d skolem-const-decl "real" edge_proximity nil)
    (f skolem-const-decl "nnreal" edge_proximity nil)
    (s skolem-const-decl "Vector" edge_proximity nil)
    (ee skolem-const-decl "real" edge_proximity nil)
    (c skolem-const-decl "real" edge_proximity nil)
    (a skolem-const-decl "nnreal" edge_proximity nil)
    (w skolem-const-decl "Vector" edge_proximity nil)
    (< const-decl "bool" reals nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (* const-decl "Vector" vectors_2D vectors)
    (vx_distr_add formula-decl nil vectors_2D vectors)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (vx_scal formula-decl nil vectors_2D vectors)
    (vy_distr_add formula-decl nil vectors_2D vectors)
    (vy_scal formula-decl nil vectors_2D vectors)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (<= const-decl "bool" reals nil)
    (on_segment_2D? const-decl "bool" edge_proximity nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (vy_distr_sub formula-decl nil vectors_2D vectors)
    (sq_lt formula-decl nil sq reals)
    (sq_abs formula-decl nil sq reals)
    (vx_distr_sub formula-decl nil vectors_2D vectors)
    (segments_2D_close const-decl "bool" edge_proximity nil))
   nil)
  (segments_2D_close_def-8 nil 3794653255
   ("" (skeep)
    (("" (split)
      (("1" (flatten)
        (("1" (expand "segments_2D_close" :assert? none)
          (("1" (skoletin 1)
            (("1" (skoletin 1)
              (("1" (skoletin 1)
                (("1" (skoletin 1)
                  (("1" (skoletin 1)
                    (("1" (skoletin 1)
                      (("1" (skoletin 1)
                        (("1" (skoletin 1)
                          (("1"
                            (name-replace "segXApart"
                             "(abs(segStartXDiff) > 2 * BUFF)
             AND (abs(segStartEndXDiff) > 2 * BUFF)
             AND (abs(segEndXDiff) > 2 * BUFF)
             AND (abs(segEndStartXDiff) > 2 * BUFF)
             AND (sign(segStartXDiff) = sign(segStartEndXDiff))
             AND (sign(segEndXDiff) = sign(segEndStartXDiff))
             AND (sign(segStartXDiff) = sign(segEndXDiff))" :hide? nil)
                            (("1"
                              (branch
                               (invoke
                                (case "%2=(%1)")
                                (! -1 1)
                                (! -1 2))
                               ((hide -2) (replace -1)))
                              (("1"
                                (name-replace
                                 "segYApart"
                                 "(abs(segStartYDiff) > 2 * BUFF)
             AND (abs(segStartEndYDiff) > 2 * BUFF)
             AND (abs(segEndYDiff) > 2 * BUFF)
             AND (abs(segEndStartYDiff) > 2 * BUFF)
             AND (sign(segStartYDiff) = sign(segStartEndYDiff))
             AND (sign(segEndYDiff) = sign(segEndStartYDiff))
             AND (sign(segStartYDiff) = sign(segEndYDiff))"
                                 :hide?
                                 nil)
                                (("1"
                                  (branch
                                   (invoke
                                    (case "%2=(%1)")
                                    (! -1 1)
                                    (! -1 2))
                                   ((hide -2) (replace -1)))
                                  (("1"
                                    (split +)
                                    (("1"
                                      (case
                                       "FORALL (w,v:Vect2): sqv(w-v)<sq(BUFF) IMPLIES (abs(w`x-v`x)<BUFF AND abs(w`y-v`y)<BUFF)")
                                      (("1"
                                        (skeep -)
                                        (("1"
                                          (insteep -)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (case
                                                 "NOT (on_segment_2D?(segstart1, segend1, v)
              AND on_segment_2D?(segstart2, segend2, w))")
                                                (("1" (assert) nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (expand
                                                     "on_segment_2D?"
                                                     (-1 -2))
                                                    (("2"
                                                      (skolem - "tv")
                                                      (("2"
                                                        (skolem - "tw")
                                                        (("2"
                                                          (flatten)
                                                          (("2"
                                                            (case
                                                             "FORALL (a,b,c,d,t1,t2:real): 0<=t1 AND t1<=1 AND 0<=t2 AND t2<=1 AND c-a>2*BUFF AND c-b>2*BUFF AND d-a>2*BUFF AND d-b>2*BUFF IMPLIES ((1-t2)*c+t2*d)-((1-t1)*a+t1*b)>2*BUFF")
                                                            (("1"
                                                              (replaces
                                                               -4)
                                                              (("1"
                                                                (replaces
                                                                 -6)
                                                                (("1"
                                                                  (rewrite
                                                                   "vx_distr_add")
                                                                  (("1"
                                                                    (rewrite
                                                                     "vx_distr_add")
                                                                    (("1"
                                                                      (rewrite
                                                                       "vx_scal")
                                                                      (("1"
                                                                        (rewrite
                                                                         "vx_scal")
                                                                        (("1"
                                                                          (rewrite
                                                                           "vx_scal")
                                                                          (("1"
                                                                            (rewrite
                                                                             "vx_scal")
                                                                            (("1"
                                                                              (rewrite
                                                                               "vy_distr_add")
                                                                              (("1"
                                                                                (rewrite
                                                                                 "vy_distr_add")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "vy_scal")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vy_scal")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "vy_scal")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "vy_scal")
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -8)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "abs"
                                                                                                 -8)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "sign"
                                                                                                   -8)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (lift-if)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (ground)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "segstart1`x"
                                                                                                                     "segend1`x"
                                                                                                                     "segstart2`x"
                                                                                                                     "segend2`x"
                                                                                                                     "tv"
                                                                                                                     "tw")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil)))
                                                                                                                   ("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "segstart2`x"
                                                                                                                     "segend2`x"
                                                                                                                     "segstart1`x"
                                                                                                                     "segend1`x"
                                                                                                                     "tw"
                                                                                                                     "tv")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil)))))))))))))))))))))))))))
                                                                                           ("2"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -9)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "abs"
                                                                                                 -8)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "sign"
                                                                                                   -8)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (lift-if)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (ground)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "segstart1`y"
                                                                                                                   "segend1`y"
                                                                                                                   "segstart2`y"
                                                                                                                   "segend2`y"
                                                                                                                   "tv"
                                                                                                                   "tw")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil)))
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "segstart2`y"
                                                                                                                   "segend2`y"
                                                                                                                   "segstart1`y"
                                                                                                                   "segend1`y"
                                                                                                                   "tw"
                                                                                                                   "tv")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                             ("2"
                                                              (hide -)
                                                              (("2"
                                                                (skeep*)
                                                                (("2"
                                                                  (case
                                                                   "FORALL (cc,dd,tt:real): 0<=tt AND tt<=1 IMPLIES (1-tt)*cc+tt*dd>=min(cc,dd)")
                                                                  (("1"
                                                                    (inst-cp
                                                                     -
                                                                     "c"
                                                                     "d"
                                                                     "t2")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "-a"
                                                                       "-b"
                                                                       "t1")
                                                                      (("1"
                                                                        (grind)
                                                                        nil)))))
                                                                   ("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (skeep*)
                                                                      (("2"
                                                                        (expand
                                                                         "min")
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (ground)
                                                                            (("1"
                                                                              (mult-by
                                                                               -1
                                                                               "1-tt")
                                                                              (("1"
                                                                                (grind)
                                                                                nil)))
                                                                             ("2"
                                                                              (mult-by
                                                                               1
                                                                               "tt")
                                                                              (("2"
                                                                                (grind)
                                                                                nil)))))))))))))))))))))))))))))))))))))))))
                                       ("2"
                                        (hide -)
                                        (("2"
                                          (skeep*)
                                          (("2"
                                            (rewrite
                                             "vx_distr_sub"
                                             :dir
                                             rl)
                                            (("2"
                                              (rewrite
                                               "vy_distr_sub"
                                               :dir
                                               rl)
                                              (("2"
                                                (name "vvv" "w-v")
                                                (("2"
                                                  (replaces -1)
                                                  (("2"
                                                    (split)
                                                    (("1"
                                                      (rewrite
                                                       "sq_lt"
                                                       1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (grind)
                                                        nil)))
                                                     ("2"
                                                      (rewrite
                                                       "sq_lt"
                                                       1
                                                       :dir
                                                       rl)
                                                      (("2"
                                                        (grind)
                                                        nil)))))))))))))))))))
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (hide
                                         (-1
                                          -2
                                          -3
                                          -4
                                          -5
                                          -6
                                          -7
                                          -8
                                          -9
                                          -10
                                          1
                                          2))
                                        (("2"
                                          (split +)
                                          (("1" (propax) nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (split +)
                                              (("1" (propax) nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (split +)
                                                  (("1" (propax) nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (split +)
                                                      (("1"
                                                        (propax)
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (split +)
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (lemma
                                                               "vectors_2D.sqv_eq_0")
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (rewrite
                                                                     "sub_eq_zero")
                                                                    (("1"
                                                                      (replace
                                                                       -1
                                                                       :dir
                                                                       rl)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (case
                                                                           "v = segend1")
                                                                          (("1"
                                                                            (hide
                                                                             (1
                                                                              2
                                                                              4))
                                                                            (("1"
                                                                              (lemma
                                                                               "near_edge_def")
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (inst
                                                                                     +
                                                                                     "w")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil)))))))))))
                                                                           ("2"
                                                                            (replace
                                                                             -1)
                                                                            (("2"
                                                                              (expand
                                                                               "on_segment_2D?"
                                                                               -3)
                                                                              (("2"
                                                                                (skeep)
                                                                                (("2"
                                                                                  (replaces
                                                                                   -5)
                                                                                  (("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (decompose-equality)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil)
                                                                                       ("2"
                                                                                        (grind)
                                                                                        nil)))))))))))))))))))))))))))
                                                             ("2"
                                                              (lemma
                                                               "vectors_2D.sqv_eq_0")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (rewrite
                                                                     "sub_eq_zero")
                                                                    (("2"
                                                                      (replace
                                                                       -1
                                                                       :dir
                                                                       rl)
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (case
                                                                           "w = segend2")
                                                                          (("1"
                                                                            (hide
                                                                             (2
                                                                              3
                                                                              4))
                                                                            (("1"
                                                                              (lemma
                                                                               "near_edge_def")
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (inst
                                                                                     +
                                                                                     "v")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (case
                                                                                         "sqv(v-segend2)=sqv(segend2-v)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (grind)
                                                                                            nil)))))))))))))))))
                                                                           ("2"
                                                                            (expand
                                                                             "on_segment_2D?"
                                                                             -4)
                                                                            (("2"
                                                                              (skeep)
                                                                              (("2"
                                                                                (replaces
                                                                                 -6
                                                                                 1)
                                                                                (("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (decompose-equality)
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil)
                                                                                     ("2"
                                                                                      (grind)
                                                                                      nil)))))))))))))))))))))))))))
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (skoletin)
                                                              (("2"
                                                                (skoletin)
                                                                (("2"
                                                                  (skoletin)
                                                                  (("2"
                                                                    (skoletin)
                                                                    (("2"
                                                                      (skoletin)
                                                                      (("2"
                                                                        (skoletin)
                                                                        (("2"
                                                                          (skoletin)
                                                                          (("2"
                                                                            (skoletin)
                                                                            (("2"
                                                                              (skoletin)
                                                                              (("2"
                                                                                (lemma
                                                                                 "quad_min_unit_box_def_lt")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "sq(BUFF)"
                                                                                   "a"
                                                                                   "b"
                                                                                   "c"
                                                                                   "d"
                                                                                   "ee"
                                                                                   "f")
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "quad_min_unit_box_def_eq")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "sq(BUFF)"
                                                                                       "a"
                                                                                       "b"
                                                                                       "c"
                                                                                       "d"
                                                                                       "ee"
                                                                                       "f")
                                                                                      (("2"
                                                                                        (case
                                                                                         "NOT ((rev_disc(a, b, c) = 0 AND 2 * ee * a = c * d) OR rev_disc(a, b, c) < 0)")
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (hide
                                                                                             (-1
                                                                                              -2))
                                                                                            (("1"
                                                                                              (case
                                                                                               "rev_disc(a,b,c)=0")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "rev_0_global_min")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "s_1"
                                                                                                     "v_1"
                                                                                                     "w_1")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "rev_disc"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil)))))))))))
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "rev_disc(a,b,c)<=0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     (2
                                                                                                      3))
                                                                                                    (("2"
                                                                                                      (replaces
                                                                                                       -4
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (replaces
                                                                                                         -4
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (replaces
                                                                                                           -4
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "rev_disc"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "sq_times")
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "sq_neg")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "sq"
                                                                                                                   1
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "vectors_2D.cauchy_schwarz")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "v_1"
                                                                                                                       "w_1")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil)))))))))))))))))))))))))))))))
                                                                                         ("2"
                                                                                          (replace
                                                                                           1)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (case
                                                                                               "(EXISTS (x, y:real):
                                                                                                                                                                0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                                                                                                                            AND quad(a, b, c, d, ee, f)(x, y) < sq(BUFF))")
                                                                                              (("1"
                                                                                                (ground)
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 (-1
                                                                                                  -2
                                                                                                  -3))
                                                                                                (("2"
                                                                                                  (copy
                                                                                                   -10)
                                                                                                  (("2"
                                                                                                    (skeep
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "on_segment_2D?"
                                                                                                       (-1
                                                                                                        -2))
                                                                                                      (("2"
                                                                                                        (skolem
                                                                                                         -
                                                                                                         "tv")
                                                                                                        (("2"
                                                                                                          (skolem
                                                                                                           -
                                                                                                           "tw")
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "tv"
                                                                                                               "tw")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (case
                                                                                                                   "NOT v = segstart1+tv*v_1")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -3
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "v_1"
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (grind)
                                                                                                                          nil)))))))
                                                                                                                   ("2"
                                                                                                                    (case
                                                                                                                     "NOT w = segstart2+tw*w_1")
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -7
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "w_1"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (hide-all-but
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (grind)
                                                                                                                            nil)))))))
                                                                                                                     ("2"
                                                                                                                      (copy
                                                                                                                       -9)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -3
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -2
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "a"
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "b"
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "c"
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "d"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "ee"
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "f"
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "s_1"
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (hide-all-but
                                                                                                                                           (-1
                                                                                                                                            1))
                                                                                                                                          (("2"
                                                                                                                                            (grind)
                                                                                                                                            nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
       ("2" (flatten)
        (("2" (expand "segments_2D_close" :assert? none)
          (("2" (skoletin -)
            (("2" (skoletin -)
              (("2" (skoletin -)
                (("2" (skoletin -)
                  (("2" (skoletin -)
                    (("2" (skoletin -)
                      (("2" (skoletin -)
                        (("2" (skoletin -)
                          (("2" (skoletin -)
                            (("2" (skoletin -)
                              (("2"
                                (hide
                                 (-2 -3 -4 -5 -6 -7 -8 -9 -10 -11))
                                (("2"
                                  (lemma "near_edge_def")
                                  (("2"
                                    (split -)
                                    (("1" (propax) nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (hide (1 2))
                                        (("2"
                                          (split -)
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (inst
                                                   +
                                                   "w"
                                                   "segstart1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "on_segment_2D?")
                                                      (("1"
                                                        (inst + "0")
                                                        (("1"
                                                          (hide -)
                                                          (("1"
                                                            (assert)
                                                            nil)))))))))))))))))
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (split -)
                                              (("1"
                                                (hide 1)
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (inst
                                                         +
                                                         "w"
                                                         "segend1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "on_segment_2D?")
                                                            (("1"
                                                              (inst
                                                               +
                                                               "1")
                                                              (("1"
                                                                (assert)
                                                                nil)))))))))))))))))
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (split -)
                                                  (("1"
                                                    (hide (1 2))
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (inst
                                                             +
                                                             "segstart2"
                                                             "w")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split)
                                                                (("1"
                                                                  (expand
                                                                   "on_segment_2D?"
                                                                   +)
                                                                  (("1"
                                                                    (inst
                                                                     +
                                                                     "0")
                                                                    (("1"
                                                                      (assert)
                                                                      nil)))))
                                                                 ("2"
                                                                  (hide
                                                                   (-1
                                                                    -2))
                                                                  (("2"
                                                                    (grind)
                                                                    nil)))))))))))))))))
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (split -)
                                                      (("1"
                                                        (hide (1 2 3))
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (skeep)
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "segend2"
                                                                 "w")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split)
                                                                    (("1"
                                                                      (expand
                                                                       "on_segment_2D?")
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "1")
                                                                        (("1"
                                                                          (assert)
                                                                          nil)))))
                                                                     ("2"
                                                                      (hide
                                                                       (-1
                                                                        -2))
                                                                      (("2"
                                                                        (grind)
                                                                        nil)))))))))))))))))
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (split -)
                                                          (("1"
                                                            (propax)
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (skoletin)
                                                              (("2"
                                                                (skoletin)
                                                                (("2"
                                                                  (skoletin)
                                                                  (("2"
                                                                    (skoletin)
                                                                    (("2"
                                                                      (skoletin)
                                                                      (("2"
                                                                        (skoletin)
                                                                        (("2"
                                                                          (skoletin)
                                                                          (("2"
                                                                            (skoletin)
                                                                            (("2"
                                                                              (skoletin)
                                                                              (("2"
                                                                                (lemma
                                                                                 "quad_min_unit_box_def_lt")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "sq(BUFF)"
                                                                                   "a"
                                                                                   "b"
                                                                                   "c"
                                                                                   "d"
                                                                                   "ee"
                                                                                   "f")
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "quad_min_unit_box_def_eq")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "sq(BUFF)"
                                                                                       "a"
                                                                                       "b"
                                                                                       "c"
                                                                                       "d"
                                                                                       "ee"
                                                                                       "f")
                                                                                      (("2"
                                                                                        (case
                                                                                         "NOT ((rev_disc(a, b, c) = 0 AND 2 * ee * a = c * d) OR rev_disc(a, b, c) < 0)")
                                                                                        (("1"
                                                                                          (hide
                                                                                           (-1
                                                                                            -2))
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (case
                                                                                               "rev_disc(a,b,c)=0")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "rev_0_global_min")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "s_1"
                                                                                                     "v_1"
                                                                                                     "w_1")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "rev_disc"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil)))))))))))
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "rev_disc(a,b,c)<=0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     (2
                                                                                                      3))
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "rev_disc"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "a"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "b"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "c"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "sq_times")
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "sq_neg")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "sq"
                                                                                                                   1
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "vectors_2D.cauchy_schwarz")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "v_1"
                                                                                                                       "w_1")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil)))))))))))))))))))))))))))))))
                                                                                         ("2"
                                                                                          (case
                                                                                           "NOT (EXISTS (x, y:real):
                                                                                 0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                                             AND quad(a, b, c, d, ee, f)(x, y) < sq(BUFF))")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             (-2
                                                                                              -3
                                                                                              -4))
                                                                                            (("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (name
                                                                                                 "ww"
                                                                                                 "segstart2+y*(segend2-segstart2)")
                                                                                                (("2"
                                                                                                  (name
                                                                                                   "vv"
                                                                                                   "segstart1+x*(segend1-segstart1)")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     +
                                                                                                     "ww"
                                                                                                     "vv")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (split
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "on_segment_2D?")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "x")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (replaces
                                                                                                                 -1
                                                                                                                 1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil)))))))))))
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "on_segment_2D?")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "y")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (replaces
                                                                                                                 -2
                                                                                                                 1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    nil)))))))))))
                                                                                                         ("3"
                                                                                                          (assert)
                                                                                                          (("3"
                                                                                                            (copy
                                                                                                             -7)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "a"
                                                                                                               -1)
                                                                                                              (("3"
                                                                                                                (expand
                                                                                                                 "b"
                                                                                                                 -1)
                                                                                                                (("3"
                                                                                                                  (expand
                                                                                                                   "c"
                                                                                                                   -1)
                                                                                                                  (("3"
                                                                                                                    (expand
                                                                                                                     "d"
                                                                                                                     -1)
                                                                                                                    (("3"
                                                                                                                      (expand
                                                                                                                       "ee"
                                                                                                                       -1)
                                                                                                                      (("3"
                                                                                                                        (expand
                                                                                                                         "f"
                                                                                                                         -1)
                                                                                                                        (("3"
                                                                                                                          (expand
                                                                                                                           "s_1"
                                                                                                                           -1)
                                                                                                                          (("3"
                                                                                                                            (replaces
                                                                                                                             -2
                                                                                                                             1
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("3"
                                                                                                                              (replaces
                                                                                                                               -2
                                                                                                                               1
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("3"
                                                                                                                                (expand
                                                                                                                                 "v_1"
                                                                                                                                 -1)
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "w_1"
                                                                                                                                   -1)
                                                                                                                                  (("3"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-1
                                                                                                                                      1))
                                                                                                                                    (("3"
                                                                                                                                      (grind)
                                                                                                                                      nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil)
  (segments_2D_close_def-7 nil 3794652613
   ("" (skeep)
    (("" (split)
      (("1" (flatten)
        (("1" (expand "segments_2D_close" :assert? none)
          (("1" (skoletin 1)
            (("1" (skoletin 1)
              (("1" (skoletin 1)
                (("1" (skoletin 1)
                  (("1" (skoletin 1)
                    (("1" (skoletin 1)
                      (("1" (skoletin 1)
                        (("1" (skoletin 1)
                          (("1"
                            (name-replace "segXApart"
                             "(abs(segStartXDiff) > 2 * BUFF)
             AND (abs(segStartEndXDiff) > 2 * BUFF)
             AND (abs(segEndXDiff) > 2 * BUFF)
             AND (abs(segEndStartXDiff) > 2 * BUFF)
             AND (sign(segStartXDiff) = sign(segStartEndXDiff))
             AND (sign(segEndXDiff) = sign(segEndStartXDiff))
             AND (sign(segStartXDiff) = sign(segEndXDiff))")
                            (("1"
                              (name-replace "segYApart"
                               "(abs(segStartYDiff) > 2 * BUFF)
             AND (abs(segStartEndYDiff) > 2 * BUFF)
             AND (abs(segEndYDiff) > 2 * BUFF)
             AND (abs(segEndStartYDiff) > 2 * BUFF)
             AND (sign(segStartYDiff) = sign(segStartEndYDiff))
             AND (sign(segEndYDiff) = sign(segEndStartYDiff))
             AND (sign(segStartYDiff) = sign(segEndYDiff))")
                              (("1"
                                (split +)
                                (("1"
                                  (case
                                   "FORALL (w,v:Vect2): sqv(w-v)<sq(BUFF) IMPLIES (abs(w`x-v`x)<BUFF AND abs(w`y-v`y)<BUFF)")
                                  (("1"
                                    (skeep -)
                                    (("1"
                                      (insteep -)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (case
                                             "NOT (on_segment_2D?(segstart1, segend1, v)
              AND on_segment_2D?(segstart2, segend2, w))")
                                            (("1" (assert) nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (expand
                                                 "on_segment_2D?"
                                                 (-1 -2))
                                                (("2"
                                                  (skolem - "tv")
                                                  (("2"
                                                    (skolem - "tw")
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (case
                                                         "FORALL (a,b,c,d,t1,t2:real): 0<=t1 AND t1<=1 AND 0<=t2 AND t2<=1 AND c-a>2*BUFF AND c-b>2*BUFF AND d-a>2*BUFF AND d-b>2*BUFF IMPLIES ((1-t2)*c+t2*d)-((1-t1)*a+t1*b)>2*BUFF")
                                                        (("1"
                                                          (replaces -4)
                                                          (("1"
                                                            (replaces
                                                             -6)
                                                            (("1"
                                                              (rewrite
                                                               "vx_distr_add")
                                                              (("1"
                                                                (rewrite
                                                                 "vx_distr_add")
                                                                (("1"
                                                                  (rewrite
                                                                   "vx_scal")
                                                                  (("1"
                                                                    (rewrite
                                                                     "vx_scal")
                                                                    (("1"
                                                                      (rewrite
                                                                       "vx_scal")
                                                                      (("1"
                                                                        (rewrite
                                                                         "vx_scal")
                                                                        (("1"
                                                                          (rewrite
                                                                           "vy_distr_add")
                                                                          (("1"
                                                                            (rewrite
                                                                             "vy_distr_add")
                                                                            (("1"
                                                                              (rewrite
                                                                               "vy_scal")
                                                                              (("1"
                                                                                (rewrite
                                                                                 "vy_scal")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "vy_scal")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vy_scal")
                                                                                    (("1"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -8)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "abs"
                                                                                             -8)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "sign"
                                                                                               -8)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (lift-if)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (lift-if)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (ground)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "segstart1`x"
                                                                                                                 "segend1`x"
                                                                                                                 "segstart2`x"
                                                                                                                 "segend2`x"
                                                                                                                 "tv"
                                                                                                                 "tw")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil)))
                                                                                                               ("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "segstart2`x"
                                                                                                                 "segend2`x"
                                                                                                                 "segstart1`x"
                                                                                                                 "segend1`x"
                                                                                                                 "tw"
                                                                                                                 "tv")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))))))))))))))))
                                                                                       ("2"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -9)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "abs"
                                                                                             -8)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "sign"
                                                                                               -8)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (lift-if)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "segstart1`y"
                                                                                                               "segend1`y"
                                                                                                               "segstart2`y"
                                                                                                               "segend2`y"
                                                                                                               "tv"
                                                                                                               "tw")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil)))
                                                                                                             ("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "segstart2`y"
                                                                                                               "segend2`y"
                                                                                                               "segstart1`y"
                                                                                                               "segend1`y"
                                                                                                               "tw"
                                                                                                               "tv")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                         ("2"
                                                          (hide -)
                                                          (("2"
                                                            (skeep*)
                                                            (("2"
                                                              (case
                                                               "FORALL (cc,dd,tt:real): 0<=tt AND tt<=1 IMPLIES (1-tt)*cc+tt*dd>=min(cc,dd)")
                                                              (("1"
                                                                (inst-cp
                                                                 -
                                                                 "c"
                                                                 "d"
                                                                 "t2")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "-a"
                                                                   "-b"
                                                                   "t1")
                                                                  (("1"
                                                                    (grind)
                                                                    nil)))))
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (skeep*)
                                                                  (("2"
                                                                    (expand
                                                                     "min")
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (ground)
                                                                        (("1"
                                                                          (mult-by
                                                                           -1
                                                                           "1-tt")
                                                                          (("1"
                                                                            (grind)
                                                                            nil)))
                                                                         ("2"
                                                                          (mult-by
                                                                           1
                                                                           "tt")
                                                                          (("2"
                                                                            (grind)
                                                                            nil)))))))))))))))))))))))))))))))))))))))))
                                   ("2"
                                    (hide -)
                                    (("2"
                                      (skeep*)
                                      (("2"
                                        (rewrite
                                         "vx_distr_sub"
                                         :dir
                                         rl)
                                        (("2"
                                          (rewrite
                                           "vy_distr_sub"
                                           :dir
                                           rl)
                                          (("2"
                                            (name "vvv" "w-v")
                                            (("2"
                                              (replaces -1)
                                              (("2"
                                                (split)
                                                (("1"
                                                  (rewrite
                                                   "sq_lt"
                                                   1
                                                   :dir
                                                   rl)
                                                  (("1" (grind) nil)))
                                                 ("2"
                                                  (rewrite
                                                   "sq_lt"
                                                   1
                                                   :dir
                                                   rl)
                                                  (("2"
                                                    (grind)
                                                    nil)))))))))))))))))))
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (hide
                                     (-1
                                      -2
                                      -3
                                      -4
                                      -5
                                      -6
                                      -7
                                      -8
                                      -9
                                      -10
                                      1
                                      2))
                                    (("2"
                                      (split +)
                                      (("1" (propax) nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (split +)
                                          (("1" (propax) nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (split +)
                                              (("1" (propax) nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (split +)
                                                  (("1" (propax) nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (split +)
                                                      (("1"
                                                        (split)
                                                        (("1"
                                                          (lemma
                                                           "vectors_2D.sqv_eq_0")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (rewrite
                                                                 "sub_eq_zero")
                                                                (("1"
                                                                  (replace
                                                                   -1
                                                                   :dir
                                                                   rl)
                                                                  (("1"
                                                                    (skeep)
                                                                    (("1"
                                                                      (case
                                                                       "v = segend1")
                                                                      (("1"
                                                                        (hide
                                                                         (1
                                                                          2
                                                                          4))
                                                                        (("1"
                                                                          (lemma
                                                                           "near_edge_def")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (inst
                                                                                 +
                                                                                 "w")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil)))))))))))
                                                                       ("2"
                                                                        (replace
                                                                         -1)
                                                                        (("2"
                                                                          (expand
                                                                           "on_segment_2D?"
                                                                           -3)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (replaces
                                                                               -5)
                                                                              (("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (decompose-equality)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil)
                                                                                   ("2"
                                                                                    (grind)
                                                                                    nil)))))))))))))))))))))))))))
                                                         ("2"
                                                          (lemma
                                                           "vectors_2D.sqv_eq_0")
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (rewrite
                                                                 "sub_eq_zero")
                                                                (("2"
                                                                  (replace
                                                                   -1
                                                                   :dir
                                                                   rl)
                                                                  (("2"
                                                                    (skeep)
                                                                    (("2"
                                                                      (case
                                                                       "w = segend2")
                                                                      (("1"
                                                                        (hide
                                                                         (2
                                                                          3
                                                                          4))
                                                                        (("1"
                                                                          (lemma
                                                                           "near_edge_def")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (inst
                                                                                 +
                                                                                 "v")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (case
                                                                                     "sqv(v-segend2)=sqv(segend2-v)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil)))))))))))))))))
                                                                       ("2"
                                                                        (expand
                                                                         "on_segment_2D?"
                                                                         -4)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (replaces
                                                                             -6
                                                                             1)
                                                                            (("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (decompose-equality)
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil)
                                                                                 ("2"
                                                                                  (grind)
                                                                                  nil)))))))))))))))))))))))))))
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (skoletin)
                                                          (("2"
                                                            (skoletin)
                                                            (("2"
                                                              (skoletin)
                                                              (("2"
                                                                (skoletin)
                                                                (("2"
                                                                  (skoletin)
                                                                  (("2"
                                                                    (skoletin)
                                                                    (("2"
                                                                      (skoletin)
                                                                      (("2"
                                                                        (skoletin)
                                                                        (("2"
                                                                          (skoletin)
                                                                          (("2"
                                                                            (lemma
                                                                             "quad_min_unit_box_def_lt")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "sq(BUFF)"
                                                                               "a"
                                                                               "b"
                                                                               "c"
                                                                               "d"
                                                                               "ee"
                                                                               "f")
                                                                              (("2"
                                                                                (lemma
                                                                                 "quad_min_unit_box_def_eq")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "sq(BUFF)"
                                                                                   "a"
                                                                                   "b"
                                                                                   "c"
                                                                                   "d"
                                                                                   "ee"
                                                                                   "f")
                                                                                  (("2"
                                                                                    (case
                                                                                     "NOT ((rev_disc(a, b, c) = 0 AND 2 * ee * a = c * d) OR rev_disc(a, b, c) < 0)")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (hide
                                                                                         (-1
                                                                                          -2))
                                                                                        (("1"
                                                                                          (case
                                                                                           "rev_disc(a,b,c)=0")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "rev_0_global_min")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "s_1"
                                                                                                 "v_1"
                                                                                                 "w_1")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "rev_disc"
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil)))))))))))
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (case
                                                                                               "rev_disc(a,b,c)<=0")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 (2
                                                                                                  3))
                                                                                                (("2"
                                                                                                  (replaces
                                                                                                   -4
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (replaces
                                                                                                     -4
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (replaces
                                                                                                       -4
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "rev_disc"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "sq_times")
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "sq_neg")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "sq"
                                                                                                               1
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "vectors_2D.cauchy_schwarz")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "v_1"
                                                                                                                   "w_1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil)))))))))))))))))))))))))))))))
                                                                                     ("2"
                                                                                      (replace
                                                                                       1)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (case
                                                                                           "(EXISTS (x, y:real):
                                                                                                                                                                0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                                                                                                                            AND quad(a, b, c, d, ee, f)(x, y) < sq(BUFF))")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             (-1
                                                                                              -2
                                                                                              -3))
                                                                                            (("2"
                                                                                              (copy
                                                                                               -10)
                                                                                              (("2"
                                                                                                (skeep
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "on_segment_2D?"
                                                                                                   (-1
                                                                                                    -2))
                                                                                                  (("2"
                                                                                                    (skolem
                                                                                                     -
                                                                                                     "tv")
                                                                                                    (("2"
                                                                                                      (skolem
                                                                                                       -
                                                                                                       "tw")
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           +
                                                                                                           "tv"
                                                                                                           "tw")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (case
                                                                                                               "NOT v = segstart1+tv*v_1")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -3
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "v_1"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (grind)
                                                                                                                      nil)))))))
                                                                                                               ("2"
                                                                                                                (case
                                                                                                                 "NOT w = segstart2+tw*w_1")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -7
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "w_1"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (hide-all-but
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil)))))))
                                                                                                                 ("2"
                                                                                                                  (copy
                                                                                                                   -9)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -3
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -2
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "a"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "b"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "c"
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "d"
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "ee"
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "f"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "s_1"
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-1
                                                                                                                                        1))
                                                                                                                                      (("2"
                                                                                                                                        (grind)
                                                                                                                                        nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
       ("2" (flatten)
        (("2" (expand "segments_2D_close" :assert? none)
          (("2" (skoletin -)
            (("2" (skoletin -)
              (("2" (skoletin -)
                (("2" (skoletin -)
                  (("2" (skoletin -)
                    (("2" (skoletin -)
                      (("2" (skoletin -)
                        (("2" (skoletin -)
                          (("2" (skoletin -)
                            (("2" (skoletin -)
                              (("2"
                                (hide
                                 (-2 -3 -4 -5 -6 -7 -8 -9 -10 -11))
                                (("2"
                                  (lemma "near_edge_def")
                                  (("2"
                                    (split -)
                                    (("1" (propax) nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (hide (1 2))
                                        (("2"
                                          (split -)
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (inst
                                                   +
                                                   "w"
                                                   "segstart1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "on_segment_2D?")
                                                      (("1"
                                                        (inst + "0")
                                                        (("1"
                                                          (hide -)
                                                          (("1"
                                                            (assert)
                                                            nil)))))))))))))))))
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (split -)
                                              (("1"
                                                (hide 1)
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (inst
                                                         +
                                                         "w"
                                                         "segend1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "on_segment_2D?")
                                                            (("1"
                                                              (inst
                                                               +
                                                               "1")
                                                              (("1"
                                                                (assert)
                                                                nil)))))))))))))))))
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (split -)
                                                  (("1"
                                                    (hide (1 2))
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (inst
                                                             +
                                                             "segstart2"
                                                             "w")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split)
                                                                (("1"
                                                                  (expand
                                                                   "on_segment_2D?"
                                                                   +)
                                                                  (("1"
                                                                    (inst
                                                                     +
                                                                     "0")
                                                                    (("1"
                                                                      (assert)
                                                                      nil)))))
                                                                 ("2"
                                                                  (hide
                                                                   (-1
                                                                    -2))
                                                                  (("2"
                                                                    (grind)
                                                                    nil)))))))))))))))))
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (split -)
                                                      (("1"
                                                        (hide (1 2 3))
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (skeep)
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "segend2"
                                                                 "w")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split)
                                                                    (("1"
                                                                      (expand
                                                                       "on_segment_2D?")
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "1")
                                                                        (("1"
                                                                          (assert)
                                                                          nil)))))
                                                                     ("2"
                                                                      (hide
                                                                       (-1
                                                                        -2))
                                                                      (("2"
                                                                        (grind)
                                                                        nil)))))))))))))))))
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (split -)
                                                          (("1"
                                                            (propax)
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (skoletin)
                                                              (("2"
                                                                (skoletin)
                                                                (("2"
                                                                  (skoletin)
                                                                  (("2"
                                                                    (skoletin)
                                                                    (("2"
                                                                      (skoletin)
                                                                      (("2"
                                                                        (skoletin)
                                                                        (("2"
                                                                          (skoletin)
                                                                          (("2"
                                                                            (skoletin)
                                                                            (("2"
                                                                              (skoletin)
                                                                              (("2"
                                                                                (lemma
                                                                                 "quad_min_unit_box_def_lt")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "sq(BUFF)"
                                                                                   "a"
                                                                                   "b"
                                                                                   "c"
                                                                                   "d"
                                                                                   "ee"
                                                                                   "f")
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "quad_min_unit_box_def_eq")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "sq(BUFF)"
                                                                                       "a"
                                                                                       "b"
                                                                                       "c"
                                                                                       "d"
                                                                                       "ee"
                                                                                       "f")
                                                                                      (("2"
                                                                                        (case
                                                                                         "NOT ((rev_disc(a, b, c) = 0 AND 2 * ee * a = c * d) OR rev_disc(a, b, c) < 0)")
                                                                                        (("1"
                                                                                          (hide
                                                                                           (-1
                                                                                            -2))
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (case
                                                                                               "rev_disc(a,b,c)=0")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "rev_0_global_min")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "s_1"
                                                                                                     "v_1"
                                                                                                     "w_1")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "rev_disc"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil)))))))))))
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "rev_disc(a,b,c)<=0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     (2
                                                                                                      3))
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "rev_disc"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "a"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "b"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "c"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "sq_times")
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "sq_neg")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "sq"
                                                                                                                   1
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "vectors_2D.cauchy_schwarz")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "v_1"
                                                                                                                       "w_1")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil)))))))))))))))))))))))))))))))
                                                                                         ("2"
                                                                                          (case
                                                                                           "NOT (EXISTS (x, y:real):
                                                                                 0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                                             AND quad(a, b, c, d, ee, f)(x, y) < sq(BUFF))")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             (-2
                                                                                              -3
                                                                                              -4))
                                                                                            (("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (name
                                                                                                 "ww"
                                                                                                 "segstart2+y*(segend2-segstart2)")
                                                                                                (("2"
                                                                                                  (name
                                                                                                   "vv"
                                                                                                   "segstart1+x*(segend1-segstart1)")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     +
                                                                                                     "ww"
                                                                                                     "vv")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (split
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "on_segment_2D?")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "x")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (replaces
                                                                                                                 -1
                                                                                                                 1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil)))))))))))
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "on_segment_2D?")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "y")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (replaces
                                                                                                                 -2
                                                                                                                 1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    nil)))))))))))
                                                                                                         ("3"
                                                                                                          (assert)
                                                                                                          (("3"
                                                                                                            (copy
                                                                                                             -7)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "a"
                                                                                                               -1)
                                                                                                              (("3"
                                                                                                                (expand
                                                                                                                 "b"
                                                                                                                 -1)
                                                                                                                (("3"
                                                                                                                  (expand
                                                                                                                   "c"
                                                                                                                   -1)
                                                                                                                  (("3"
                                                                                                                    (expand
                                                                                                                     "d"
                                                                                                                     -1)
                                                                                                                    (("3"
                                                                                                                      (expand
                                                                                                                       "ee"
                                                                                                                       -1)
                                                                                                                      (("3"
                                                                                                                        (expand
                                                                                                                         "f"
                                                                                                                         -1)
                                                                                                                        (("3"
                                                                                                                          (expand
                                                                                                                           "s_1"
                                                                                                                           -1)
                                                                                                                          (("3"
                                                                                                                            (replaces
                                                                                                                             -2
                                                                                                                             1
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("3"
                                                                                                                              (replaces
                                                                                                                               -2
                                                                                                                               1
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("3"
                                                                                                                                (expand
                                                                                                                                 "v_1"
                                                                                                                                 -1)
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "w_1"
                                                                                                                                   -1)
                                                                                                                                  (("3"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-1
                                                                                                                                      1))
                                                                                                                                    (("3"
                                                                                                                                      (grind)
                                                                                                                                      nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil)
  (segments_2D_close_def-6 nil 3649065754
   ("" (skeep)
    (("" (split)
      (("1" (flatten)
        (("1" (expand "segments_2D_close" :assert? none)
          (("1" (skoletin 1)
            (("1" (skoletin 1)
              (("1" (skoletin 1)
                (("1" (skoletin 1)
                  (("1" (skoletin 1)
                    (("1" (skoletin 1)
                      (("1" (skoletin 1)
                        (("1" (skoletin 1)
                          (("1" (skoletin 1)
                            (("1" (skoletin 1)
                              (("1"
                                (split +)
                                (("1"
                                  (case
                                   "FORALL (w,v:Vect2): sqv(w-v)<sq(BUFF) IMPLIES (abs(w`x-v`x)<BUFF AND abs(w`y-v`y)<BUFF)")
                                  (("1"
                                    (skeep -)
                                    (("1"
                                      (insteep -)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (case
                                             "NOT (on_segment_2D?(segstart1, segend1, v)
AND on_segment_2D?(segstart2, segend2, w))")
                                            (("1" (assert) nil nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (expand
                                                 "on_segment_2D?"
                                                 (-1 -2))
                                                (("2"
                                                  (skolem - "tv")
                                                  (("2"
                                                    (skolem - "tw")
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (case
                                                         "FORALL (a,b,c,d,t1,t2:real): 0<=t1 AND t1<=1 AND 0<=t2 AND t2<=1 AND c-a>2*BUFF AND c-b>2*BUFF AND d-a>2*BUFF AND d-b>2*BUFF IMPLIES ((1-t2)*c+t2*d)-((1-t1)*a+t1*b)>2*BUFF")
                                                        (("1"
                                                          (replaces -4)
                                                          (("1"
                                                            (replaces
                                                             -6)
                                                            (("1"
                                                              (rewrite
                                                               "vx_distr_add")
                                                              (("1"
                                                                (rewrite
                                                                 "vx_distr_add")
                                                                (("1"
                                                                  (rewrite
                                                                   "vx_scal")
                                                                  (("1"
                                                                    (rewrite
                                                                     "vx_scal")
                                                                    (("1"
                                                                      (rewrite
                                                                       "vx_scal")
                                                                      (("1"
                                                                        (rewrite
                                                                         "vx_scal")
                                                                        (("1"
                                                                          (rewrite
                                                                           "vy_distr_add")
                                                                          (("1"
                                                                            (rewrite
                                                                             "vy_distr_add")
                                                                            (("1"
                                                                              (rewrite
                                                                               "vy_scal")
                                                                              (("1"
                                                                                (rewrite
                                                                                 "vy_scal")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "vy_scal")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vy_scal")
                                                                                    (("1"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -8)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "abs"
                                                                                             -8)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "sign"
                                                                                               -8)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (lift-if)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (lift-if)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (ground)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "segstart1`x"
                                                                                                                 "segend1`x"
                                                                                                                 "segstart2`x"
                                                                                                                 "segend2`x"
                                                                                                                 "tv"
                                                                                                                 "tw")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "segstart2`x"
                                                                                                                 "segend2`x"
                                                                                                                 "segstart1`x"
                                                                                                                 "segend1`x"
                                                                                                                 "tw"
                                                                                                                 "tv")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -9)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "abs"
                                                                                             -8)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "sign"
                                                                                               -8)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (lift-if)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "segstart1`y"
                                                                                                               "segend1`y"
                                                                                                               "segstart2`y"
                                                                                                               "segend2`y"
                                                                                                               "tv"
                                                                                                               "tw")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "segstart2`y"
                                                                                                               "segend2`y"
                                                                                                               "segstart1`y"
                                                                                                               "segend1`y"
                                                                                                               "tw"
                                                                                                               "tv")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide -)
                                                          (("2"
                                                            (skeep*)
                                                            (("2"
                                                              (case
                                                               "FORALL (cc,dd,tt:real): 0<=tt AND tt<=1 IMPLIES (1-tt)*cc+tt*dd>=min(cc,dd)")
                                                              (("1"
                                                                (inst-cp
                                                                 -
                                                                 "c"
                                                                 "d"
                                                                 "t2")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "-a"
                                                                   "-b"
                                                                   "t1")
                                                                  (("1"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (skeep*)
                                                                  (("2"
                                                                    (expand
                                                                     "min")
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (ground)
                                                                        (("1"
                                                                          (mult-by
                                                                           -1
                                                                           "1-tt")
                                                                          (("1"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (mult-by
                                                                           1
                                                                           "tt")
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide -)
                                    (("2"
                                      (skeep*)
                                      (("2"
                                        (rewrite
                                         "vx_distr_sub"
                                         :dir
                                         rl)
                                        (("2"
                                          (rewrite
                                           "vy_distr_sub"
                                           :dir
                                           rl)
                                          (("2"
                                            (name "vvv" "w-v")
                                            (("2"
                                              (replaces -1)
                                              (("2"
                                                (split)
                                                (("1"
                                                  (rewrite
                                                   "sq_lt"
                                                   1
                                                   :dir
                                                   rl)
                                                  (("1"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (rewrite
                                                   "sq_lt"
                                                   1
                                                   :dir
                                                   rl)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (hide
                                     (-1
                                      -2
                                      -3
                                      -4
                                      -5
                                      -6
                                      -7
                                      -8
                                      -9
                                      -10
                                      1
                                      2))
                                    (("2"
                                      (split +)
                                      (("1" (propax) nil nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (split +)
                                          (("1" (propax) nil nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (split +)
                                              (("1" (propax) nil nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (split +)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (split +)
                                                      (("1"
                                                        (split)
                                                        (("1"
                                                          (lemma
                                                           "vectors_2D.sqv_eq_0")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (rewrite
                                                                 "sub_eq_zero")
                                                                (("1"
                                                                  (replace
                                                                   -1
                                                                   :dir
                                                                   rl)
                                                                  (("1"
                                                                    (skeep)
                                                                    (("1"
                                                                      (case
                                                                       "v = segend1")
                                                                      (("1"
                                                                        (hide
                                                                         (1
                                                                          2
                                                                          4))
                                                                        (("1"
                                                                          (lemma
                                                                           "near_edge_def")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (inst
                                                                                 +
                                                                                 "w")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (replace
                                                                         -1)
                                                                        (("2"
                                                                          (expand
                                                                           "on_segment_2D?"
                                                                           -3)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (replaces
                                                                               -5)
                                                                              (("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (decompose-equality)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (lemma
                                                           "vectors_2D.sqv_eq_0")
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (rewrite
                                                                 "sub_eq_zero")
                                                                (("2"
                                                                  (replace
                                                                   -1
                                                                   :dir
                                                                   rl)
                                                                  (("2"
                                                                    (skeep)
                                                                    (("2"
                                                                      (case
                                                                       "w = segend2")
                                                                      (("1"
                                                                        (hide
                                                                         (2
                                                                          3
                                                                          4))
                                                                        (("1"
                                                                          (lemma
                                                                           "near_edge_def")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (inst
                                                                                 +
                                                                                 "v")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (case
                                                                                     "sqv(v-segend2)=sqv(segend2-v)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "on_segment_2D?"
                                                                         -4)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (replaces
                                                                             -6
                                                                             1)
                                                                            (("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (decompose-equality)
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (skoletin)
                                                          (("2"
                                                            (skoletin)
                                                            (("2"
                                                              (skoletin)
                                                              (("2"
                                                                (skoletin)
                                                                (("2"
                                                                  (skoletin)
                                                                  (("2"
                                                                    (skoletin)
                                                                    (("2"
                                                                      (skoletin)
                                                                      (("2"
                                                                        (skoletin)
                                                                        (("2"
                                                                          (skoletin)
                                                                          (("2"
                                                                            (lemma
                                                                             "quad_min_unit_box_def_lt")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "sq(BUFF)"
                                                                               "a"
                                                                               "b"
                                                                               "c"
                                                                               "d"
                                                                               "ee"
                                                                               "f")
                                                                              (("2"
                                                                                (lemma
                                                                                 "quad_min_unit_box_def_eq")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "sq(BUFF)"
                                                                                   "a"
                                                                                   "b"
                                                                                   "c"
                                                                                   "d"
                                                                                   "ee"
                                                                                   "f")
                                                                                  (("2"
                                                                                    (case
                                                                                     "NOT ((rev_disc(a, b, c) = 0 AND 2 * ee * a = c * d) OR rev_disc(a, b, c) < 0)")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (hide
                                                                                         (-1
                                                                                          -2))
                                                                                        (("1"
                                                                                          (case
                                                                                           "rev_disc(a,b,c)=0")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "rev_0_global_min")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "s_1"
                                                                                                 "v_1"
                                                                                                 "w_1")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "rev_disc"
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (case
                                                                                               "rev_disc(a,b,c)<=0")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 (2
                                                                                                  3))
                                                                                                (("2"
                                                                                                  (replaces
                                                                                                   -4
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (replaces
                                                                                                     -4
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (replaces
                                                                                                       -4
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "rev_disc"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "sq_times")
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "sq_neg")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "sq"
                                                                                                               1
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "vectors_2D.cauchy_schwarz")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "v_1"
                                                                                                                   "w_1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       1)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (case
                                                                                           "(EXISTS (x, y:real):
                                                                                                                                         0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                                                                                                     AND quad(a, b, c, d, ee, f)(x, y) < sq(BUFF))")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             (-1
                                                                                              -2
                                                                                              -3))
                                                                                            (("2"
                                                                                              (copy
                                                                                               -10)
                                                                                              (("2"
                                                                                                (skeep
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "on_segment_2D?"
                                                                                                   (-1
                                                                                                    -2))
                                                                                                  (("2"
                                                                                                    (skolem
                                                                                                     -
                                                                                                     "tv")
                                                                                                    (("2"
                                                                                                      (skolem
                                                                                                       -
                                                                                                       "tw")
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           +
                                                                                                           "tv"
                                                                                                           "tw")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (case
                                                                                                               "NOT v = segstart1+tv*v_1")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -3
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "v_1"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (case
                                                                                                                 "NOT w = segstart2+tw*w_1")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -7
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "w_1"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (hide-all-but
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (copy
                                                                                                                   -9)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -3
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -2
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "a"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "b"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "c"
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "d"
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "ee"
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "f"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "s_1"
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-1
                                                                                                                                        1))
                                                                                                                                      (("2"
                                                                                                                                        (grind)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (flatten)
        (("2" (expand "segments_2D_close" :assert? none)
          (("2" (skoletin -)
            (("2" (skoletin -)
              (("2" (skoletin -)
                (("2" (skoletin -)
                  (("2" (skoletin -)
                    (("2" (skoletin -)
                      (("2" (skoletin -)
                        (("2" (skoletin -)
                          (("2" (skoletin -)
                            (("2" (skoletin -)
                              (("2"
                                (hide
                                 (-2 -3 -4 -5 -6 -7 -8 -9 -10 -11))
                                (("2"
                                  (lemma "near_edge_def")
                                  (("2"
                                    (split -)
                                    (("1" (propax) nil nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (hide (1 2))
                                        (("2"
                                          (split -)
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (inst
                                                   +
                                                   "w"
                                                   "segstart1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "on_segment_2D?")
                                                      (("1"
                                                        (inst + "0")
                                                        (("1"
                                                          (hide -)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (split -)
                                              (("1"
                                                (hide 1)
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (inst
                                                         +
                                                         "w"
                                                         "segend1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "on_segment_2D?")
                                                            (("1"
                                                              (inst
                                                               +
                                                               "1")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (split -)
                                                  (("1"
                                                    (hide (1 2))
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (inst
                                                             +
                                                             "segstart2"
                                                             "w")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split)
                                                                (("1"
                                                                  (expand
                                                                   "on_segment_2D?"
                                                                   +)
                                                                  (("1"
                                                                    (inst
                                                                     +
                                                                     "0")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   (-1
                                                                    -2))
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (split -)
                                                      (("1"
                                                        (hide (1 2 3))
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (skeep)
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "segend2"
                                                                 "w")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split)
                                                                    (("1"
                                                                      (expand
                                                                       "on_segment_2D?")
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "1")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       (-1
                                                                        -2))
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (split -)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (skoletin)
                                                              (("2"
                                                                (skoletin)
                                                                (("2"
                                                                  (skoletin)
                                                                  (("2"
                                                                    (skoletin)
                                                                    (("2"
                                                                      (skoletin)
                                                                      (("2"
                                                                        (skoletin)
                                                                        (("2"
                                                                          (skoletin)
                                                                          (("2"
                                                                            (skoletin)
                                                                            (("2"
                                                                              (skoletin)
                                                                              (("2"
                                                                                (lemma
                                                                                 "quad_min_unit_box_def_lt")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "sq(BUFF)"
                                                                                   "a"
                                                                                   "b"
                                                                                   "c"
                                                                                   "d"
                                                                                   "ee"
                                                                                   "f")
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "quad_min_unit_box_def_eq")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "sq(BUFF)"
                                                                                       "a"
                                                                                       "b"
                                                                                       "c"
                                                                                       "d"
                                                                                       "ee"
                                                                                       "f")
                                                                                      (("2"
                                                                                        (case
                                                                                         "NOT ((rev_disc(a, b, c) = 0 AND 2 * ee * a = c * d) OR rev_disc(a, b, c) < 0)")
                                                                                        (("1"
                                                                                          (hide
                                                                                           (-1
                                                                                            -2))
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (case
                                                                                               "rev_disc(a,b,c)=0")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "rev_0_global_min")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "s_1"
                                                                                                     "v_1"
                                                                                                     "w_1")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "rev_disc"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "rev_disc(a,b,c)<=0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     (2
                                                                                                      3))
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "rev_disc"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "a"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "b"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "c"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "sq_times")
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "sq_neg")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "sq"
                                                                                                                   1
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "vectors_2D.cauchy_schwarz")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "v_1"
                                                                                                                       "w_1")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "NOT (EXISTS (x, y:real):
                                                          0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                      AND quad(a, b, c, d, ee, f)(x, y) < sq(BUFF))")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             (-2
                                                                                              -3
                                                                                              -4))
                                                                                            (("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (name
                                                                                                 "ww"
                                                                                                 "segstart2+y*(segend2-segstart2)")
                                                                                                (("2"
                                                                                                  (name
                                                                                                   "vv"
                                                                                                   "segstart1+x*(segend1-segstart1)")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     +
                                                                                                     "ww"
                                                                                                     "vv")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (split
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "on_segment_2D?")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "x")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (replaces
                                                                                                                 -1
                                                                                                                 1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "on_segment_2D?")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "y")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (replaces
                                                                                                                 -2
                                                                                                                 1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (assert)
                                                                                                          (("3"
                                                                                                            (copy
                                                                                                             -7)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "a"
                                                                                                               -1)
                                                                                                              (("3"
                                                                                                                (expand
                                                                                                                 "b"
                                                                                                                 -1)
                                                                                                                (("3"
                                                                                                                  (expand
                                                                                                                   "c"
                                                                                                                   -1)
                                                                                                                  (("3"
                                                                                                                    (expand
                                                                                                                     "d"
                                                                                                                     -1)
                                                                                                                    (("3"
                                                                                                                      (expand
                                                                                                                       "ee"
                                                                                                                       -1)
                                                                                                                      (("3"
                                                                                                                        (expand
                                                                                                                         "f"
                                                                                                                         -1)
                                                                                                                        (("3"
                                                                                                                          (expand
                                                                                                                           "s_1"
                                                                                                                           -1)
                                                                                                                          (("3"
                                                                                                                            (replaces
                                                                                                                             -2
                                                                                                                             1
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("3"
                                                                                                                              (replaces
                                                                                                                               -2
                                                                                                                               1
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("3"
                                                                                                                                (expand
                                                                                                                                 "v_1"
                                                                                                                                 -1)
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "w_1"
                                                                                                                                   -1)
                                                                                                                                  (("3"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-1
                                                                                                                                      1))
                                                                                                                                    (("3"
                                                                                                                                      (grind)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((segments_2D_close const-decl "bool" edge_proximity nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (near_edge_def formula-decl nil edge_proximity nil)
    (sub_eq_args formula-decl nil vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (sub_eq_zero formula-decl nil vectors_2D vectors)
    (quad const-decl "real" double_quadratic reals) nil nil nil nil nil
    nil nil nil nil
    (rev_0_global_min formula-decl nil edge_proximity nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sq_times formula-decl nil sq reals)
    (cauchy_schwarz formula-decl nil vectors_2D vectors)
    (sq_neg formula-decl nil sq reals)
    (rev_disc const-decl "real" double_quadratic reals)
    (quad_min_unit_box_def_eq formula-decl nil double_quadratic reals)
    (quad_min_unit_box_def_lt formula-decl nil double_quadratic reals)
    (< const-decl "bool" reals nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (* const-decl "Vector" vectors_2D vectors)
    (vx_distr_add formula-decl nil vectors_2D vectors)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (vx_scal formula-decl nil vectors_2D vectors)
    (vy_distr_add formula-decl nil vectors_2D vectors)
    (vy_scal formula-decl nil vectors_2D vectors)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (<= const-decl "bool" reals nil)
    (on_segment_2D? const-decl "bool" edge_proximity nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (vy_distr_sub formula-decl nil vectors_2D vectors)
    (sq_lt formula-decl nil sq reals)
    (sq_abs formula-decl nil sq reals)
    (vx_distr_sub formula-decl nil vectors_2D vectors)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (sq const-decl "nonneg_real" sq reals)
    (quad_min_unit_box const-decl "bool" double_quadratic reals)
    (FALSE const-decl "bool" booleans nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "real" vectors_2D vectors)
    (near_edge const-decl "bool" edge_proximity nil) nil
    (sqv const-decl "nnreal" vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (sign const-decl "Sign" sign reals)
    (Sign type-eq-decl nil sign reals)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (/= const-decl "boolean" notequal nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil) (> const-decl "bool" reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_0 formula-decl nil vectors_2D vectors)
    (scal_1 formula-decl nil vectors_2D vectors)
    (add_zero_left formula-decl nil vectors_2D vectors) nil nil nil nil
    nil nil nil nil nil)
   nil)
  (segments_2D_close_def-5 nil 3635763454
   ("" (skeep)
    (("" (split)
      (("1" (flatten)
        (("1" (expand "segments_2D_close" :assert? none)
          (("1" (split +)
            (("1" (propax) nil nil)
             ("2" (flatten)
              (("2" (split +)
                (("1" (propax) nil nil)
                 ("2" (flatten)
                  (("2" (split +)
                    (("1" (propax) nil nil)
                     ("2" (flatten)
                      (("2" (split +)
                        (("1" (propax) nil nil)
                         ("2" (flatten)
                          (("2" (split +)
                            (("1" (split)
                              (("1"
                                (lemma "vectors_2D.sqv_eq_0")
                                (("1"
                                  (inst?)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (rewrite "sub_eq_zero")
                                      (("1"
                                        (replace -1 :dir rl)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (case "v = segend1")
                                            (("1"
                                              (hide (1 2 4))
                                              (("1"
                                                (lemma "near_edge_def")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst + "w")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (replace -1)
                                              (("2"
                                                (expand
                                                 "on_segment_2D?"
                                                 -3)
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (replaces -5)
                                                    (("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (decompose-equality)
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (lemma "vectors_2D.sqv_eq_0")
                                (("2"
                                  (inst?)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (rewrite "sub_eq_zero")
                                      (("2"
                                        (replace -1 :dir rl)
                                        (("2"
                                          (skeep)
                                          (("2"
                                            (case "w = segend2")
                                            (("1"
                                              (hide (2 3 4))
                                              (("1"
                                                (lemma "near_edge_def")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst + "v")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (case
                                                           "sqv(v-segend2)=sqv(segend2-v)")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             1)
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand
                                               "on_segment_2D?"
                                               -4)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (replaces -6 1)
                                                  (("2"
                                                    (hide-all-but 1)
                                                    (("2"
                                                      (decompose-equality)
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2"
                                (skoletin)
                                (("2"
                                  (skoletin)
                                  (("2"
                                    (skoletin)
                                    (("2"
                                      (skoletin)
                                      (("2"
                                        (skoletin)
                                        (("2"
                                          (skoletin)
                                          (("2"
                                            (skoletin)
                                            (("2"
                                              (skoletin)
                                              (("2"
                                                (skoletin)
                                                (("2"
                                                  (lemma
                                                   "quad_min_unit_box_def_lt")
                                                  (("2"
                                                    (inst
                                                     -
                                                     "sq(BUFF)"
                                                     "a"
                                                     "b"
                                                     "c"
                                                     "d_1"
                                                     "ee"
                                                     "f")
                                                    (("2"
                                                      (lemma
                                                       "quad_min_unit_box_def_eq")
                                                      (("2"
                                                        (inst
                                                         -
                                                         "sq(BUFF)"
                                                         "a"
                                                         "b"
                                                         "c"
                                                         "d_1"
                                                         "ee"
                                                         "f")
                                                        (("2"
                                                          (case
                                                           "NOT ((rev_disc(a, b, c) = 0 AND 2 * ee * a = c * d_1) OR rev_disc(a, b, c) < 0)")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (hide
                                                               (-1 -2))
                                                              (("1"
                                                                (case
                                                                 "rev_disc(a,b,c)=0")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lemma
                                                                     "rev_0_global_min")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "s_1"
                                                                       "v_1"
                                                                       "w_1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "rev_disc"
                                                                           -1)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   2)
                                                                  (("2"
                                                                    (case
                                                                     "rev_disc(a,b,c)<=0")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       (2
                                                                        3))
                                                                      (("2"
                                                                        (replaces
                                                                         -4
                                                                         1)
                                                                        (("2"
                                                                          (replaces
                                                                           -4
                                                                           1)
                                                                          (("2"
                                                                            (replaces
                                                                             -4
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "rev_disc"
                                                                               1)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "sq_times")
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "sq_neg")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "sq"
                                                                                     1
                                                                                     1)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "vectors_2D.cauchy_schwarz")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "v_1"
                                                                                         "w_1")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (replace 1)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (case
                                                                 "(EXISTS (x, y:real):
                                                                                               0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                                                           AND quad(a, b, c, d_1, ee, f)(x, y) < sq(BUFF))")
                                                                (("1"
                                                                  (ground)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   (-1
                                                                    -2
                                                                    -3))
                                                                  (("2"
                                                                    (copy
                                                                     -10)
                                                                    (("2"
                                                                      (skeep
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "on_segment_2D?"
                                                                         (-1
                                                                          -2))
                                                                        (("2"
                                                                          (skolem
                                                                           -
                                                                           "tv")
                                                                          (("2"
                                                                            (skolem
                                                                             -
                                                                             "tw")
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (inst
                                                                                 +
                                                                                 "tv"
                                                                                 "tw")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (case
                                                                                     "NOT v = segstart1+tv*v_1")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -3
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "v_1"
                                                                                         1)
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "NOT w = segstart2+tw*w_1")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -7
                                                                                         1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "w_1"
                                                                                           1)
                                                                                          (("1"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (copy
                                                                                         -9)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -3
                                                                                           -1)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -2
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "a"
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "b"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "c"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "d_1"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "ee"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "f"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "s_1"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (hide-all-but
                                                                                                             (-1
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (flatten)
        (("2" (expand "segments_2D_close" :assert? none)
          (("2" (lemma "near_edge_def")
            (("2" (split -)
              (("1" (inst?)
                (("1" (assert)
                  (("1" (skeep)
                    (("1" (inst + "w" "segstart1")
                      (("1" (assert)
                        (("1" (expand "on_segment_2D?")
                          (("1" (inst + "0")
                            (("1" (hide -) (("1" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (split -)
                  (("1" (hide 1)
                    (("1" (inst?)
                      (("1" (assert)
                        (("1" (skeep)
                          (("1" (inst + "w" "segend1")
                            (("1" (assert)
                              (("1"
                                (expand "on_segment_2D?")
                                (("1"
                                  (inst + "1")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (flatten)
                    (("2" (split -)
                      (("1" (hide (1 2))
                        (("1" (inst?)
                          (("1" (assert)
                            (("1" (skeep)
                              (("1"
                                (inst + "segstart2" "w")
                                (("1"
                                  (assert)
                                  (("1"
                                    (split)
                                    (("1"
                                      (expand "on_segment_2D?" +)
                                      (("1"
                                        (inst + "0")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide (-1 -2))
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten)
                        (("2" (split -)
                          (("1" (hide (1 2 3))
                            (("1" (inst?)
                              (("1"
                                (assert)
                                (("1"
                                  (skeep)
                                  (("1"
                                    (inst + "segend2" "w")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (split)
                                        (("1"
                                          (expand "on_segment_2D?")
                                          (("1"
                                            (inst + "1")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide (-1 -2))
                                          (("2" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (flatten)
                            (("2" (split -)
                              (("1" (propax) nil nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (skoletin)
                                  (("2"
                                    (skoletin)
                                    (("2"
                                      (skoletin)
                                      (("2"
                                        (skoletin)
                                        (("2"
                                          (skoletin)
                                          (("2"
                                            (skoletin)
                                            (("2"
                                              (skoletin)
                                              (("2"
                                                (skoletin)
                                                (("2"
                                                  (skoletin)
                                                  (("2"
                                                    (lemma
                                                     "quad_min_unit_box_def_lt")
                                                    (("2"
                                                      (inst
                                                       -
                                                       "sq(BUFF)"
                                                       "a"
                                                       "b"
                                                       "c"
                                                       "d_1"
                                                       "ee"
                                                       "f")
                                                      (("2"
                                                        (lemma
                                                         "quad_min_unit_box_def_eq")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "sq(BUFF)"
                                                           "a"
                                                           "b"
                                                           "c"
                                                           "d_1"
                                                           "ee"
                                                           "f")
                                                          (("2"
                                                            (case
                                                             "NOT ((rev_disc(a, b, c) = 0 AND 2 * ee * a = c * d_1) OR rev_disc(a, b, c) < 0)")
                                                            (("1"
                                                              (hide
                                                               (-1 -2))
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (case
                                                                   "rev_disc(a,b,c)=0")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (lemma
                                                                       "rev_0_global_min
")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "s_1"
                                                                         "v_1"
                                                                         "w_1")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "rev_disc"
                                                                             -1)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     2)
                                                                    (("2"
                                                                      (case
                                                                       "rev_disc(a,b,c)<=0")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         (2
                                                                          3))
                                                                        (("2"
                                                                          (expand
                                                                           "rev_disc"
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "a"
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "b"
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "c"
                                                                                 1)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "sq_times")
                                                                                  (("2"
                                                                                    (rewrite
                                                                                     "sq_neg")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "sq"
                                                                                       1
                                                                                       1)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "vectors_2D.cauchy_schwarz")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "v_1"
                                                                                           "w_1")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "NOT (EXISTS (x, y:real):
                0 <= x AND x <= 1 AND 0 <= y AND y <= 1
            AND quad(a, b, c, d_1, ee, f)(x, y) < sq(BUFF))")
                                                              (("1"
                                                                (ground)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 (-2
                                                                  -3
                                                                  -4))
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (name
                                                                     "ww"
                                                                     "segstart2+y*(segend2-segstart2)")
                                                                    (("2"
                                                                      (name
                                                                       "vv"
                                                                       "segstart1+x*(segend1-segstart1)")
                                                                      (("2"
                                                                        (inst
                                                                         +
                                                                         "ww"
                                                                         "vv")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (split
                                                                             +)
                                                                            (("1"
                                                                              (expand
                                                                               "on_segment_2D?")
                                                                              (("1"
                                                                                (inst
                                                                                 +
                                                                                 "x")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (replaces
                                                                                     -1
                                                                                     1
                                                                                     :dir
                                                                                     rl)
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "on_segment_2D?")
                                                                              (("2"
                                                                                (inst
                                                                                 +
                                                                                 "y")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (replaces
                                                                                     -2
                                                                                     1
                                                                                     :dir
                                                                                     rl)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (assert)
                                                                              (("3"
                                                                                (copy
                                                                                 -7)
                                                                                (("3"
                                                                                  (expand
                                                                                   "a"
                                                                                   -1)
                                                                                  (("3"
                                                                                    (expand
                                                                                     "b"
                                                                                     -1)
                                                                                    (("3"
                                                                                      (expand
                                                                                       "c"
                                                                                       -1)
                                                                                      (("3"
                                                                                        (expand
                                                                                         "d_1"
                                                                                         -1)
                                                                                        (("3"
                                                                                          (expand
                                                                                           "ee"
                                                                                           -1)
                                                                                          (("3"
                                                                                            (expand
                                                                                             "f"
                                                                                             -1)
                                                                                            (("3"
                                                                                              (expand
                                                                                               "s_1"
                                                                                               -1)
                                                                                              (("3"
                                                                                                (replaces
                                                                                                 -2
                                                                                                 1
                                                                                                 :dir
                                                                                                 rl)
                                                                                                (("3"
                                                                                                  (replaces
                                                                                                   -2
                                                                                                   1
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("3"
                                                                                                    (expand
                                                                                                     "v_1"
                                                                                                     -1)
                                                                                                    (("3"
                                                                                                      (expand
                                                                                                       "w_1"
                                                                                                       -1)
                                                                                                      (("3"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          1))
                                                                                                        (("3"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((quad_min_unit_box_def_lt formula-decl nil double_quadratic reals)
    (quad_min_unit_box_def_eq formula-decl nil double_quadratic reals)
    (rev_disc const-decl "real" double_quadratic reals)
    (sq_neg formula-decl nil sq reals)
    (cauchy_schwarz formula-decl nil vectors_2D vectors)
    (sq_times formula-decl nil sq reals)
    (quad const-decl "real" double_quadratic reals)
    (sq const-decl "nonneg_real" sq reals)
    (quad_min_unit_box const-decl "bool" double_quadratic reals)
    (Vector type-eq-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sub_eq_zero formula-decl nil vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (sub_eq_args formula-decl nil vectors_2D vectors)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_0 formula-decl nil vectors_2D vectors)
    (scal_1 formula-decl nil vectors_2D vectors)
    (add_zero_left formula-decl nil vectors_2D vectors))
   nil)
  (segments_2D_close_def-4 nil 3635763347
   ("" (skeep)
    (("" (expand "segments_2D_close" :assert? none)
      (("" (split +)
        (("1" (propax) nil nil)
         ("2" (flatten)
          (("2" (split +)
            (("1" (propax) nil nil)
             ("2" (flatten)
              (("2" (split +)
                (("1" (propax) nil nil)
                 ("2" (flatten)
                  (("2" (split +)
                    (("1" (propax) nil nil)
                     ("2" (flatten)
                      (("2" (split +)
                        (("1" (split)
                          (("1" (lemma "vectors_2D.sqv_eq_0")
                            (("1" (inst?)
                              (("1"
                                (assert)
                                (("1"
                                  (rewrite "sub_eq_zero")
                                  (("1"
                                    (replace -1 :dir rl)
                                    (("1"
                                      (skeep)
                                      (("1"
                                        (case "v = segend1")
                                        (("1"
                                          (hide (1 2 4))
                                          (("1"
                                            (lemma "near_edge_def")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst + "w")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replace -1)
                                          (("2"
                                            (expand
                                             "on_segment_2D?"
                                             -3)
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (replaces -5)
                                                (("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (decompose-equality)
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (lemma "vectors_2D.sqv_eq_0")
                            (("2" (inst?)
                              (("2"
                                (assert)
                                (("2"
                                  (rewrite "sub_eq_zero")
                                  (("2"
                                    (replace -1 :dir rl)
                                    (("2"
                                      (skeep)
                                      (("2"
                                        (case "w = segend2")
                                        (("1"
                                          (hide (2 3 4))
                                          (("1"
                                            (lemma "near_edge_def")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst + "v")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (case
                                                       "sqv(v-segend2)=sqv(segend2-v)")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         1)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "on_segment_2D?" -4)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (replaces -6 1)
                                              (("2"
                                                (hide-all-but 1)
                                                (("2"
                                                  (decompose-equality)
                                                  (("1"
                                                    (grind)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten)
                          (("2" (skoletin)
                            (("2" (skoletin)
                              (("2"
                                (skoletin)
                                (("2"
                                  (skoletin)
                                  (("2"
                                    (skoletin)
                                    (("2"
                                      (skoletin)
                                      (("2"
                                        (skoletin)
                                        (("2"
                                          (skoletin)
                                          (("2"
                                            (skoletin)
                                            (("2"
                                              (lemma
                                               "quad_min_unit_box_def_lt")
                                              (("2"
                                                (inst
                                                 -
                                                 "sq(BUFF)"
                                                 "a"
                                                 "b"
                                                 "c"
                                                 "d_1"
                                                 "ee"
                                                 "f")
                                                (("2"
                                                  (lemma
                                                   "quad_min_unit_box_def_eq")
                                                  (("2"
                                                    (inst
                                                     -
                                                     "sq(BUFF)"
                                                     "a"
                                                     "b"
                                                     "c"
                                                     "d_1"
                                                     "ee"
                                                     "f")
                                                    (("2"
                                                      (case
                                                       "NOT ((rev_disc(a, b, c) = 0 AND 2 * ee * a = c * d_1) OR rev_disc(a, b, c) < 0)")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (hide
                                                           (-1 -2))
                                                          (("1"
                                                            (case
                                                             "rev_disc(a,b,c)=0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (lemma
                                                                 "rev_0_global_min")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "s_1"
                                                                   "v_1"
                                                                   "w_1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "rev_disc"
                                                                       -1)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (case
                                                                 "rev_disc(a,b,c)<=0")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   (2
                                                                    3))
                                                                  (("2"
                                                                    (replaces
                                                                     -4
                                                                     1)
                                                                    (("2"
                                                                      (replaces
                                                                       -4
                                                                       1)
                                                                      (("2"
                                                                        (replaces
                                                                         -4
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "rev_disc"
                                                                           1)
                                                                          (("2"
                                                                            (rewrite
                                                                             "sq_times")
                                                                            (("2"
                                                                              (rewrite
                                                                               "sq_neg")
                                                                              (("2"
                                                                                (expand
                                                                                 "sq"
                                                                                 1
                                                                                 1)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "vectors_2D.cauchy_schwarz")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "v_1"
                                                                                     "w_1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (replace 1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (case
                                                             "(EXISTS (x, y:real):
                                                                            0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                                        AND quad(a, b, c, d_1, ee, f)(x, y) < sq(BUFF))")
                                                            (("1"
                                                              (ground)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (hide
                                                               (-1
                                                                -2
                                                                -3))
                                                              (("2"
                                                                (copy
                                                                 -10)
                                                                (("2"
                                                                  (skeep
                                                                   -1)
                                                                  (("2"
                                                                    (expand
                                                                     "on_segment_2D?"
                                                                     (-1
                                                                      -2))
                                                                    (("2"
                                                                      (skolem
                                                                       -
                                                                       "tv")
                                                                      (("2"
                                                                        (skolem
                                                                         -
                                                                         "tw")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (inst
                                                                             +
                                                                             "tv"
                                                                             "tw")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (case
                                                                                 "NOT v = segstart1+tv*v_1")
                                                                                (("1"
                                                                                  (replace
                                                                                   -3
                                                                                   1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "v_1"
                                                                                     1)
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "NOT w = segstart2+tw*w_1")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -7
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "w_1"
                                                                                       1)
                                                                                      (("1"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (copy
                                                                                     -9)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -3
                                                                                       -1)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -2
                                                                                         -1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "a"
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "b"
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "c"
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "d_1"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "ee"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "f"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "s_1"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (sub_eq_args formula-decl nil vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (sub_eq_zero formula-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (quad_min_unit_box const-decl "bool" double_quadratic reals)
    (sq const-decl "nonneg_real" sq reals)
    (quad const-decl "real" double_quadratic reals)
    (sq_times formula-decl nil sq reals)
    (cauchy_schwarz formula-decl nil vectors_2D vectors)
    (sq_neg formula-decl nil sq reals)
    (rev_disc const-decl "real" double_quadratic reals)
    (quad_min_unit_box_def_eq formula-decl nil double_quadratic reals)
    (quad_min_unit_box_def_lt formula-decl nil double_quadratic reals))
   nil)
  (segments_2D_close_def-3 nil 3635763150
   ("" (skeep)
    (("" (expand "segments_2D_close" :assert? none)
      (("" (split +)
        (("1" (propax) nil nil)
         ("2" (flatten)
          (("2" (split +)
            (("1" (propax) nil nil)
             ("2" (flatten)
              (("2" (split +)
                (("1" (propax) nil nil)
                 ("2" (flatten)
                  (("2" (split +)
                    (("1" (propax) nil nil)
                     ("2" (flatten)
                      (("2" (split +)
                        (("1" (split)
                          (("1" (lemma "vectors_2D.sqv_eq_0")
                            (("1" (inst?)
                              (("1"
                                (assert)
                                (("1"
                                  (rewrite "sub_eq_zero")
                                  (("1"
                                    (replace -1 :dir rl)
                                    (("1"
                                      (skeep)
                                      (("1"
                                        (case "v = segend1")
                                        (("1"
                                          (hide (1 2 4))
                                          (("1"
                                            (lemma "near_edge_def")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst + "w")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replace -1)
                                          (("2"
                                            (expand
                                             "on_segment_2D?"
                                             -3)
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (replaces -5)
                                                (("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (decompose-equality)
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (lemma "vectors_2D.sqv_eq_0")
                            (("2" (inst?)
                              (("2"
                                (assert)
                                (("2"
                                  (rewrite "sub_eq_zero")
                                  (("2"
                                    (replace -1 :dir rl)
                                    (("2"
                                      (skeep)
                                      (("2"
                                        (case "w = segend2")
                                        (("1"
                                          (hide (2 3 4))
                                          (("1"
                                            (lemma "near_edge_def")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst + "v")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (case
                                                       "sqv(v-segend2)=sqv(segend2-v)")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         1)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "on_segment_2D?" -4)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (replaces -6 1)
                                              (("2"
                                                (hide-all-but 1)
                                                (("2"
                                                  (decompose-equality)
                                                  (("1"
                                                    (grind)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten)
                          (("2" (skoletin)
                            (("2" (skoletin)
                              (("2"
                                (skoletin)
                                (("2"
                                  (skoletin)
                                  (("2"
                                    (skoletin)
                                    (("2"
                                      (skoletin)
                                      (("2"
                                        (skoletin)
                                        (("2"
                                          (skoletin)
                                          (("2"
                                            (skoletin)
                                            (("2"
                                              (lemma
                                               "quad_min_unit_box_def_lt")
                                              (("2"
                                                (inst
                                                 -
                                                 "sq(BUFF)"
                                                 "a"
                                                 "b"
                                                 "c"
                                                 "d_1"
                                                 "ee"
                                                 "f")
                                                (("2"
                                                  (lemma
                                                   "quad_min_unit_box_def_eq")
                                                  (("2"
                                                    (inst
                                                     -
                                                     "sq(BUFF)"
                                                     "a"
                                                     "b"
                                                     "c"
                                                     "d_1"
                                                     "ee"
                                                     "f")
                                                    (("2"
                                                      (case
                                                       "NOT ((rev_disc(a, b, c) = 0 AND 2 * ee * a = c * d_1) OR rev_disc(a, b, c) < 0)")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (hide
                                                           (-1 -2))
                                                          (("1"
                                                            (case
                                                             "rev_disc(a,b,c)=0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (lemma
                                                                 "rev_0_global_min")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "s_1"
                                                                   "v_1"
                                                                   "w_1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "rev_disc"
                                                                       -1)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (case
                                                                 "rev_disc(a,b,c)<=0")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   (2
                                                                    3))
                                                                  (("2"
                                                                    (replaces
                                                                     -4
                                                                     1)
                                                                    (("2"
                                                                      (replaces
                                                                       -4
                                                                       1)
                                                                      (("2"
                                                                        (replaces
                                                                         -4
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "rev_disc"
                                                                           1)
                                                                          (("2"
                                                                            (rewrite
                                                                             "sq_times")
                                                                            (("2"
                                                                              (rewrite
                                                                               "sq_neg")
                                                                              (("2"
                                                                                (expand
                                                                                 "sq"
                                                                                 1
                                                                                 1)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "vectors_2D.cauchy_schwarz")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "v_1"
                                                                                     "w_1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (replace 1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (case
                                                             "(EXISTS (x, y:real):
                                                         0 <= x AND x <= 1 AND 0 <= y AND y <= 1
                                                     AND quad(a, b, c, d_1, ee, f)(x, y) < sq(BUFF))")
                                                            (("1"
                                                              (ground)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (hide
                                                               (-1
                                                                -2
                                                                -3))
                                                              (("2"
                                                                (copy
                                                                 -10)
                                                                (("2"
                                                                  (skeep
                                                                   -1)
                                                                  (("2"
                                                                    (expand
                                                                     "on_segment_2D?"
                                                                     (-1
                                                                      -2))
                                                                    (("2"
                                                                      (skolem
                                                                       -
                                                                       "tv")
                                                                      (("2"
                                                                        (skolem
                                                                         -
                                                                         "tw")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (inst
                                                                             +
                                                                             "tw"
                                                                             "tv")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (case
                                                                                 "NOT v = segstart1+tv*v_1")
                                                                                (("1"
                                                                                  (replace
                                                                                   -3
                                                                                   1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "v_1"
                                                                                     1)
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "NOT w = segstart2+tw*w_1")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -7
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "w_1"
                                                                                       1)
                                                                                      (("1"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (copy
                                                                                     -9)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -3
                                                                                       -1)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -2
                                                                                         -1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "a"
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "b"
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "c"
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "d_1"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "ee"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "f"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "s_1"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          (("2"
                                                                                                            (postpone)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil nil)
  (segments_2D_close_def-2 nil 3577608909
   ("" (skeep)
    (("" (expand "segments_2D_close" :assert? none)
      (("" (split +)
        (("1" (propax) nil nil)
         ("2" (flatten)
          (("2" (split +)
            (("1" (propax) nil nil)
             ("2" (flatten)
              (("2" (split +)
                (("1" (propax) nil nil)
                 ("2" (flatten)
                  (("2" (split +)
                    (("1" (propax) nil nil)
                     ("2" (flatten)
                      (("2" (split +)
                        (("1" (split)
                          (("1" (lemma "vectors_2D.sqv_eq_0")
                            (("1" (inst?)
                              (("1"
                                (assert)
                                (("1"
                                  (rewrite "sub_eq_zero")
                                  (("1"
                                    (replace -1 :dir rl)
                                    (("1"
                                      (skeep)
                                      (("1"
                                        (case "v = segend1")
                                        (("1"
                                          (hide (1 2 4))
                                          (("1"
                                            (lemma "near_edge_def")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst + "w")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replace -1)
                                          (("2"
                                            (expand
                                             "on_segment_2D?"
                                             -3)
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (replaces -5)
                                                (("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (decompose-equality)
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (lemma "vectors_2D.sqv_eq_0")
                            (("2" (inst?)
                              (("2"
                                (assert)
                                (("2"
                                  (rewrite "sub_eq_zero")
                                  (("2"
                                    (replace -1 :dir rl)
                                    (("2"
                                      (skeep)
                                      (("2"
                                        (case "w = segend2")
                                        (("1"
                                          (hide (2 3 4))
                                          (("1"
                                            (lemma "near_edge_def")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst + "v")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (case
                                                       "sqv(v-segend2)=sqv(segend2-v)")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         1)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "on_segment_2D?" -4)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (replaces -6 1)
                                              (("2"
                                                (hide-all-but 1)
                                                (("2"
                                                  (decompose-equality)
                                                  (("1"
                                                    (grind)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten)
                          (("2" (skoletin)
                            (("2" (skoletin)
                              (("2"
                                (skoletin)
                                (("2"
                                  (skoletin)
                                  (("2"
                                    (skoletin)
                                    (("2"
                                      (skoletin)
                                      (("2"
                                        (skoletin)
                                        (("2"
                                          (skoletin)
                                          (("2"
                                            (skoletin)
                                            (("2"
                                              (lemma
                                               "quad_min_unit_box_def_lt")
                                              (("2"
                                                (inst
                                                 -
                                                 "BUFF"
                                                 "a"
                                                 "b"
                                                 "c"
                                                 "d_1"
                                                 "ee"
                                                 "f")
                                                (("2"
                                                  (lemma
                                                   "quad_min_unit_box_def_eq")
                                                  (("2"
                                                    (inst
                                                     -
                                                     "BUFF"
                                                     "a"
                                                     "b"
                                                     "c"
                                                     "d_1"
                                                     "ee"
                                                     "f")
                                                    (("2"
                                                      (case
                                                       "NOT ((rev_disc(a, b, c) = 0 AND 2 * ee * a = c * d_1) OR rev_disc(a, b, c) < 0)")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (hide
                                                           (-1 -2))
                                                          (("1"
                                                            (case
                                                             "rev_disc(a,b,c)=0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (lemma
                                                                 "rev_0_global_min")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "s_1"
                                                                   "v_1"
                                                                   "w_1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "rev_disc"
                                                                       -1)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (case
                                                                 "rev_disc(a,b,c)<=0")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   (2
                                                                    3))
                                                                  (("2"
                                                                    (replaces
                                                                     -4
                                                                     1)
                                                                    (("2"
                                                                      (replaces
                                                                       -4
                                                                       1)
                                                                      (("2"
                                                                        (replaces
                                                                         -4
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "rev_disc"
                                                                           1)
                                                                          (("2"
                                                                            (rewrite
                                                                             "sq_times")
                                                                            (("2"
                                                                              (rewrite
                                                                               "sq_neg")
                                                                              (("2"
                                                                                (expand
                                                                                 "sq"
                                                                                 1
                                                                                 1)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "vectors_2D.cauchy_schwarz")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "v_1"
                                                                                     "w_1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (replace 1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (case
                                                             "(EXISTS (x, y:real):
                   0 <= x AND x <= 1 AND 0 <= y AND y <= 1
               AND quad(a, b, c, d_1, ee, f)(x, y) < BUFF)")
                                                            (("1"
                                                              (ground)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (hide
                                                               (-1
                                                                -2
                                                                -3))
                                                              (("2"
                                                                (copy
                                                                 -10)
                                                                (("2"
                                                                  (skeep
                                                                   -1)
                                                                  (("2"
                                                                    (expand
                                                                     "on_segment_2D?"
                                                                     (-1
                                                                      -2))
                                                                    (("2"
                                                                      (skolem
                                                                       -
                                                                       "tv")
                                                                      (("2"
                                                                        (skolem
                                                                         -
                                                                         "tw")
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (inst
                                                                             +
                                                                             "tw"
                                                                             "tv")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (case
                                                                                 "NOT v = segstart1+tv*v_1")
                                                                                (("1"
                                                                                  (replace
                                                                                   -3
                                                                                   1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "v_1"
                                                                                     1)
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "NOT w = segstart2+tw*w_1")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -7
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "w_1"
                                                                                       1)
                                                                                      (("1"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (copy
                                                                                     -9)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -3
                                                                                       -1)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -2
                                                                                         -1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "a"
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "b"
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "c"
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "d_1"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "ee"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "f"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "s_1"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          (("2"
                                                                                                            (postpone)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Nz_vector type-eq-decl nil vectors_2D vectors)
    (parallel_symm formula-decl nil vectors_2D vectors)
    (parallel? const-decl "bool" vectors_2D vectors)
    (add_cancel_neg2 formula-decl nil vectors_2D vectors)
    (scal_1 formula-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (add_cancel2 formula-decl nil vectors_2D vectors)
    (scal_0 formula-decl nil vectors_2D vectors)
    (orthogonal? const-decl "bool" vectors_2D vectors)
    (neg_zero formula-decl nil vectors_2D vectors)
    (neg_neg formula-decl nil vectors_2D vectors)
    (sqv_zero formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (sub_eq_zero formula-decl nil vectors_2D vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (dot_zero_left formula-decl nil vectors_2D vectors)
    (sub_eq_args formula-decl nil vectors_2D vectors))
   nil)
  (segments_2D_close_def-1 nil 3577467340
   ("" (skeep)
    (("" (expand "segments_2D_close" :assert? none)
      (("" (skoletin 1)
        (("" (skoletin 1)
          (("" (split +)
            (("1" (flatten)
              (("1" (skoletin -1)
                (("1" (split -1)
                  (("1" (flatten)
                    (("1" (typepred "tt1")
                      (("1" (assert)
                        (("1" (replace -7 :dir rl)
                          (("1" (label "cpointname" -7)
                            (("1" (typepred "tt2")
                              (("1"
                                (assert)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (expand "segment_2Ds_cross")
                                    (("1"
                                      (inst + "cpoint")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (split +)
                                          (("1"
                                            (expand "on_segment_2D?")
                                            (("1"
                                              (inst + "tt1")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "cpoint" 1)
                                                  (("1"
                                                    (hide-all-but 1)
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "on_segment_2D?")
                                            (("2"
                                              (inst + "tt2")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (expand
                                                   "on_segment_2D?"
                                                   -1)
                                                  (("2"
                                                    (skolem -1 "tstar")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (inst
                                                         -4
                                                         "tstar")
                                                        (("1"
                                                          (case
                                                           "on_segment_2D?(segstart2, segend2,
                                                                              segstart1 + tstar * (segend1 - segstart1))")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replace
                                                               -5)
                                                              (("1"
                                                                (expand
                                                                 "cpoint"
                                                                 1)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (hide-all-but
                                                                     (-4
                                                                      1))
                                                                    (("1"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "on_segment_2D?"
                                                             1)
                                                            (("2"
                                                              (inst
                                                               +
                                                               "tt2")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (hide-all-but
                                                                     (-3
                                                                      1))
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (flatten)
                    (("2" (split -2)
                      (("1" (propax) nil nil)
                       ("2" (flatten)
                        (("2" (skoletin -2)
                          (("2" (label "onestartname" -2)
                            (("2" (skoletin -1)
                              (("2"
                                (label "oneendname" -2)
                                (("2"
                                  (skoletin -1)
                                  (("2"
                                    (label "twostartname" -2)
                                    (("2"
                                      (skoletin -1)
                                      (("2"
                                        (label "twoendname" -2)
                                        (("2"
                                          (label "intlem" -1)
                                          (("2"
                                            (lemma "orthogonal_basis")
                                            (("2"
                                              (case
                                               "segend1=segstart1")
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (name
                                                   "B1"
                                                   "segend1-segstart1")
                                                  (("2"
                                                    (label "B1name" -1)
                                                    (("2"
                                                      (inst
                                                       -
                                                       "B1"
                                                       "perpR(B1)"
                                                       _)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (case
                                                           "B1/=zero AND perpR(B1)/=zero")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (case
                                                                 "NOT orthogonal?(B1,perpR(B1))")
                                                                (("1"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("1"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (label
                                                                     "ob"
                                                                     -3)
                                                                    (("2"
                                                                      (inst-cp
                                                                       -
                                                                       "segend1-segstart1")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "segstart2-segstart1")
                                                                        (("2"
                                                                          (inst-cp
                                                                           -
                                                                           "segend2-segstart1")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (label
                                                                               "oblem"
                                                                               -3)
                                                                              (("2"
                                                                                (expand
                                                                                 "B1"
                                                                                 "ob")
                                                                                (("2"
                                                                                  (replace
                                                                                   "twoendname"
                                                                                   :dir
                                                                                   rl)
                                                                                  (("2"
                                                                                    (replace
                                                                                     "twostartname"
                                                                                     :dir
                                                                                     rl)
                                                                                    (("2"
                                                                                      (replace
                                                                                       "oneendname"
                                                                                       :dir
                                                                                       rl)
                                                                                      (("2"
                                                                                        (name
                                                                                         "K"
                                                                                         "sqv(segend1-segstart1)")
                                                                                        (("2"
                                                                                          (label
                                                                                           "Kname"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (case
                                                                                               "K>0")
                                                                                              (("1"
                                                                                                (label
                                                                                                 "Kpos"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "sqv_perpR")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "NOT ((segend1 - segstart1) * perpR(segend1 - segstart1)) = 0")
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replaces
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "NOT ((segend2 - segstart1) * perpR(segend1 - segstart1)) = 0")
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             (-14
                                                                                                              -15
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (replaces
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (case
                                                                                                                 "NOT ((segstart2 - segstart1) * perpR(segend1 - segstart1)) = 0")
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   (-14
                                                                                                                    -15
                                                                                                                    1))
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (replaces
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (name
                                                                                                                     "betweend"
                                                                                                                     "LAMBDA (aa,bb:real): LAMBDA (cc:real): (aa<cc AND cc<bb) OR (bb<cc AND cc<aa)")
                                                                                                                    (("2"
                                                                                                                      (label
                                                                                                                       "betweendname"
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "FORALL (aa,bb,cc:real): betweend(aa,bb)(cc) IMPLIES EXISTS (at1:real): 0<at1 AND at1<1 AND cc = (1-at1)*aa + at1*bb")
                                                                                                                        (("1"
                                                                                                                          (label
                                                                                                                           "betweendlem"
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "EXISTS (rr:real): betweend(twostart/K,twoend/K)(rr) AND betweend(onestart/K,oneend/K)(rr)")
                                                                                                                            (("1"
                                                                                                                              (skeep
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (inst-cp
                                                                                                                                 -3
                                                                                                                                 "onestart/K"
                                                                                                                                 "oneend/K"
                                                                                                                                 "rr")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "twostart/K"
                                                                                                                                   "twoend/K"
                                                                                                                                   "rr")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (skosimp*)
                                                                                                                                      (("1"
                                                                                                                                        (name
                                                                                                                                         "ss"
                                                                                                                                         "(1-at1!2)*segstart1 + at1!2*segend1")
                                                                                                                                        (("1"
                                                                                                                                          (case
                                                                                                                                           "ss=(1-at1!1)*segstart2 + at1!1*segend2")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "segment_2Ds_cross")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               +
                                                                                                                                               "ss")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "on_segment_2D?")
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   +)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "at1!2")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "at1!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (hide
                                                                                                                                             5)
                                                                                                                                            (("2"
                                                                                                                                              (both-sides
                                                                                                                                               "+"
                                                                                                                                               "segstart1"
                                                                                                                                               -16)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (both-sides
                                                                                                                                                   "+"
                                                                                                                                                   "segstart1"
                                                                                                                                                   -17)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -16
                                                                                                                                                       1)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -17
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "ss = rr*(segend1-segstart1)+segstart1")
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -7
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (grind)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (hide
                                                                                                                                                             2)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -9
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -1
                                                                                                                                                                 1
                                                                                                                                                                 :dir
                                                                                                                                                                 rl)
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   "onestartname")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "oneend/K = 1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (hide-all-but
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (grind)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (cross-mult
                                                                                                                                                                         1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "K"
                                                                                                                                                                           1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "sqv"
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -17
                                                                                                                                                       :dir
                                                                                                                                                       rl)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -16
                                                                                                                                                   :dir
                                                                                                                                                   rl)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (case
                                                                                                                               "EXISTS (rr: real):
                                       betweend(twostart, twoend)(rr) AND
                                        betweend(onestart, oneend)(rr)")
                                                                                                                              (("1"
                                                                                                                                (hide-all-but
                                                                                                                                 (-1
                                                                                                                                  "Kpos"
                                                                                                                                  1))
                                                                                                                                (("1"
                                                                                                                                  (skeep
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     +
                                                                                                                                     "rr/K")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "betweend")
                                                                                                                                      (("1"
                                                                                                                                        (ground)
                                                                                                                                        (("1"
                                                                                                                                          (div-by
                                                                                                                                           -3
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (div-by
                                                                                                                                           -4
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("3"
                                                                                                                                          (div-by
                                                                                                                                           -1
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("4"
                                                                                                                                          (div-by
                                                                                                                                           -2
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("5"
                                                                                                                                          (div-by
                                                                                                                                           -3
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("6"
                                                                                                                                          (div-by
                                                                                                                                           -4
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("7"
                                                                                                                                          (div-by
                                                                                                                                           -1
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("8"
                                                                                                                                          (div-by
                                                                                                                                           -2
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("9"
                                                                                                                                          (div-by
                                                                                                                                           -3
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("10"
                                                                                                                                          (div-by
                                                                                                                                           -4
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("11"
                                                                                                                                          (div-by
                                                                                                                                           -1
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("12"
                                                                                                                                          (div-by
                                                                                                                                           -2
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("13"
                                                                                                                                          (div-by
                                                                                                                                           -3
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("14"
                                                                                                                                          (div-by
                                                                                                                                           -4
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("15"
                                                                                                                                          (div-by
                                                                                                                                           -1
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("16"
                                                                                                                                          (div-by
                                                                                                                                           -2
                                                                                                                                           "K")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "twostart = twoend")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (case
                                                                                                                                           "segstart2 = segend2")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "segment_2Ds_cross")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "segend2")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "on_segment_2D?")
                                                                                                                                                        (("1"
                                                                                                                                                          (split
                                                                                                                                                           +)
                                                                                                                                                          (("1"
                                                                                                                                                            (postpone)
                                                                                                                                                            nil
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (postpone)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (postpone)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (postpone)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (postpone)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (postpone)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (postpone)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (postpone) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)))

